# compiler: R8
# compiler_version: 3.3.83
# min_api: 24
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 26df33d
# pg_map_hash: SHA-256 26df33dc22b7dfd7d77e7e9baf4596bd77834951b9d95056f8ce72cb1fd834ef
android.app.AppComponentFactory -> android.app.AppComponentFactory:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
      # {"id":"com.android.tools.r8.synthesized"}
android.app.GameManager -> android.app.GameManager:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void setGameState(android.app.GameState) -> setGameState
      # {"id":"com.android.tools.r8.synthesized"}
android.app.PictureInPictureParams$Builder -> android.app.PictureInPictureParams$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.PictureInPictureParams build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.PictureInPictureParams$Builder setAspectRatio(android.util.Rational) -> setAspectRatio
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.PictureInPictureParams$Builder setSourceRectHint(android.graphics.Rect) -> setSourceRectHint
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.PictureInPictureParams$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.PictureInPictureParams$Builder setTitle(java.lang.CharSequence) -> setTitle
      # {"id":"com.android.tools.r8.synthesized"}
android.arch.lifecycle.ViewModel -> android.arch.lifecycle.ViewModel:
    96:96:void <init>() -> <init>
android.content.pm.ShortcutInfo -> android.content.pm.ShortcutInfo:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String getId() -> getId
      # {"id":"com.android.tools.r8.synthesized"}
    int getRank() -> getRank
      # {"id":"com.android.tools.r8.synthesized"}
android.content.pm.ShortcutInfo$Builder -> android.content.pm.ShortcutInfo$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.content.Context,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.pm.ShortcutInfo build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.pm.ShortcutInfo$Builder setIcon(android.graphics.drawable.Icon) -> setIcon
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.pm.ShortcutInfo$Builder setIntent(android.content.Intent) -> setIntent
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.pm.ShortcutInfo$Builder setLongLabel(java.lang.CharSequence) -> setLongLabel
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.pm.ShortcutInfo$Builder setShortLabel(java.lang.CharSequence) -> setShortLabel
      # {"id":"com.android.tools.r8.synthesized"}
android.content.pm.ShortcutManager -> android.content.pm.ShortcutManager:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean addDynamicShortcuts(java.util.List) -> addDynamicShortcuts
      # {"id":"com.android.tools.r8.synthesized"}
    void disableShortcuts(java.util.List,java.lang.CharSequence) -> disableShortcuts
      # {"id":"com.android.tools.r8.synthesized"}
    void enableShortcuts(java.util.List) -> enableShortcuts
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List getDynamicShortcuts() -> getDynamicShortcuts
      # {"id":"com.android.tools.r8.synthesized"}
    int getMaxShortcutCountPerActivity() -> getMaxShortcutCountPerActivity
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List getPinnedShortcuts() -> getPinnedShortcuts
      # {"id":"com.android.tools.r8.synthesized"}
    void removeDynamicShortcuts(java.util.List) -> removeDynamicShortcuts
      # {"id":"com.android.tools.r8.synthesized"}
    void reportShortcutUsed(java.lang.String) -> reportShortcutUsed
      # {"id":"com.android.tools.r8.synthesized"}
    boolean updateShortcuts(java.util.List) -> updateShortcuts
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder -> android.graphics.ImageDecoder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.ImageDecoder$Source createSource(java.io.File) -> createSource
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener) -> decodeBitmap
      # {"id":"com.android.tools.r8.synthesized"}
    void setMemorySizePolicy(int) -> setMemorySizePolicy
      # {"id":"com.android.tools.r8.synthesized"}
    void setTargetSize(int,int) -> setTargetSize
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder$ImageInfo -> android.graphics.ImageDecoder$ImageInfo:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.util.Size getSize() -> getSize
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.ImageDecoder$OnHeaderDecodedListener -> android.graphics.ImageDecoder$OnHeaderDecodedListener:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.Typeface$Builder -> android.graphics.Typeface$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(java.io.FileDescriptor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface$Builder setItalic(boolean) -> setItalic
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Typeface$Builder setWeight(int) -> setWeight
      # {"id":"com.android.tools.r8.synthesized"}
android.graphics.fonts.FontVariationAxis -> android.graphics.fonts.FontVariationAxis:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String) -> fromFontVariationSettings
      # {"id":"com.android.tools.r8.synthesized"}
android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint -> android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(int,int,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean covers(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint) -> covers
      # {"id":"com.android.tools.r8.synthesized"}
android.media.VolumeAutomation -> android.media.VolumeAutomation:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
android.net.ssl.SSLSockets -> android.net.ssl.SSLSockets:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean isSupportedSocket(javax.net.ssl.SSLSocket) -> isSupportedSocket
      # {"id":"com.android.tools.r8.synthesized"}
    void setUseSessionTickets(javax.net.ssl.SSLSocket,boolean) -> setUseSessionTickets
      # {"id":"com.android.tools.r8.synthesized"}
android.os.CombinedVibration -> android.os.CombinedVibration:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.CombinedVibration$ParallelCombination startParallel() -> startParallel
      # {"id":"com.android.tools.r8.synthesized"}
android.os.CombinedVibration$ParallelCombination -> android.os.CombinedVibration$ParallelCombination:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.CombinedVibration$ParallelCombination addVibrator(int,android.os.VibrationEffect) -> addVibrator
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.CombinedVibration combine() -> combine
      # {"id":"com.android.tools.r8.synthesized"}
android.os.VibrationAttributes$Builder -> android.os.VibrationAttributes$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.VibrationAttributes build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.VibrationAttributes$Builder setUsage(int) -> setUsage
      # {"id":"com.android.tools.r8.synthesized"}
android.os.VibrationEffect -> android.os.VibrationEffect:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.VibrationEffect createOneShot(long,int) -> createOneShot
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.VibrationEffect createWaveform(long[],int) -> createWaveform
      # {"id":"com.android.tools.r8.synthesized"}
android.os.VibratorManager -> android.os.VibratorManager:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void cancel() -> cancel
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Vibrator getVibrator(int) -> getVibrator
      # {"id":"com.android.tools.r8.synthesized"}
    int[] getVibratorIds() -> getVibratorIds
      # {"id":"com.android.tools.r8.synthesized"}
    void vibrate(android.os.CombinedVibration,android.os.VibrationAttributes) -> vibrate
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.app.CoreComponentFactory -> android.support.v4.app.CoreComponentFactory:
    37:86:void <init>() -> <init>
    72:78:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    43:43:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    49:49:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    62:62:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    56:56:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    68:68:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
android.support.v4.app.LoaderManagerImpl$LoaderViewModel -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1 -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    150:150:void <clinit>() -> <clinit>
    462:463:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
android.support.v4.content.res.FontResourcesParserCompat -> android.support.v4.content.res.FontResourcesParserCompat:
    230:231:int getType(android.content.res.TypedArray,int) -> getType
    168:176:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    246:270:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:187:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:226:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:155:void <init>(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:86:void <init>(android.support.v4.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:android.support.v4.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    313:316:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback) -> getFont
    336:344:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    356:415:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
android.support.v4.content.res.ResourcesCompat$FontCallback -> android.support.v4.content.res.ResourcesCompat$FontCallback:
    214:214:void <init>() -> <init>
    263:272:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    244:253:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
android.support.v4.content.res.ResourcesCompat$FontCallback$1 -> android.support.v4.content.res.ResourcesCompat$FontCallback$1:
    247:247:void <init>(android.support.v4.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    250:251:void run() -> run
android.support.v4.content.res.ResourcesCompat$FontCallback$2 -> android.support.v4.content.res.ResourcesCompat$FontCallback$2:
    266:266:void <init>(android.support.v4.content.res.ResourcesCompat$FontCallback,int) -> <init>
    269:270:void run() -> run
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    135:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    365:368:int setAlphaComponent(int,int) -> setAlphaComponent
android.support.v4.graphics.TypefaceCompat -> android.support.v4.graphics.TypefaceCompat:
    49:66:void <clinit>() -> <clinit>
    155:155:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    104:130:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    140:146:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    89:89:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    77:77:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
android.support.v4.graphics.TypefaceCompatApi21Impl -> android.support.v4.graphics.TypefaceCompatApi21Impl:
    46:46:void <init>() -> <init>
    66:83:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    51:59:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
android.support.v4.graphics.TypefaceCompatApi24Impl -> android.support.v4.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    156:167:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    134:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
android.support.v4.graphics.TypefaceCompatApi26Impl -> android.support.v4.graphics.TypefaceCompatApi26Impl:
    75:109:void <init>() -> <init>
    196:200:void abortCreation(java.lang.Object) -> abortCreation
    140:145:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    156:160:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    170:175:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    206:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    228:274:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    284:297:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    184:187:boolean freeze(java.lang.Object) -> freeze
    115:119:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    331:331:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    315:315:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    321:321:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    336:340:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    306:306:java.lang.Class obtainFontFamily() -> obtainFontFamily
    310:310:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    327:327:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
android.support.v4.graphics.TypefaceCompatApi28Impl -> android.support.v4.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:67:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
android.support.v4.graphics.TypefaceCompatBaseImpl -> android.support.v4.graphics.TypefaceCompatBaseImpl:
    42:46:void <init>() -> <init>
    140:145:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    86:101:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    154:169:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    124:124:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    52:67:java.lang.Object findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    71:71:android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
android.support.v4.graphics.TypefaceCompatBaseImpl$1 -> android.support.v4.graphics.TypefaceCompatBaseImpl$1:
    71:71:void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    71:71:int getWeight(java.lang.Object) -> getWeight
    74:74:int getWeight(android.support.v4.provider.FontsContractCompat$FontInfo) -> getWeight
    71:71:boolean isItalic(java.lang.Object) -> isItalic
    79:79:boolean isItalic(android.support.v4.provider.FontsContractCompat$FontInfo) -> isItalic
android.support.v4.graphics.TypefaceCompatBaseImpl$2 -> android.support.v4.graphics.TypefaceCompatBaseImpl$2:
    124:124:void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    124:124:int getWeight(java.lang.Object) -> getWeight
    127:127:int getWeight(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    124:124:boolean isItalic(java.lang.Object) -> isItalic
    132:132:boolean isItalic(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
android.support.v4.graphics.TypefaceCompatUtil -> android.support.v4.graphics.TypefaceCompatUtil:
    170:176:void closeQuietly(java.io.Closeable) -> closeQuietly
    119:129:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    137:152:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    160:165:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:74:java.io.File getTempFile(android.content.Context) -> getTempFile
    83:88:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    98:109:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    307:308:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.IconCompat -> android.support.v4.graphics.drawable.IconCompat:
    176:176:void <clinit>() -> <clinit>
    172:308:void <init>() -> <init>
    356:362:int getResId() -> getResId
    945:958:int getResId(android.graphics.drawable.Icon) -> getResId
    338:344:java.lang.String getResPackage() -> getResPackage
    916:929:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    757:786:void onPostParceling() -> onPostParceling
    721:753:void onPreParceling(boolean) -> onPreParceling
    680:716:java.lang.String toString() -> toString
    789:795:java.lang.String typeToString(int) -> typeToString
android.support.v4.graphics.drawable.IconCompat$$ExternalSyntheticApiModelOutline0 -> android.support.v4.graphics.drawable.IconCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int android.support.v4.graphics.drawable.IconCompat$$InternalSyntheticApiModelOutline$1$1bbb52731f95a1238ed666f934e2fd06d95390b3f55099d7b6f7d29933b150da$0.m(android.graphics.drawable.Icon) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.graphics.drawable.IconCompat$$ExternalSyntheticApiModelOutline1 -> android.support.v4.graphics.drawable.IconCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String android.support.v4.graphics.drawable.IconCompat$$InternalSyntheticApiModelOutline$1$ec9f41a330e9026cab5f553ac6d760630ed15b6fca4c1648edc8504653be4457$0.m(android.graphics.drawable.Icon) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    10:10:void <init>() -> <init>
    12:12:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    16:17:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.provider.FontRequest -> android.support.v4.provider.FontRequest:
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
android.support.v4.provider.FontsContractCompat -> android.support.v4.provider.FontsContractCompat:
    174:776:void <clinit>() -> <clinit>
    805:809:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    793:801:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    719:727:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest) -> fetchFonts
    769:773:java.util.List getCertificates(android.support.v4.provider.FontRequest,android.content.res.Resources) -> getCertificates
    816:873:android.support.v4.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    186:200:android.support.v4.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int) -> getFontInternal
    234:320:android.graphics.Typeface getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    736:765:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources) -> getProvider
    681:696:java.util.Map prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
android.support.v4.provider.FontsContractCompat$1 -> android.support.v4.provider.FontsContractCompat$1:
    256:256:void <init>(android.content.Context,android.support.v4.provider.FontRequest,int,java.lang.String) -> <init>
    256:256:java.lang.Object call() -> call
    259:263:android.support.v4.provider.FontsContractCompat$TypefaceResult call() -> call
android.support.v4.provider.FontsContractCompat$2 -> android.support.v4.provider.FontsContractCompat$2:
    275:275:void <init>(android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    275:275:void onReply(java.lang.Object) -> onReply
    278:286:void onReply(android.support.v4.provider.FontsContractCompat$TypefaceResult) -> onReply
android.support.v4.provider.FontsContractCompat$3 -> android.support.v4.provider.FontsContractCompat$3:
    304:304:void <init>(java.lang.String) -> <init>
    304:304:void onReply(java.lang.Object) -> onReply
    308:318:void onReply(android.support.v4.provider.FontsContractCompat$TypefaceResult) -> onReply
android.support.v4.provider.FontsContractCompat$5 -> android.support.v4.provider.FontsContractCompat$5:
    776:776:void <init>() -> <init>
    776:776:int compare(java.lang.Object,java.lang.Object) -> compare
    779:787:int compare(byte[],byte[]) -> compare
android.support.v4.provider.FontsContractCompat$FontFamilyResult -> android.support.v4.provider.FontsContractCompat$FontFamilyResult:
    428:431:void <init>(int,android.support.v4.provider.FontsContractCompat$FontInfo[]) -> <init>
    438:438:android.support.v4.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    434:434:int getStatusCode() -> getStatusCode
android.support.v4.provider.FontsContractCompat$FontInfo -> android.support.v4.provider.FontsContractCompat$FontInfo:
    347:353:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    389:389:int getResultCode() -> getResultCode
    366:366:int getTtcIndex() -> getTtcIndex
    359:359:android.net.Uri getUri() -> getUri
    373:373:int getWeight() -> getWeight
    380:380:boolean isItalic() -> isItalic
android.support.v4.provider.FontsContractCompat$TypefaceResult -> android.support.v4.provider.FontsContractCompat$TypefaceResult:
    213:216:void <init>(android.graphics.Typeface,int) -> <init>
android.support.v4.provider.SelfDestructiveThread -> android.support.v4.provider.SelfDestructiveThread:
    44:84:void <init>(java.lang.String,int,int) -> <init>
    223:233:void onDestruction() -> onDestruction
    214:220:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:117:void post(java.lang.Runnable) -> post
    136:155:void postAndReply(java.util.concurrent.Callable,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
android.support.v4.provider.SelfDestructiveThread$1 -> android.support.v4.provider.SelfDestructiveThread$1:
    58:58:void <init>(android.support.v4.provider.SelfDestructiveThread) -> <init>
    61:69:boolean handleMessage(android.os.Message) -> handleMessage
android.support.v4.provider.SelfDestructiveThread$2 -> android.support.v4.provider.SelfDestructiveThread$2:
    137:137:void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
android.support.v4.provider.SelfDestructiveThread$2$1 -> android.support.v4.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(android.support.v4.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
android.support.v4.provider.SelfDestructiveThread$3 -> android.support.v4.provider.SelfDestructiveThread$3:
    171:171:void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:186:void run() -> run
android.support.v4.text.PrecomputedTextCompat -> android.support.v4.text.PrecomputedTextCompat:
    72:73:void <clinit>() -> <clinit>
    747:747:char charAt(int) -> charAt
    510:510:android.support.v4.text.PrecomputedTextCompat$Params getParams() -> getParams
    499:502:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    722:722:int getSpanEnd(java.lang.Object) -> getSpanEnd
    727:727:int getSpanFlags(java.lang.Object) -> getSpanFlags
    717:717:int getSpanStart(java.lang.Object) -> getSpanStart
    707:710:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    742:742:int length() -> length
    732:732:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    689:698:void removeSpan(java.lang.Object) -> removeSpan
    673:682:void setSpan(java.lang.Object,int,int,int) -> setSpan
    752:752:java.lang.CharSequence subSequence(int,int) -> subSequence
    757:757:java.lang.String toString() -> toString
android.support.v4.text.PrecomputedTextCompat$Params -> android.support.v4.text.PrecomputedTextCompat$Params:
    195:206:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    209:216:void <init>(android.text.PrecomputedText$Params) -> <init>
    271:335:boolean equals(java.lang.Object) -> equals
    249:249:int getBreakStrategy() -> getBreakStrategy
    261:261:int getHyphenationFrequency() -> getHyphenationFrequency
    237:237:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    224:224:android.text.TextPaint getTextPaint() -> getTextPaint
    340:344:int hashCode() -> hashCode
    367:388:java.lang.String toString() -> toString
android.support.v4.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0 -> android.support.v4.text.PrecomputedTextCompat$Params$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String android.support.v4.text.PrecomputedTextCompat$Params$$InternalSyntheticApiModelOutline$2$f7f9a4152716859f878ab0807bf35778b6f30703f6f11e063c93a856a6f07abf$0.m(android.text.TextPaint) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.text.PrecomputedTextCompat$Params$Builder -> android.support.v4.text.PrecomputedTextCompat$Params$Builder:
    115:128:void <init>(android.text.TextPaint) -> <init>
    190:190:android.support.v4.text.PrecomputedTextCompat$Params build() -> build
    144:145:android.support.v4.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:163:android.support.v4.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:181:android.support.v4.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    57:58:void <init>() -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:android.support.v4.util.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    206:206:java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    76:76:void <init>(android.support.v4.util.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    47:47:void <clinit>() -> <clinit>
    58:59:void <init>() -> <init>
    48:78:void <init>(int) -> <init>
    46:46:java.lang.Object clone() -> clone
    85:91:android.support.v4.util.LongSparseArray clone() -> clone
    128:136:void delete(long) -> delete
    158:181:void gc() -> gc
    106:106:java.lang.Object get(long) -> get
    115:120:java.lang.Object get(long,java.lang.Object) -> get
    272:276:long keyAt(int) -> keyAt
    189:233:void put(long,java.lang.Object) -> put
    251:255:int size() -> size
    407:428:java.lang.String toString() -> toString
    286:290:java.lang.Object valueAt(int) -> valueAt
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    51:57:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    83:126:java.lang.Object get(java.lang.Object) -> get
    138:157:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    347:351:java.lang.String toString() -> toString
    171:191:void trimToSize(int) -> trimToSize
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    32:357:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    41:46:void <init>(android.support.v4.util.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:59:java.lang.Object next() -> next
    64:71:void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    167:167:void <init>(android.support.v4.util.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    269:269:void <init>(android.support.v4.util.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    77:82:void <init>(android.support.v4.util.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:94:java.util.Map$Entry next() -> next
    99:106:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    357:357:void <init>(android.support.v4.util.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.ObjectsCompat -> android.support.v4.util.ObjectsCompat:
    92:93:int hash(java.lang.Object[]) -> hash
android.support.v4.util.Preconditions -> android.support.v4.util.Preconditions:
    188:192:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    98:101:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    236:240:void <init>() -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:282:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:303:void ensureCapacity(int) -> ensureCapacity
    594:648:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    363:364:java.lang.Object get(java.lang.Object) -> get
    656:663:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    402:402:boolean isEmpty() -> isEmpty
    373:373:java.lang.Object keyAt(int) -> keyAt
    415:473:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    504:509:java.lang.Object remove(java.lang.Object) -> remove
    518:574:java.lang.Object removeAt(int) -> removeAt
    392:395:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    581:581:int size() -> size
    675:700:java.lang.String toString() -> toString
    382:382:java.lang.Object valueAt(int) -> valueAt
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:82:void <init>(int) -> <init>
    388:415:void append(int,java.lang.Object) -> append
    50:50:java.lang.Object clone() -> clone
    89:95:android.support.v4.util.SparseArrayCompat clone() -> clone
    175:198:void gc() -> gc
    110:110:java.lang.Object get(int) -> get
    119:124:java.lang.Object get(int,java.lang.Object) -> get
    289:293:int keyAt(int) -> keyAt
    206:250:void put(int,java.lang.Object) -> put
    268:272:int size() -> size
    426:447:java.lang.String toString() -> toString
    303:307:java.lang.Object valueAt(int) -> valueAt
android.support.v4.view.AbsSavedState -> android.support.v4.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(android.support.v4.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:51:void <init>(android.os.Parcelable) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.view.AbsSavedState$1 -> android.support.v4.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
android.support.v4.view.AbsSavedState$2 -> android.support.v4.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:95:android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:android.support.v4.view.AbsSavedState[] newArray(int) -> newArray
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    110:110:void <clinit>() -> <clinit>
    117:119:void <init>() -> <init>
    186:186:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    288:294:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    125:125:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    226:227:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    245:247:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    206:207:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    270:270:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    314:315:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    143:144:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    165:166:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    52:54:void <init>(android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    59:59:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    98:101:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    64:65:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:72:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    76:77:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    82:82:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    106:106:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    87:88:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    92:93:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    139:141:void <init>(android.content.Context) -> <init>
    256:256:boolean hasSubMenu() -> hasSubMenu
    196:196:boolean isVisible() -> isVisible
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    243:243:boolean onPerformDefaultAction() -> onPerformDefaultAction
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    182:182:boolean overridesItemVisibility() -> overridesItemVisibility
    312:314:void reset() -> reset
    289:290:void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:305:void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    61:62:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:43:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline0 -> android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem android.support.v4.view.MenuItemCompat$$InternalSyntheticApiModelOutline$1$027a8d67f29ab59682e16608bd5bfe933d984b74df0e1abea0800c4e1dbf5b07$0.m(android.view.MenuItem,char,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline1 -> android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem android.support.v4.view.MenuItemCompat$$InternalSyntheticApiModelOutline$1$0f9a6f2cba3eac64bbc0b99c42624bf75b3193af6cae01911b00715bf150cd29$0.m(android.view.MenuItem,android.content.res.ColorStateList) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline2 -> android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem android.support.v4.view.MenuItemCompat$$InternalSyntheticApiModelOutline$1$7bd05e2e58813a8cd73e120e1b880c4c48d4e6830e778d00edd74c9260836735$0.m(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline3 -> android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem android.support.v4.view.MenuItemCompat$$InternalSyntheticApiModelOutline$1$8e3308bd2db188dc32248072f8c72e3b8715c86dc480e0061d1d28ce38d31197$0.m(android.view.MenuItem,char,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline4 -> android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem android.support.v4.view.MenuItemCompat$$InternalSyntheticApiModelOutline$1$8e9b0d9e79707e08817e4185bdadcbe0a39d20cf3566dbaf3070ed335f138f94$0.m(android.view.MenuItem,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline5 -> android.support.v4.view.MenuItemCompat$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.MenuItem android.support.v4.view.MenuItemCompat$$InternalSyntheticApiModelOutline$1$c90afa4db15d9870188904f1f5cd7959ff63920d5d09ba5c4b6e670feebaf02d$0.m(android.view.MenuItem,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    327:334:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    347:354:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    278:314:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    220:250:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    383:389:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    393:401:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    50:52:void <init>(android.view.ViewGroup) -> <init>
    89:89:int getNestedScrollAxes() -> getNestedScrollAxes
    64:65:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:78:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    111:112:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    452:468:void <clinit>() -> <clinit>
    2355:2356:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2400:2401:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    1297:1298:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1720:1721:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2108:2109:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3049:3050:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    915:920:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    955:960:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    977:982:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    2119:2124:void requestApplyInsets(android.view.View) -> requestApplyInsets
    676:677:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    2341:2346:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2371:2390:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2418:2437:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2520:2525:void stopNestedScroll(android.view.View) -> stopNestedScroll
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    39:47:void <clinit>() -> <clinit>
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
android.support.v4.view.ViewConfigurationCompat$$ExternalSyntheticApiModelOutline0 -> android.support.v4.view.ViewConfigurationCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean android.support.v4.view.ViewConfigurationCompat$$InternalSyntheticApiModelOutline$1$36d82de1fff06f32a64d670b8bec1edb3ee635946a13ed6dbd358b451ff2de6f$0.m(android.view.ViewConfiguration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.ViewConfigurationCompat$$ExternalSyntheticApiModelOutline1 -> android.support.v4.view.ViewConfigurationCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int android.support.v4.view.ViewConfigurationCompat$$InternalSyntheticApiModelOutline$2$69c16a659eb2dc13358f6e023dfede8df8925dc09ceef5fb048d808ea14e5063$0.m(android.view.ViewConfiguration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    379:390:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    416:427:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    339:355:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    294:313:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    217:235:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    176:194:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    251:267:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    889:1321:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1610:1611:void addAction(int) -> addAction
    3419:3436:boolean equals(java.lang.Object) -> equals
    3500:3538:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    1595:1595:int getActions() -> getActions
    1805:1806:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    1829:1830:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    2212:2212:java.lang.CharSequence getClassName() -> getClassName
    2260:2260:java.lang.CharSequence getContentDescription() -> getContentDescription
    2188:2188:java.lang.CharSequence getPackageName() -> getPackageName
    2236:2236:java.lang.CharSequence getText() -> getText
    2319:2320:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3414:3414:int hashCode() -> hashCode
    1853:1853:boolean isCheckable() -> isCheckable
    1877:1877:boolean isChecked() -> isChecked
    2035:2035:boolean isClickable() -> isClickable
    2083:2083:boolean isEnabled() -> isEnabled
    1901:1901:boolean isFocusable() -> isFocusable
    1925:1925:boolean isFocused() -> isFocused
    2059:2059:boolean isLongClickable() -> isLongClickable
    2107:2107:boolean isPassword() -> isPassword
    2131:2131:boolean isScrollable() -> isScrollable
    2011:2011:boolean isSelected() -> isSelected
    2227:2228:void setClassName(java.lang.CharSequence) -> setClassName
    2146:2147:void setScrollable(boolean) -> setScrollable
    3441:3480:java.lang.String toString() -> toString
    1337:1337:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1330:1330:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    120:122:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> getProvider
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    506:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    556:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:404:android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:843:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(android.support.v4.widget.AutoScrollHelper) -> <init>
    700:728:void run() -> run
android.support.v4.widget.AutoSizeableTextView -> android.support.v4.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:275:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    469:473:void onContentChanged() -> onContentChanged
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    39:41:void <init>(android.support.v4.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> onPull
android.support.v4.widget.ImageViewCompat -> android.support.v4.widget.ImageViewCompat:
    37:38:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    76:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:69:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    90:109:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:83:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
android.support.v4.widget.ListViewCompat -> android.support.v4.widget.ListViewCompat:
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    175:177:void <clinit>() -> <clinit>
    193:194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:215:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    443:448:void addView(android.view.View) -> addView
    452:457:void addView(android.view.View,int) -> addView
    461:466:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    470:475:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1286:1332:boolean arrowScroll(int) -> arrowScroll
    494:501:boolean canScroll() -> canScroll
    1938:1964:int clamp(int,int,int) -> clamp
    1472:1472:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1465:1465:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1458:1458:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1507:1554:void computeScroll() -> computeScroll
    1604:1665:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1451:1451:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1444:1444:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1420:1437:int computeVerticalScrollRange() -> computeVerticalScrollRange
    592:592:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    288:288:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    293:293:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    244:244:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    283:283:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    237:237:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    277:277:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1361:1368:void doScrollY(int) -> doScrollY
    1888:1935:void draw(android.graphics.Canvas) -> draw
    1839:1848:void endDrag() -> endDrag
    1874:1884:void ensureGlows() -> ensureGlows
    604:642:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1107:1168:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1816:1826:void fling(int) -> fling
    1829:1836:void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    1222:1238:boolean fullScroll(int) -> fullScroll
    406:419:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    427:427:int getMaxScrollAmount() -> getMaxScrollAmount
    379:379:int getNestedScrollAxes() -> getNestedScrollAxes
    1079:1087:int getScrollRange() -> getScrollRange
    391:401:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1000:1011:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    231:231:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    271:271:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    646:654:boolean inChild(int,int) -> inChild
    658:663:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    431:439:void initScrollView() -> initScrollView
    666:669:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    256:256:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1340:1340:boolean isOffScreen(android.view.View) -> isOffScreen
    1800:1805:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1348:1352:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1478:1489:void measureChild(android.view.View,int,int) -> measureChild
    1494:1503:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1771:1774:void onAttachedToWindow() -> onAttachedToWindow
    972:996:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    699:794:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1733:1767:void onLayout(boolean,int,int,int,int) -> onLayout
    556:587:void onMeasure(int,int) -> onMeasure
    365:369:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    374:374:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    331:332:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    360:361:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    320:326:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    354:356:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    307:309:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    343:344:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1017:1018:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1693:1712:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1969:1978:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1982:1985:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    547:552:void onScrollChanged(int,int,int,int) -> onScrollChanged
    955:968:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1778:1794:void onSizeChanged(int,int,int,int) -> onSizeChanged
    301:301:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    338:338:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    313:315:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    348:349:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    799:951:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1025:1075:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1184:1206:boolean pageScroll(int) -> pageScroll
    672:676:void recycleVelocityTracker() -> recycleVelocityTracker
    1670:1677:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1719:1722:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    680:684:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1727:1729:void requestLayout() -> requestLayout
    1254:1275:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1858:1871:void scrollTo(int,int) -> scrollTo
    1562:1572:void scrollToChild(android.view.View) -> scrollToChild
    1583:1592:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    524:528:void setFillViewport(boolean) -> setFillViewport
    251:252:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    487:488:void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    542:543:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    386:386:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1377:1400:void smoothScrollBy(int,int) -> smoothScrollBy
    1409:1410:void smoothScrollTo(int,int) -> smoothScrollTo
    221:221:boolean startNestedScroll(int,int) -> startNestedScroll
    261:261:boolean startNestedScroll(int) -> startNestedScroll
    226:227:void stopNestedScroll(int) -> stopNestedScroll
    266:267:void stopNestedScroll() -> stopNestedScroll
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    2027:2027:void <init>() -> <init>
    2084:2093:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2065:2080:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2030:2060:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    2013:2013:void <clinit>() -> <clinit>
    1992:1993:void <init>(android.os.Parcelable) -> <init>
    1996:1998:void <init>(android.os.Parcel) -> <init>
    2008:2009:java.lang.String toString() -> toString
    2002:2004:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    2014:2014:void <init>() -> <init>
    2014:2014:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2017:2017:android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2014:2014:java.lang.Object[] newArray(int) -> newArray
    2022:2022:android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:155:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    766:766:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    776:776:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    961:978:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    905:952:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    813:825:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    691:716:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    736:757:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    794:802:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    882:893:void setPrecomputedText(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat) -> setPrecomputedText
    840:867:void setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    517:527:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
android.support.v4.widget.TextViewCompat$$ExternalSyntheticApiModelOutline0 -> android.support.v4.widget.TextViewCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void android.support.v4.widget.TextViewCompat$$InternalSyntheticApiModelOutline$1$32c6f1efdcc0185f2869be52ec07dacddae7e97610be7857f7080fdb2f389216$0.m(android.widget.TextView,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.widget.TextViewCompat$$ExternalSyntheticApiModelOutline1 -> android.support.v4.widget.TextViewCompat$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params android.support.v4.widget.TextViewCompat$$InternalSyntheticApiModelOutline$1$3755cf2188b96f1bc3e8aa0c94f8e945489603356c405594cb7b664ee0145840$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.widget.TextViewCompat$$ExternalSyntheticApiModelOutline2 -> android.support.v4.widget.TextViewCompat$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String[] android.support.v4.widget.TextViewCompat$$InternalSyntheticApiModelOutline$2$c8d1156e46649b1ea54ab706150092f5fe8c76b5c85a1b5d7cbe279c108a54e4$0.m(android.icu.text.DecimalFormatSymbols) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v4.widget.TextViewCompat$OreoCallback -> android.support.v4.widget.TextViewCompat$OreoCallback:
    547:551:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    669:669:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    657:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    628:640:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    663:665:boolean isEditable(android.widget.TextView) -> isEditable
    644:651:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    566:566:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    555:555:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    571:572:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    560:561:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    575:624:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    1374:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1387:void <init>(int,int) -> <init>
    1374:1402:void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    1374:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
android.support.v7.app.AlertController$RecycleListView -> android.support.v7.app.AlertController$RecycleListView:
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v7.content.res.AppCompatResources -> android.support.v7.content.res.AppCompatResources:
    48:53:void <clinit>() -> <clinit>
    65:67:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    102:102:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
android.support.v7.graphics.drawable.DrawableWrapper -> android.support.v7.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:161:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:108:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:169:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:83:void setAlpha(int) -> setAlpha
    186:187:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    87:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:73:void setDither(boolean) -> setDither
    77:78:void setFilterBitmap(boolean) -> setFilterBitmap
    211:212:void setHotspot(float,float) -> setHotspot
    216:217:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:197:void setTint(int) -> setTint
    201:202:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:207:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:177:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v7.view.ActionBarPolicy -> android.support.v7.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    43:43:android.support.v7.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:73:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:79:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
android.support.v7.view.ContextThemeWrapper -> android.support.v7.view.ContextThemeWrapper:
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    181:190:void initializeTheme() -> initializeTheme
    177:178:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:130:void setTheme(int) -> setTheme
android.support.v7.view.SupportMenuInflater -> android.support.v7.view.SupportMenuInflater:
    82:84:void <clinit>() -> <clinit>
    100:104:void <init>(android.content.Context) -> <init>
    230:236:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    223:226:java.lang.Object getRealOwner() -> getRealOwner
    118:136:void inflate(int,android.view.Menu) -> inflate
    144:220:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    241:241:void <clinit>() -> <clinit>
    246:258:void <init>(java.lang.Object,java.lang.String) -> <init>
    263:270:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.view.SupportMenuInflater$MenuState -> android.support.v7.view.SupportMenuInflater$MenuState:
    336:352:void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu) -> <init>
    529:531:void addItem() -> addItem
    534:537:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    457:460:char getShortcut(java.lang.String) -> getShortcut
    541:541:boolean hasAddedItem() -> hasAddedItem
    548:555:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    367:379:void readGroup(android.util.AttributeSet) -> readGroup
    385:454:void readItem(android.util.AttributeSet) -> readItem
    355:361:void resetGroup() -> resetGroup
    465:526:void setItem(android.view.MenuItem) -> setItem
android.support.v7.view.menu.ActionMenuItem -> android.support.v7.view.menu.ActionMenuItem:
    54:90:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    434:446:void applyIconTint() -> applyIconTint
    368:368:boolean collapseActionView() -> collapseActionView
    363:363:boolean expandActionView() -> expandActionView
    337:337:android.view.ActionProvider getActionProvider() -> getActionProvider
    327:327:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    389:389:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    415:415:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    430:430:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    124:124:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    144:144:android.view.SubMenu getSubMenu() -> getSubMenu
    347:347:android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    400:400:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean hasSubMenu() -> hasSubMenu
    373:373:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    332:332:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    322:322:android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    342:342:android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:185:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:192:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:198:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:209:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    383:384:android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:215:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:224:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:233:android.view.MenuItem setIcon(int) -> setIcon
    405:410:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    420:425:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:239:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:245:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:252:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    378:378:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:258:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:265:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:275:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    318:318:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    357:358:android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    352:352:android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    280:281:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:287:android.view.MenuItem setTitle(int) -> setTitle
    292:293:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    394:395:android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:299:android.view.MenuItem setVisible(boolean) -> setVisible
android.support.v7.view.menu.ActionMenuItemView -> android.support.v7.view.menu.ActionMenuItemView:
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(android.support.v7.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:211:void updateTextButtonVisibility() -> updateTextButtonVisibility
android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:301:void <init>(android.support.v7.view.menu.ActionMenuItemView) -> <init>
    305:308:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
android.support.v7.view.menu.BaseMenuPresenter -> android.support.v7.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    238:238:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:android.support.v7.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    233:233:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:android.support.v7.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    70:73:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:223:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    91:125:void updateMenuView(boolean) -> updateMenuView
android.support.v7.view.menu.BaseMenuWrapper -> android.support.v7.view.menu.BaseMenuWrapper:
    38:40:void <init>(android.content.Context,java.lang.Object) -> <init>
    43:62:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    66:82:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    87:93:void internalClear() -> internalClear
    96:109:void internalRemoveGroup(int) -> internalRemoveGroup
    112:126:void internalRemoveItem(int) -> internalRemoveItem
android.support.v7.view.menu.BaseWrapper -> android.support.v7.view.menu.BaseWrapper:
    23:28:void <init>(java.lang.Object) -> <init>
android.support.v7.view.menu.CascadingMenuPopup -> android.support.v7.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:361:void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    791:791:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    245:254:android.support.v7.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:298:void dismiss() -> dismiss
    655:662:int findIndexOfAddedMenu(android.support.v7.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:523:android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:580:android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder) -> findParentViewForSubmenu
    726:726:boolean flagActionItems() -> flagActionItems
    315:316:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:348:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:722:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    629:645:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:756:void setAnchorView(android.view.View) -> setAnchorView
    623:624:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    241:242:void setForceShowIcon(boolean) -> setForceShowIcon
    740:745:void setGravity(int) -> setGravity
    772:774:void setHorizontalOffset(int) -> setHorizontalOffset
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:785:void setShowTitle(boolean) -> setShowTitle
    778:780:void setVerticalOffset(int) -> setVerticalOffset
    259:279:void show() -> show
    369:503:void showMenu(android.support.v7.view.menu.MenuBuilder) -> showMenu
    616:619:void updateMenuView(boolean) -> updateMenuView
android.support.v7.view.menu.CascadingMenuPopup$1 -> android.support.v7.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
android.support.v7.view.menu.CascadingMenuPopup$2 -> android.support.v7.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.view.menu.CascadingMenuPopup$3 -> android.support.v7.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
android.support.v7.view.menu.CascadingMenuPopup$3$1 -> android.support.v7.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(android.support.v7.view.menu.CascadingMenuPopup$3,android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,android.support.v7.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo -> android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:804:void <init>(android.support.v7.widget.MenuPopupWindow,android.support.v7.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
android.support.v7.view.menu.ExpandedMenuView -> android.support.v7.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    86:86:boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.view.menu.ListMenuItemView -> android.support.v7.view.menu.ListMenuItemView:
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:142:void addContentView(android.view.View) -> addContentView
    145:150:void addContentView(android.view.View,int) -> addContentView
    350:358:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    126:138:void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    312:317:void insertCheckBox() -> insertCheckBox
    297:301:void insertIconView() -> insertIconView
    304:309:void insertRadioButton() -> insertRadioButton
    104:122:void onFinishInflate() -> onFinishInflate
    285:294:void onMeasure(int,int) -> onMeasure
    321:321:boolean prefersCondensedTitle() -> prefersCondensedTitle
    174:216:void setCheckable(boolean) -> setCheckable
    222:235:void setChecked(boolean) -> setChecked
    153:154:void setForceShowIcon(boolean) -> setForceShowIcon
    342:346:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:281:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:255:void setShortcut(boolean,char) -> setShortcut
    238:241:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    158:165:void setTitle(java.lang.CharSequence) -> setTitle
android.support.v7.view.menu.MenuAdapter -> android.support.v7.view.menu.MenuAdapter:
    36:50:void <init>(android.support.v7.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:android.support.v7.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
android.support.v7.view.menu.MenuBuilder -> android.support.v7.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:242:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:550:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:460:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    269:272:void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:506:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:850:void changeMenuMode() -> changeMenuMode
    610:616:void clear() -> clear
    1219:1224:void clearHeader() -> clearHeader
    1036:1048:void close(boolean) -> close
    1052:1053:void close() -> close
    1379:1397:boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:302:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    306:323:boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1375:boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:748:int findGroupIndex(int,int) -> findGroupIndex
    853:860:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:713:android.view.MenuItem findItem(int) -> findItem
    717:726:int findItemIndex(int) -> findItemIndex
    936:971:android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:920:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1206:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    836:836:android.content.Context getContext() -> getContext
    1401:1401:android.support.v7.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    785:791:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1334:1334:android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:694:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1120:void onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1109:void onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1076:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:1024:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int) -> performItemAction
    865:877:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:573:void removeGroup(int) -> removeGroup
    555:556:void removeItem(int) -> removeItem
    586:591:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:287:void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> removeMenuPresenter
    440:441:void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    619:634:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:647:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:517:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:677:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:665:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1290:android.support.v7.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1302:android.support.v7.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1255:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1266:android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1278:android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1314:android.support.v7.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    768:771:void setQwertyMode(boolean) -> setQwertyMode
    818:822:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1098:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1089:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
android.support.v7.view.menu.MenuItemImpl -> android.support.v7.view.menu.MenuItemImpl:
    68:146:void <init>(android.support.v7.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:692:void actionFormatChanged() -> actionFormatChanged
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    832:845:boolean collapseActionView() -> collapseActionView
    818:827:boolean expandActionView() -> expandActionView
    782:782:android.view.ActionProvider getActionProvider() -> getActionProvider
    764:770:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    885:885:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    788:788:android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView) -> getTitleForItemView
    899:899:java.lang.CharSequence getTooltipText() -> getTooltipText
    849:855:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    865:865:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    710:710:boolean requiresActionButton() -> requiresActionButton
    776:776:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    745:751:android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    756:759:android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    859:861:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    631:636:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    876:880:android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    714:719:void setIsActionButton(boolean) -> setIsActionButton
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    870:871:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    727:741:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    812:813:android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(android.support.v7.view.menu.SubMenuBuilder) -> setSubMenu
    793:807:android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    890:894:android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    722:722:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
android.support.v7.view.menu.MenuItemImpl$1 -> android.support.v7.view.menu.MenuItemImpl$1:
    800:800:void <init>(android.support.v7.view.menu.MenuItemImpl) -> <init>
    803:804:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.view.menu.MenuItemWrapperICS -> android.support.v7.view.menu.MenuItemWrapperICS:
    52:53:void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    313:313:boolean collapseActionView() -> collapseActionView
    385:385:android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
    308:308:boolean expandActionView() -> expandActionView
    299:303:android.view.ActionProvider getActionProvider() -> getActionProvider
    283:287:android.view.View getActionView() -> getActionView
    180:180:int getAlphabeticModifiers() -> getAlphabeticModifiers
    175:175:char getAlphabeticShortcut() -> getAlphabeticShortcut
    336:336:java.lang.CharSequence getContentDescription() -> getContentDescription
    62:62:int getGroupId() -> getGroupId
    112:112:android.graphics.drawable.Drawable getIcon() -> getIcon
    358:358:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    369:369:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    123:123:android.content.Intent getIntent() -> getIntent
    57:57:int getItemId() -> getItemId
    245:245:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    158:158:int getNumericModifiers() -> getNumericModifiers
    153:153:char getNumericShortcut() -> getNumericShortcut
    67:67:int getOrder() -> getOrder
    233:233:android.view.SubMenu getSubMenu() -> getSubMenu
    84:84:java.lang.CharSequence getTitle() -> getTitle
    95:95:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    347:347:java.lang.CharSequence getTooltipText() -> getTooltipText
    228:228:boolean hasSubMenu() -> hasSubMenu
    318:318:boolean isActionViewExpanded() -> isActionViewExpanded
    191:191:boolean isCheckable() -> isCheckable
    202:202:boolean isChecked() -> isChecked
    223:223:boolean isEnabled() -> isEnabled
    212:212:boolean isVisible() -> isVisible
    292:294:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    261:265:android.view.MenuItem setActionView(android.view.View) -> setActionView
    271:278:android.view.MenuItem setActionView(int) -> setActionView
    163:164:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    169:170:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    185:186:android.view.MenuItem setCheckable(boolean) -> setCheckable
    196:197:android.view.MenuItem setChecked(boolean) -> setChecked
    330:331:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    217:218:android.view.MenuItem setEnabled(boolean) -> setEnabled
    374:382:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    100:101:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    106:107:android.view.MenuItem setIcon(int) -> setIcon
    352:353:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    363:364:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    117:118:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    141:142:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    147:148:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    323:325:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    238:240:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    128:129:android.view.MenuItem setShortcut(char,char) -> setShortcut
    135:136:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    250:251:void setShowAsAction(int) -> setShowAsAction
    255:256:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    72:73:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    78:79:android.view.MenuItem setTitle(int) -> setTitle
    89:90:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    341:342:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    207:207:android.view.MenuItem setVisible(boolean) -> setVisible
android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    422:425:void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    439:439:boolean hasSubMenu() -> hasSubMenu
    429:429:android.view.View onCreateActionView() -> onCreateActionView
    434:434:boolean onPerformDefaultAction() -> onPerformDefaultAction
    444:445:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    458:461:void <init>(android.view.View) -> <init>
    474:474:android.view.View getWrappedView() -> getWrappedView
    470:471:void onActionViewCollapsed() -> onActionViewCollapsed
    465:466:void onActionViewExpanded() -> onActionViewExpanded
android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    404:406:void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    415:415:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    410:410:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    391:393:void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    397:397:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.view.menu.MenuItemWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB:
    39:40:void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    44:44:android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    51:53:void <init>(android.support.v7.view.menu.MenuItemWrapperJB,android.content.Context,android.view.ActionProvider) -> <init>
    67:67:boolean isVisible() -> isVisible
    83:86:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    57:57:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    62:62:boolean overridesItemVisibility() -> overridesItemVisibility
    77:79:void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v7.view.menu.MenuPopup -> android.support.v7.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    99:99:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:android.support.v7.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
android.support.v7.view.menu.MenuPopupHelper -> android.support.v7.view.menu.MenuPopupHelper:
    79:80:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    60:334:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:259:android.support.v7.view.menu.MenuPopup createPopup() -> createPopup
    298:301:void dismiss() -> dismiss
    156:159:android.support.v7.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:317:void onDismiss() -> onDismiss
    105:106:void setAnchorView(android.view.View) -> setAnchorView
    118:122:void setForceShowIcon(boolean) -> setForceShowIcon
    132:133:void setGravity(int) -> setGravity
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:329:void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:146:void show() -> show
    263:291:void showPopup(int,int,boolean,boolean) -> showPopup
    169:178:boolean tryShow() -> tryShow
    205:214:boolean tryShow(int,int) -> tryShow
android.support.v7.view.menu.MenuPopupHelper$1 -> android.support.v7.view.menu.MenuPopupHelper$1:
    334:334:void <init>(android.support.v7.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
android.support.v7.view.menu.MenuWrapperFactory -> android.support.v7.view.menu.MenuWrapperFactory:
    45:46:android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> wrapSupportMenuItem
    53:53:android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> wrapSupportSubMenu
android.support.v7.view.menu.MenuWrapperICS -> android.support.v7.view.menu.MenuWrapperICS:
    35:36:void <init>(android.content.Context,android.support.v4.internal.view.SupportMenu) -> <init>
    40:40:android.view.MenuItem add(java.lang.CharSequence) -> add
    45:45:android.view.MenuItem add(int) -> add
    50:50:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int,int,int,int) -> add
    82:96:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    60:60:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    65:65:android.view.SubMenu addSubMenu(int) -> addSubMenu
    70:70:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    75:76:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    113:115:void clear() -> clear
    154:155:void close() -> close
    139:139:android.view.MenuItem findItem(int) -> findItem
    149:149:android.view.MenuItem getItem(int) -> getItem
    134:134:boolean hasVisibleItems() -> hasVisibleItems
    164:164:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    169:169:boolean performIdentifierAction(int,int) -> performIdentifierAction
    159:159:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    107:109:void removeGroup(int) -> removeGroup
    101:103:void removeItem(int) -> removeItem
    119:120:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    129:130:void setGroupEnabled(int,boolean) -> setGroupEnabled
    124:125:void setGroupVisible(int,boolean) -> setGroupVisible
    174:175:void setQwertyMode(boolean) -> setQwertyMode
    144:144:int size() -> size
android.support.v7.view.menu.StandardMenuPopup -> android.support.v7.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:136:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:295:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:211:void show() -> show
    149:203:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
android.support.v7.view.menu.StandardMenuPopup$1 -> android.support.v7.view.menu.StandardMenuPopup$1:
    61:61:void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
android.support.v7.view.menu.StandardMenuPopup$2 -> android.support.v7.view.menu.StandardMenuPopup$2:
    80:80:void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.view.menu.SubMenuBuilder -> android.support.v7.view.menu.SubMenuBuilder:
    42:46:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    89:90:boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:80:void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    151:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:102:android.view.SubMenu setIcon(int) -> setIcon
    50:51:void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.view.menu.SubMenuWrapperICS -> android.support.v7.view.menu.SubMenuWrapperICS:
    38:39:void <init>(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> <init>
    78:79:void clearHeader() -> clearHeader
    95:95:android.view.MenuItem getItem() -> getItem
    43:43:android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> getWrappedObject
    60:61:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    66:67:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    48:49:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    54:55:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    72:73:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    83:84:android.view.SubMenu setIcon(int) -> setIcon
    89:90:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
android.support.v7.widget.AbsActionBarView -> android.support.v7.widget.AbsActionBarView:
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    256:256:int next(int,int,boolean) -> next
    73:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:135:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:110:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:270:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    139:141:void setContentHeight(int) -> setContentHeight
    185:191:void setVisibility(int) -> setVisibility
android.support.v7.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(android.support.v7.widget.AbsActionBarView) -> <init>
android.support.v7.widget.ActionBarBackgroundDrawable -> android.support.v7.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
android.support.v7.widget.ActionBarContainer -> android.support.v7.widget.ActionBarContainer:
    58:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    158:168:void drawableStateChanged() -> drawableStateChanged
    257:258:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    233:233:android.view.View getTabContainer() -> getTabContainer
    253:253:boolean isCollapsed(android.view.View) -> isCollapsed
    172:182:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    83:86:void onFinishInflate() -> onFinishInflate
    212:215:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    199:199:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    293:337:void onLayout(boolean,int,int,int,int) -> onLayout
    263:289:void onMeasure(int,int) -> onMeasure
    204:207:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    89:104:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    125:139:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    107:122:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    219:230:void setTabContainer(android.support.v7.widget.ScrollingTabContainerView) -> setTabContainer
    192:195:void setTransitioning(boolean) -> setTransitioning
    143:148:void setVisibility(int) -> setVisibility
    240:240:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    246:249:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    152:153:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.v7.widget.ActionBarContextView -> android.support.v7.widget.ActionBarContextView:
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    134:158:void initTitle() -> initTitle
    88:93:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:368:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:350:void onLayout(boolean,int,int,int,int) -> onLayout
    243:319:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:98:void setContentHeight(int) -> setContentHeight
    101:113:void setCustomView(android.view.View) -> setCustomView
    121:123:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    354:354:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
android.support.v7.widget.ActionBarOverlayLayout -> android.support.v7.widget.ActionBarOverlayLayout:
    129:129:void <clinit>() -> <clinit>
    61:145:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    603:605:void addActionBarHideOffset() -> addActionBarHideOffset
    264:282:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    335:335:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    451:460:void draw(android.graphics.Canvas) -> draw
    287:315:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    54:54:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    320:320:android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    54:54:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    325:325:android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    330:330:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    569:569:int getActionBarHideOffset() -> getActionBarHideOffset
    544:550:android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    532:532:int getNestedScrollAxes() -> getNestedScrollAxes
    627:628:java.lang.CharSequence getTitle() -> getTitle
    580:585:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    148:158:void init(android.content.Context) -> init
    223:226:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    162:164:void onDetachedFromWindow() -> onDetachedFromWindow
    425:447:void onLayout(boolean,int,int,int,int) -> onLayout
    340:421:void onMeasure(int,int) -> onMeasure
    508:517:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    527:527:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    523:523:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    488:490:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    477:483:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    469:472:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    494:504:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    230:251:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    255:260:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    593:595:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    588:590:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    536:541:void pullChildren() -> pullChildren
    598:600:void removeActionBarHideOffset() -> removeActionBarHideOffset
    573:577:void setActionBarHideOffset(int) -> setActionBarHideOffset
    167:178:void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    197:198:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    555:562:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    666:668:void setIcon(int) -> setIcon
    672:674:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    678:680:void setLogo(int) -> setLogo
    181:190:void setOverlayMode(boolean) -> setOverlayMode
    219:219:void setShowingForActionMode(boolean) -> setShowingForActionMode
    650:650:void setUiOptions(int) -> setUiOptions
    615:617:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    621:623:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    464:464:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    608:610:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
android.support.v7.widget.ActionBarOverlayLayout$1 -> android.support.v7.widget.ActionBarOverlayLayout$1:
    96:96:void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    105:107:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    99:101:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.ActionBarOverlayLayout$2 -> android.support.v7.widget.ActionBarOverlayLayout$2:
    110:110:void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    113:116:void run() -> run
android.support.v7.widget.ActionBarOverlayLayout$3 -> android.support.v7.widget.ActionBarOverlayLayout$3:
    119:119:void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    122:126:void run() -> run
android.support.v7.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.widget.ActionBarOverlayLayout$LayoutParams:
    744:745:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    748:749:void <init>(int,int) -> <init>
    752:753:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.ActionMenuPresenter:
    74:89:void <init>(android.content.Context) -> <init>
    53:53:android.support.v7.view.menu.MenuBuilder access$000(android.support.v7.widget.ActionMenuPresenter) -> access$000
    53:53:android.support.v7.view.menu.MenuBuilder access$100(android.support.v7.widget.ActionMenuPresenter) -> access$100
    53:53:android.support.v7.view.menu.MenuView access$200(android.support.v7.widget.ActionMenuPresenter) -> access$200
    53:53:android.support.v7.view.menu.MenuBuilder access$300(android.support.v7.widget.ActionMenuPresenter) -> access$300
    53:53:android.support.v7.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter) -> access$400
    53:53:android.support.v7.view.menu.MenuView access$500(android.support.v7.widget.ActionMenuPresenter) -> access$500
    211:221:void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> bindItemView
    381:383:boolean dismissPopupMenus() -> dismissPopupMenus
    279:280:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    321:332:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    421:557:boolean flagActionItems() -> flagActionItems
    195:206:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    175:180:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    362:373:boolean hideOverflowMenu() -> hideOverflowMenu
    392:396:boolean hideSubMenus() -> hideSubMenus
    93:134:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    403:403:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    562:564:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    137:143:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    285:317:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    162:163:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    600:602:void setMenuView(android.support.v7.widget.ActionMenuView) -> setMenuView
    166:172:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    152:154:void setReserveOverflow(boolean) -> setReserveOverflow
    225:225:boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> shouldIncludeItem
    340:353:boolean showOverflowMenu() -> showOverflowMenu
    230:275:void updateMenuView(boolean) -> updateMenuView
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu:
    747:757:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View) -> <init>
    761:765:void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    814:815:void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    819:819:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable:
    796:798:void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    802:810:void run() -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton:
    640:681:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context) -> <init>
    701:701:boolean needsDividerAfter() -> needsDividerAfter
    696:696:boolean needsDividerBefore() -> needsDividerBefore
    685:691:boolean performClick() -> performClick
    706:723:boolean setFrame(int,int,int,int) -> setFrame
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1:
    652:652:void <init>(android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,android.support.v7.widget.ActionMenuPresenter) -> <init>
    655:659:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    664:665:boolean onForwardingStarted() -> onForwardingStarted
    673:678:boolean onForwardingStopped() -> onForwardingStopped
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.ActionMenuPresenter$OverflowPopup:
    729:733:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    737:743:void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback:
    769:770:void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    783:790:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    774:778:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    76:77:void <init>(android.content.Context) -> <init>
    80:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    48:48:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    639:640:void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    404:434:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    439:540:void onLayout(boolean,int,int,int,int) -> onLayout
    147:174:void onMeasure(int,int) -> onMeasure
    178:387:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:android.support.v7.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:142:void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    97:105:void setPopupTheme(int) -> setPopupTheme
    122:124:void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$LayoutParams:
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(android.support.v7.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.ActionMenuView$MenuBuilderCallback:
    775:776:void <init>(android.support.v7.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.widget.ActivityChooserView$InnerLayout -> android.support.v7.widget.ActivityChooserView$InnerLayout:
    864:864:void <clinit>() -> <clinit>
    869:873:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v7.widget.AlertDialogLayout -> android.support.v7.widget.AlertDialogLayout:
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
android.support.v7.widget.AppCompatAutoCompleteTextView -> android.support.v7.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    199:201:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:94:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatBackgroundHelper -> android.support.v7.widget.AppCompatBackgroundHelper:
    35:44:void <init>(android.view.View) -> <init>
    173:195:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:135:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:72:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:88:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:81:void onSetBackgroundResource(int) -> onSetBackgroundResource
    138:148:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:97:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:111:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    151:155:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
android.support.v7.widget.AppCompatDrawableManager -> android.support.v7.widget.AppCompatDrawableManager:
    78:174:void <clinit>() -> <clinit>
    69:800:void <init>() -> <init>
    414:425:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    568:577:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    502:507:boolean arrayContains(int[],int) -> arrayContains
    746:759:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    586:586:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    596:621:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    226:226:long createCacheKey(android.util.TypedValue) -> createCacheKey
    590:591:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    580:581:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    231:258:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    625:667:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    717:721:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    88:93:android.support.v7.widget.AppCompatDrawableManager get() -> get
    393:410:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    191:191:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    195:214:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    726:735:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    521:555:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    559:563:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    511:517:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    100:105:void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager) -> installDefaultInflateDelegates
    762:763:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    308:389:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    429:437:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    739:743:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    263:304:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    693:713:void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]) -> tintDrawable
    442:485:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache -> android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache:
    673:674:void <init>(int) -> <init>
    685:688:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    677:677:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    681:681:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
android.support.v7.widget.AppCompatEditText -> android.support.v7.widget.AppCompatEditText:
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    55:55:java.lang.CharSequence getText() -> getText
    85:90:android.text.Editable getText() -> getText
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    196:198:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatHintHelper -> android.support.v7.widget.AppCompatHintHelper:
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
android.support.v7.widget.AppCompatImageButton -> android.support.v7.widget.AppCompatImageButton:
    73:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:248:void drawableStateChanged() -> drawableStateChanged
    152:153:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:208:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:236:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:126:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:118:void setBackgroundResource(int) -> setBackgroundResource
    98:102:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:94:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:86:void setImageResource(int) -> setImageResource
    106:110:void setImageURI(android.net.Uri) -> setImageURI
    137:140:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:168:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:195:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:223:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
android.support.v7.widget.AppCompatImageHelper -> android.support.v7.widget.AppCompatImageHelper:
    45:47:void <init>(android.widget.ImageView) -> <init>
    196:218:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:158:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:106:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:82:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    85:96:void setImageResource(int) -> setImageResource
    110:116:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:130:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    174:178:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
android.support.v7.widget.AppCompatImageView -> android.support.v7.widget.AppCompatImageView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:259:void drawableStateChanged() -> drawableStateChanged
    162:163:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:191:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:219:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:247:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:136:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:128:void setBackgroundResource(int) -> setBackgroundResource
    108:112:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:104:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:96:void setImageResource(int) -> setImageResource
    116:120:void setImageURI(android.net.Uri) -> setImageURI
    147:150:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:206:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:234:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
android.support.v7.widget.AppCompatPopupWindow -> android.support.v7.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
android.support.v7.widget.AppCompatSpinner -> android.support.v7.widget.AppCompatSpinner:
    71:71:void <clinit>() -> <clinit>
    148:149:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:168:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    98:283:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    543:583:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    536:540:void drawableStateChanged() -> drawableStateChanged
    358:361:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    333:336:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    377:380:int getDropDownWidth() -> getDropDownWidth
    314:317:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    290:293:android.content.Context getPopupContext() -> getPopupContext
    457:457:java.lang.CharSequence getPrompt() -> getPrompt
    501:502:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    530:531:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    404:409:void onDetachedFromWindow() -> onDetachedFromWindow
    421:430:void onMeasure(int,int) -> onMeasure
    413:416:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    434:443:boolean performClick() -> performClick
    69:69:void setAdapter(android.widget.Adapter) -> setAdapter
    389:400:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    470:474:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    462:466:void setBackgroundResource(int) -> setBackgroundResource
    343:348:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    324:329:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    368:373:void setDropDownWidth(int) -> setDropDownWidth
    300:305:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    309:310:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    448:453:void setPrompt(java.lang.CharSequence) -> setPrompt
    486:489:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    515:518:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
android.support.v7.widget.AppCompatSpinner$1 -> android.support.v7.widget.AppCompatSpinner$1:
    246:246:void <init>(android.support.v7.widget.AppCompatSpinner,android.view.View,android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    249:249:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    254:257:boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.widget.AppCompatSpinner$DropDownAdapter -> android.support.v7.widget.AppCompatSpinner$DropDownAdapter:
    604:626:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    679:683:boolean areAllItemsEnabled() -> areAllItemsEnabled
    630:630:int getCount() -> getCount
    650:651:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    635:635:java.lang.Object getItem(int) -> getItem
    640:640:long getItemId(int) -> getItemId
    703:703:int getItemViewType(int) -> getItemViewType
    645:645:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    708:708:int getViewTypeCount() -> getViewTypeCount
    656:656:boolean hasStableIds() -> hasStableIds
    713:713:boolean isEmpty() -> isEmpty
    693:697:boolean isEnabled(int) -> isEnabled
    661:664:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    668:671:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
android.support.v7.widget.AppCompatSpinner$DropdownPopup -> android.support.v7.widget.AppCompatSpinner$DropdownPopup:
    720:740:void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    717:717:void access$001(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> access$001
    758:792:void computeContentWidth() -> computeContentWidth
    749:749:java.lang.CharSequence getHintText() -> getHintText
    849:849:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    744:746:void setAdapter(android.widget.ListAdapter) -> setAdapter
    754:755:void setPromptText(java.lang.CharSequence) -> setPromptText
    796:843:void show() -> show
android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$1:
    729:729:void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.support.v7.widget.AppCompatSpinner) -> <init>
    732:738:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$2:
    818:818:void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    821:830:void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$3:
    833:833:void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    836:840:void onDismiss() -> onDismiss
android.support.v7.widget.AppCompatTextHelper -> android.support.v7.widget.AppCompatTextHelper:
    60:67:void <init>(android.widget.TextView) -> <init>
    370:373:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo) -> applyCompoundDrawableTint
    352:367:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    408:409:void autoSizeText() -> autoSizeText
    377:384:android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int) -> createTintInfo
    453:453:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    449:449:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    445:445:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    457:457:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    441:441:int getAutoSizeTextType() -> getAutoSizeTextType
    414:414:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    71:239:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    304:311:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    390:393:void onLayout(boolean,int,int,int,int) -> onLayout
    314:345:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    348:349:void setAllCaps(boolean) -> setAllCaps
    430:432:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    436:437:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    422:423:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    398:403:void setTextSize(int,float) -> setTextSize
    418:419:void setTextSizeInternal(int,float) -> setTextSizeInternal
    242:300:void updateTypefaceAndStyle(android.content.Context,android.support.v7.widget.TintTypedArray) -> updateTypefaceAndStyle
android.support.v7.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline0 -> android.support.v7.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int android.support.v7.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$3686008e5f5c938cda2edfcf1919de2d20de6a9c4cd37df8905d4e5fbc13468b$0.m(android.widget.TextView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v7.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline1 -> android.support.v7.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void android.support.v7.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$3686008e5f5c938cda2edfcf1919de2d20de6a9c4cd37df8905d4e5fbc13468b$1.m(android.widget.TextView,int,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v7.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline2 -> android.support.v7.widget.AppCompatTextHelper$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void android.support.v7.widget.AppCompatTextHelper$$InternalSyntheticApiModelOutline$1$3686008e5f5c938cda2edfcf1919de2d20de6a9c4cd37df8905d4e5fbc13468b$2.m(android.widget.TextView,int[],int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v7.widget.AppCompatTextHelper$1 -> android.support.v7.widget.AppCompatTextHelper$1:
    252:252:void <init>(android.support.v7.widget.AppCompatTextHelper,java.lang.ref.WeakReference) -> <init>
    261:261:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    255:256:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
android.support.v7.widget.AppCompatTextView -> android.support.v7.widget.AppCompatTextView:
    79:80:void <init>(android.content.Context) -> <init>
    83:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:95:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    464:473:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    179:186:void drawableStateChanged() -> drawableStateChanged
    349:356:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    330:337:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    311:318:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    368:375:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    290:299:int getAutoSizeTextType() -> getAutoSizeTextType
    406:406:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    411:411:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    137:138:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    165:166:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    477:478:java.lang.CharSequence getText() -> getText
    437:437:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    380:380:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    190:194:void onLayout(boolean,int,int,int,int) -> onLayout
    500:502:void onMeasure(int,int) -> onMeasure
    209:213:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    249:258:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    271:278:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    226:233:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    107:111:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    99:103:void setBackgroundResource(int) -> setBackgroundResource
    425:427:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    386:391:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    396:402:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    416:417:void setLineHeight(int) -> setLineHeight
    460:461:void setPrecomputedText(android.support.v4.text.PrecomputedTextCompat) -> setPrecomputedText
    122:125:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    150:153:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    171:175:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    494:496:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    447:448:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    198:205:void setTextSize(int,float) -> setTextSize
android.support.v7.widget.AppCompatTextViewAutoSizeHelper -> android.support.v7.widget.AppCompatTextViewAutoSizeHelper:
    61:70:void <clinit>() -> <clinit>
    78:102:void <init>(android.widget.TextView) -> <init>
    547:582:void autoSizeText() -> autoSizeText
    447:471:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:591:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    711:727:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    642:662:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    404:404:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    388:388:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    372:372:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    417:417:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    358:358:int getAutoSizeTextType() -> getAutoSizeTextType
    786:799:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    764:780:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    811:811:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    105:180:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    265:281:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    308:338:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    198:228:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:635:void setRawTextSize(float) -> setRawTextSize
    596:601:void setTextSizeInternal(int,float) -> setTextSizeInternal
    510:537:boolean setupAutoSizeText() -> setupAutoSizeText
    421:431:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    434:442:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    666:703:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    820:820:boolean supportsAutoSizeText() -> supportsAutoSizeText
    485:507:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
android.support.v7.widget.ButtonBarLayout -> android.support.v7.widget.ButtonBarLayout:
    45:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:150:int getMinimumHeight() -> getMinimumHeight
    140:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    171:171:boolean isStacked() -> isStacked
    68:137:void onMeasure(int,int) -> onMeasure
    57:64:void setAllowStacking(boolean) -> setAllowStacking
    154:168:void setStacked(boolean) -> setStacked
android.support.v7.widget.ContentFrameLayout -> android.support.v7.widget.ContentFrameLayout:
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:77:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:210:void onAttachedToWindow() -> onAttachedToWindow
    214:218:void onDetachedFromWindow() -> onDetachedFromWindow
    99:172:void onMeasure(int,int) -> onMeasure
    80:81:void setAttachListener(android.support.v7.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
android.support.v7.widget.DialogTitle -> android.support.v7.widget.DialogTitle:
    47:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:83:void onMeasure(int,int) -> onMeasure
    91:93:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
android.support.v7.widget.DrawableUtils -> android.support.v7.widget.DrawableUtils:
    46:60:void <clinit>() -> <clinit>
    129:163:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    118:122:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    187:194:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
android.support.v7.widget.DropDownListView -> android.support.v7.widget.DropDownListView:
    50:128:void <init>(android.content.Context,boolean) -> <init>
    629:643:void clearPressedItem() -> clearPressedItem
    542:544:void clickPressedItem(android.view.View,int) -> clickPressedItem
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:572:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    290:369:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:473:void onDetachedFromWindow() -> onDetachedFromWindow
    482:534:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:466:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:626:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:601:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:581:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:555:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:690:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:376:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:562:void updateSelectorStateCompat() -> updateSelectorStateCompat
android.support.v7.widget.DropDownListView$GateKeeperDrawable -> android.support.v7.widget.DropDownListView$GateKeeperDrawable:
    382:384:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:403:void draw(android.graphics.Canvas) -> draw
    387:388:void setEnabled(boolean) -> setEnabled
    407:410:void setHotspot(float,float) -> setHotspot
    414:417:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:395:boolean setState(int[]) -> setState
    421:424:boolean setVisible(boolean,boolean) -> setVisible
android.support.v7.widget.DropDownListView$ResolveHoverRunnable -> android.support.v7.widget.DropDownListView$ResolveHoverRunnable:
    700:701:void <init>(android.support.v7.widget.DropDownListView) -> <init>
    711:713:void cancel() -> cancel
    716:717:void post() -> post
    706:708:void run() -> run
android.support.v7.widget.FitWindowsFrameLayout -> android.support.v7.widget.FitWindowsFrameLayout:
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.widget.FitWindowsLinearLayout -> android.support.v7.widget.FitWindowsLinearLayout:
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.widget.ForwardingListener -> android.support.v7.widget.ForwardingListener:
    66:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:249:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:284:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
android.support.v7.widget.ForwardingListener$DisallowIntercept -> android.support.v7.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
android.support.v7.widget.ForwardingListener$TriggerLongPress -> android.support.v7.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.LinearLayoutCompat:
    145:146:void <init>(android.content.Context) -> <init>
    149:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:185:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1751:1751:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    322:360:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    295:319:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    363:366:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    369:372:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1317:1336:void forceUniformHeight(int,int) -> forceUniformHeight
    895:914:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1734:1739:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1721:1721:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1744:1744:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    423:471:int getBaseline() -> getBaseline
    480:480:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1347:1347:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    221:221:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    268:268:int getDividerPadding() -> getDividerPadding
    278:278:int getDividerWidth() -> getDividerWidth
    1700:1700:int getGravity() -> getGravity
    1389:1389:int getLocationOffset(android.view.View) -> getLocationOffset
    1401:1401:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1667:1667:int getOrientation() -> getOrientation
    212:212:int getShowDividers() -> getShowDividers
    505:505:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    518:518:int getVirtualChildCount() -> getVirtualChildCount
    529:529:float getWeightSum() -> getWeightSum
    566:580:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1521:1642:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1426:1506:void layoutVertical(int,int,int,int) -> layoutVertical
    1377:1379:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    928:1311:void measureHorizontal(int,int) -> measureHorizontal
    1358:1358:int measureNullChild(int) -> measureNullChild
    595:891:void measureVertical(int,int) -> measureVertical
    283:292:void onDraw(android.graphics.Canvas) -> onDraw
    1756:1758:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1762:1764:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1406:1411:void onLayout(boolean,int,int,int,int) -> onLayout
    550:555:void onMeasure(int,int) -> onMeasure
    392:393:void setBaselineAligned(boolean) -> setBaselineAligned
    488:493:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1645:1646:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    232:245:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    257:258:void setDividerPadding(int) -> setDividerPadding
    1679:1691:void setGravity(int) -> setGravity
    1704:1709:void setHorizontalGravity(int) -> setHorizontalGravity
    418:419:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1654:1658:void setOrientation(int) -> setOrientation
    195:199:void setShowDividers(int) -> setShowDividers
    1712:1717:void setVerticalGravity(int) -> setVerticalGravity
    545:546:void setWeightSum(float) -> setWeightSum
    203:203:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.LinearLayoutCompat$LayoutParams:
    1783:1797:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1783:1805:void <init>(int,int) -> <init>
    1783:1827:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.ListPopupWindow:
    84:102:void <clinit>() -> <clinit>
    242:243:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    108:272:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1136:1309:int buildDropDown() -> buildDropDown
    826:833:void clearListSelection() -> clearListSelection
    930:930:android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    752:757:void dismiss() -> dismiss
    454:454:android.view.View getAnchorView() -> getAnchorView
    417:417:android.graphics.drawable.Drawable getBackground() -> getBackground
    471:471:int getHorizontalOffset() -> getHorizontalOffset
    926:926:android.widget.ListView getListView() -> getListView
    1421:1430:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    487:490:int getVerticalOffset() -> getVerticalOffset
    529:529:int getWidth() -> getWidth
    848:848:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    339:339:boolean isModal() -> isModal
    840:840:boolean isShowing() -> isShowing
    769:776:void removePromptView() -> removePromptView
    281:294:void setAdapter(android.widget.ListAdapter) -> setAdapter
    464:465:void setAnchorView(android.view.View) -> setAnchorView
    435:436:void setAnimationStyle(int) -> setAnimationStyle
    426:427:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    549:556:void setContentWidth(int) -> setContentWidth
    522:523:void setDropDownGravity(int) -> setDropDownGravity
    512:513:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    480:481:void setHorizontalOffset(int) -> setHorizontalOffset
    791:792:void setInputMethodMode(int) -> setInputMethodMode
    329:331:void setModal(boolean) -> setModal
    765:766:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    603:604:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1318:1320:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1411:1418:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    306:307:void setPromptPosition(int) -> setPromptPosition
    810:819:void setSelection(int) -> setSelection
    499:501:void setVerticalOffset(int) -> setVerticalOffset
    539:540:void setWidth(int) -> setWidth
    647:745:void show() -> show
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.ListPopupWindow$2:
    1147:1147:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1151:1155:void run() -> run
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.ListPopupWindow$3:
    1166:1166:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1171:1178:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1182:1182:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.ListPopupWindow$ListSelectorHider:
    1341:1342:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1346:1347:void run() -> run
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.ListPopupWindow$PopupDataSetObserver:
    1323:1324:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1328:1332:void onChanged() -> onChanged
    1336:1337:void onInvalidated() -> onInvalidated
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.ListPopupWindow$PopupScrollListener:
    1387:1388:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1394:1394:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1398:1403:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor:
    1366:1367:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1371:1382:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.ListPopupWindow$ResizePopupRunnable:
    1351:1352:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1356:1362:void run() -> run
android.support.v7.widget.MenuPopupWindow -> android.support.v7.widget.MenuPopupWindow:
    60:65:void <clinit>() -> <clinit>
    70:71:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    75:77:android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    113:116:void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    121:124:void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    81:84:void setEnterTransition(java.lang.Object) -> setEnterTransition
    87:90:void setExitTransition(java.lang.Object) -> setExitTransition
    93:94:void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    101:108:void setTouchModal(boolean) -> setTouchModal
android.support.v7.widget.MenuPopupWindow$MenuDropDownListView -> android.support.v7.widget.MenuPopupWindow$MenuDropDownListView:
    138:150:void <init>(android.content.Context,boolean) -> <init>
    129:129:boolean hasFocus() -> hasFocus
    129:129:boolean hasWindowFocus() -> hasWindowFocus
    129:129:boolean isFocused() -> isFocused
    129:129:boolean isInTouchMode() -> isInTouchMode
    129:129:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    129:129:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    184:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    162:178:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    129:129:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    153:154:void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    129:129:void setSelector(android.graphics.drawable.Drawable) -> setSelector
android.support.v7.widget.ResourcesWrapper -> android.support.v7.widget.ResourcesWrapper:
    48:50:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:210:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:223:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:217:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:283:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:277:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:236:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
android.support.v7.widget.RtlSpacingHelper -> android.support.v7.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
android.support.v7.widget.ScrollingTabContainerView -> android.support.v7.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    260:273:void animateToTab(int) -> animateToTab
    214:220:android.widget.Spinner createSpinner() -> createSpinner
    293:306:android.support.v7.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:282:void onAttachedToWindow() -> onAttachedToWindow
    225:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:290:void onDetachedFromWindow() -> onDetachedFromWindow
    371:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:138:void onMeasure(int,int) -> onMeasure
    378:378:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    154:170:void performCollapse() -> performCollapse
    173:179:boolean performExpand() -> performExpand
    150:151:void setAllowCollapse(boolean) -> setAllowCollapse
    199:201:void setContentHeight(int) -> setContentHeight
    183:196:void setTabSelected(int) -> setTabSelected
android.support.v7.widget.ScrollingTabContainerView$1 -> android.support.v7.widget.ScrollingTabContainerView$1:
    264:264:void <init>(android.support.v7.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:270:void run() -> run
android.support.v7.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.widget.ScrollingTabContainerView$TabAdapter:
    522:523:void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    527:527:int getCount() -> getCount
    532:532:java.lang.Object getItem(int) -> getItem
    537:537:long getItemId(int) -> getItemId
    542:547:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.widget.ScrollingTabContainerView$TabClickListener:
    552:553:void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    557:564:void onClick(android.view.View) -> onClick
android.support.v7.widget.ScrollingTabContainerView$TabView -> android.support.v7.widget.ScrollingTabContainerView$TabView:
    381:406:void <init>(android.support.v7.widget.ScrollingTabContainerView,android.content.Context,android.support.v7.app.ActionBar$Tab,boolean) -> <init>
    409:411:void bindTab(android.support.v7.app.ActionBar$Tab) -> bindTab
    517:517:android.support.v7.app.ActionBar$Tab getTab() -> getTab
    424:427:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    431:435:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    439:446:void onMeasure(int,int) -> onMeasure
    415:420:void setSelected(boolean) -> setSelected
    449:514:void update() -> update
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    175:175:void <clinit>() -> <clinit>
    266:267:void <init>(android.content.Context) -> <init>
    270:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    131:1708:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1363:1384:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    496:501:void clearFocus() -> clearFocus
    1536:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1655:1691:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1581:1636:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1566:1570:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1201:1202:void dismissSuggestions() -> dismissSuggestions
    1696:1698:void forceSuggestionQuery() -> forceSuggestionQuery
    850:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1087:1097:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    451:451:int getImeOptions() -> getImeOptions
    473:473:int getInputType() -> getInputType
    776:776:int getMaxWidth() -> getMaxWidth
    863:864:int getPreferredHeight() -> getPreferredHeight
    858:859:int getPreferredWidth() -> getPreferredWidth
    558:558:java.lang.CharSequence getQuery() -> getQuery
    618:625:java.lang.CharSequence getQueryHint() -> getQueryHint
    393:393:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    389:389:int getSuggestionRowLayout() -> getSuggestionRowLayout
    754:754:android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    892:905:boolean hasVoiceSearch() -> hasVoiceSearch
    682:682:boolean isIconified() -> isIconified
    1701:1701:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    909:909:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1493:1503:void launchIntent(android.content.Intent) -> launchIntent
    1515:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1476:1486:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1278:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1290:1297:void onActionViewExpanded() -> onActionViewExpanded
    1205:1222:void onCloseClicked() -> onCloseClicked
    963:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1387:1394:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1398:1403:boolean onItemSelected(int) -> onItemSelected
    831:847:void onLayout(boolean,int,int,int,int) -> onLayout
    782:827:void onMeasure(int,int) -> onMeasure
    972:973:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1352:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1344:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1225:1231:void onSearchClicked() -> onSearchClicked
    1187:1198:void onSubmitQuery() -> onSubmitQuery
    1042:1081:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1173:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1257:1264:void onTextFocusChanged() -> onTextFocusChanged
    1235:1254:void onVoiceClicked() -> onVoiceClicked
    1268:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    944:945:void postUpdateFocusedState() -> postUpdateFocusedState
    479:490:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1443:1463:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    428:429:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    668:673:void setIconified(boolean) -> setIconified
    641:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    440:441:void setImeOptions(int) -> setImeOptions
    463:464:void setInputType(int) -> setInputType
    763:766:void setMaxWidth(int) -> setMaxWidth
    519:520:void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    528:529:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    510:511:void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    549:550:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    537:538:void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    570:580:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1509:1512:void setQuery(java.lang.CharSequence) -> setQuery
    593:595:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    722:727:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    405:419:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    694:696:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    744:747:void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    932:941:void updateCloseButton() -> updateCloseButton
    948:959:void updateFocusedState() -> updateFocusedState
    1101:1103:void updateQueryHint() -> updateQueryHint
    1109:1143:void updateSearchAutoComplete() -> updateSearchAutoComplete
    922:929:void updateSubmitArea() -> updateSubmitArea
    913:919:void updateSubmitButton(boolean) -> updateSubmitButton
    868:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1152:1158:void updateVoiceButton(boolean) -> updateVoiceButton
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.SearchView$1:
    177:177:void <init>(android.support.v7.widget.SearchView) -> <init>
    180:181:void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.SearchView$10:
    1708:1708:void <init>(android.support.v7.widget.SearchView) -> <init>
    1720:1720:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1710:1710:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1715:1716:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.SearchView$2:
    184:184:void <init>(android.support.v7.widget.SearchView) -> <init>
    187:190:void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.SearchView$3:
    330:330:void <init>(android.support.v7.widget.SearchView) -> <init>
    333:336:void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.SearchView$4:
    375:375:void <init>(android.support.v7.widget.SearchView) -> <init>
    379:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.SearchView$5:
    975:975:void <init>(android.support.v7.widget.SearchView) -> <init>
    978:989:void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.SearchView$6:
    997:997:void <init>(android.support.v7.widget.SearchView) -> <init>
    1001:1031:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.SearchView$7:
    1160:1160:void <init>(android.support.v7.widget.SearchView) -> <init>
    1167:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.SearchView$8:
    1406:1406:void <init>(android.support.v7.widget.SearchView) -> <init>
    1414:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.SearchView$9:
    1418:1418:void <init>(android.support.v7.widget.SearchView) -> <init>
    1426:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1436:1436:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$AutoCompleteTextViewReflector:
    2025:2047:void <init>() -> <init>
    2059:2065:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2050:2056:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2068:2074:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
android.support.v7.widget.SearchView$SavedState -> android.support.v7.widget.SearchView$SavedState:
    1324:1324:void <clinit>() -> <clinit>
    1303:1304:void <init>(android.os.Parcelable) -> <init>
    1307:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1319:1320:java.lang.String toString() -> toString
    1313:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.SearchView$SavedState$1 -> android.support.v7.widget.SearchView$SavedState$1:
    1324:1324:void <init>() -> <init>
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1327:1327:android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1332:1332:android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object[] newArray(int) -> newArray
    1337:1337:android.support.v7.widget.SearchView$SavedState[] newArray(int) -> newArray
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    1841:1842:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1829:1847:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1926:1926:boolean enoughToFilter() -> enoughToFilter
    1959:1969:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1871:1871:boolean isEmpty() -> isEmpty
    1978:1983:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1851:1855:void onFinishInflate() -> onFinishInflate
    1916:1918:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1931:1952:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1898:1912:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1890:1890:void performCompletion() -> performCompletion
    1880:1880:void replaceText(java.lang.CharSequence) -> replaceText
    1996:2017:void setImeVisibility(boolean) -> setImeVisibility
    1858:1859:void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    1863:1865:void setThreshold(int) -> setThreshold
    1987:1993:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
android.support.v7.widget.SearchView$SearchAutoComplete$1 -> android.support.v7.widget.SearchView$SearchAutoComplete$1:
    1829:1829:void <init>(android.support.v7.widget.SearchView$SearchAutoComplete) -> <init>
    1832:1833:void run() -> run
android.support.v7.widget.SearchView$UpdatableTouchDelegate -> android.support.v7.widget.SearchView$UpdatableTouchDelegate:
    1755:1762:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1773:1814:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1765:1769:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.SuggestionsAdapter:
    74:106:void <init>(android.content.Context,android.support.v7.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    275:325:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    217:237:void changeCursor(android.database.Cursor) -> changeCursor
    583:588:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    415:438:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    336:347:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    647:664:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    625:636:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    676:677:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    606:612:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    550:576:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    699:730:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    507:539:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    473:483:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    362:370:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    374:378:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    737:778:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    681:690:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    450:460:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    135:135:boolean hasStableIds() -> hasStableIds
    244:250:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    181:184:void notifyDataSetChanged() -> notifyDataSetChanged
    189:192:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    329:333:void onClick(android.view.View) -> onClick
    146:169:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    118:119:void setQueryRefinement(int) -> setQueryRefinement
    388:403:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    352:359:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    592:595:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    195:208:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.SuggestionsAdapter$ChildViewCache:
    264:270:void <init>(android.view.View) -> <init>
android.support.v7.widget.ThemeUtils -> android.support.v7.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:68:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:78:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:105:android.util.TypedValue getTypedValue() -> getTypedValue
android.support.v7.widget.TintContextWrapper -> android.support.v7.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
android.support.v7.widget.TintInfo -> android.support.v7.widget.TintInfo:
    22:22:void <init>() -> <init>
    29:33:void clear() -> clear
android.support.v7.widget.TintResources -> android.support.v7.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.v7.widget.TintTypedArray -> android.support.v7.widget.TintTypedArray:
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,android.support.v4.content.res.ResourcesCompat$FontCallback) -> getFont
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    209:209:int getResourceId(int,int) -> getResourceId
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    233:233:boolean hasValue(int) -> hasValue
    54:54:android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    245:246:void recycle() -> recycle
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    229:230:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    178:343:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2131:2137:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2019:2045:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1390:1407:void addSystemView(android.view.View,boolean) -> addSystemView
    2101:2101:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    715:720:void collapseActionView() -> collapseActionView
    1371:1387:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2168:2171:void ensureContentInsets() -> ensureContentInsets
    685:688:void ensureLogoView() -> ensureLogoView
    1033:1043:void ensureMenu() -> ensureMenu
    1046:1056:void ensureMenuView() -> ensureMenuView
    1361:1368:void ensureNavButtonView() -> ensureNavButtonView
    142:142:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2096:2096:android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2078:2078:android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2083:2090:android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2048:2057:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    1968:1995:int getChildTop(android.view.View,int) -> getChildTop
    2000:2007:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1146:1146:int getContentInsetEnd() -> getContentInsetEnd
    1268:1270:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1189:1189:int getContentInsetLeft() -> getContentInsetLeft
    1209:1209:int getContentInsetRight() -> getContentInsetRight
    1126:1126:int getContentInsetStart() -> getContentInsetStart
    1225:1227:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1320:1327:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1340:1342:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1355:1357:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1306:1308:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2066:2068:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    643:643:android.graphics.drawable.Drawable getLogo() -> getLogo
    681:681:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1007:1008:android.view.Menu getMenu() -> getMenu
    1059:1059:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    889:889:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    981:981:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2177:2177:android.support.v7.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1028:1029:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2181:2181:android.content.Context getPopupContext() -> getPopupContext
    369:369:int getPopupTheme() -> getPopupTheme
    784:784:java.lang.CharSequence getSubtitle() -> getSubtitle
    728:728:java.lang.CharSequence getTitle() -> getTitle
    466:466:int getTitleMarginBottom() -> getTitleMarginBottom
    444:444:int getTitleMarginEnd() -> getTitleMarginEnd
    400:400:int getTitleMarginStart() -> getTitleMarginStart
    422:422:int getTitleMarginTop() -> getTitleMarginTop
    2072:2073:int getVerticalMargins(android.view.View) -> getVerticalMargins
    1923:1938:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2111:2114:android.support.v7.widget.DecorToolbar getWrapper() -> getWrapper
    2140:2140:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    517:517:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    1943:1951:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    1956:1964:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1532:1549:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1507:1524:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1451:1453:void onDetachedFromWindow() -> onDetachedFromWindow
    1486:1502:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1705:1920:void onLayout(boolean,int,int,int,int) -> onLayout
    1571:1701:void onMeasure(int,int) -> onMeasure
    1423:1442:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    483:489:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1411:1418:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1462:1478:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1445:1447:void postShowOverflowMenu() -> postShowOverflowMenu
    2118:2128:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2150:2152:void setCollapsible(boolean) -> setCollapsible
    1286:1295:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1244:1253:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1105:1107:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    501:502:void setLogo(int) -> setLogo
    621:633:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    655:656:void setLogoDescription(int) -> setLogoDescription
    667:673:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    903:904:void setNavigationContentDescription(int) -> setNavigationContentDescription
    917:923:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    940:941:void setNavigationIcon(int) -> setNavigationIcon
    958:970:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    994:996:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1083:1084:void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1017:1019:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    353:361:void setPopupTheme(int) -> setPopupTheme
    795:796:void setSubtitle(int) -> setSubtitle
    806:830:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    848:852:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    872:876:void setSubtitleTextColor(int) -> setSubtitleTextColor
    740:741:void setTitle(int) -> setTitle
    752:776:void setTitle(java.lang.CharSequence) -> setTitle
    477:479:void setTitleMarginBottom(int) -> setTitleMarginBottom
    455:458:void setTitleMarginEnd(int) -> setTitleMarginEnd
    411:414:void setTitleMarginStart(int) -> setTitleMarginStart
    433:436:void setTitleMarginTop(int) -> setTitleMarginTop
    837:841:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    860:864:void setTitleTextColor(int) -> setTitleTextColor
    1556:1566:boolean shouldCollapse() -> shouldCollapse
    2062:2062:boolean shouldLayout(android.view.View) -> shouldLayout
    532:532:boolean showOverflowMenu() -> showOverflowMenu
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.Toolbar$1:
    200:200:void <init>(android.support.v7.widget.Toolbar) -> <init>
    203:206:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.Toolbar$2:
    218:218:void <init>(android.support.v7.widget.Toolbar) -> <init>
    220:221:void run() -> run
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.Toolbar$3:
    1380:1380:void <init>(android.support.v7.widget.Toolbar) -> <init>
    1383:1384:void onClick(android.view.View) -> onClick
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2309:2310:void <init>(android.support.v7.widget.Toolbar) -> <init>
    2407:2420:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    2370:2400:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    2365:2365:boolean flagActionItems() -> flagActionItems
    2315:2319:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    2361:2361:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2356:2356:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2329:2348:void updateMenuView(boolean) -> updateMenuView
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$LayoutParams:
    2213:2217:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2213:2222:void <init>(int,int) -> <init>
    2213:2237:void <init>(android.support.v7.widget.Toolbar$LayoutParams) -> <init>
    2213:2241:void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    2213:2248:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2213:2252:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2255:2259:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$SavedState:
    2287:2287:void <clinit>() -> <clinit>
    2271:2274:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2277:2278:void <init>(android.os.Parcelable) -> <init>
    2282:2285:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.Toolbar$SavedState$1:
    2287:2287:void <init>() -> <init>
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2290:2290:android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2295:2295:android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object[] newArray(int) -> newArray
    2300:2300:android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> newArray
android.support.v7.widget.ToolbarWidgetWrapper -> android.support.v7.widget.ToolbarWidgetWrapper:
    96:98:void <init>(android.support.v7.widget.Toolbar,boolean) -> <init>
    90:192:void <init>(android.support.v7.widget.Toolbar,boolean,int,int) -> <init>
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    222:222:android.content.Context getContext() -> getContext
    250:250:java.lang.CharSequence getTitle() -> getTitle
    540:547:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:418:void setDisplayOptions(int) -> setDisplayOptions
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    317:319:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:627:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:277:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    630:637:void updateHomeAccessibility() -> updateHomeAccessibility
    611:616:void updateNavigationIcon() -> updateNavigationIcon
    322:331:void updateToolbarLogo() -> updateToolbarLogo
android.support.v7.widget.ToolbarWidgetWrapper$1 -> android.support.v7.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(android.support.v7.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
android.support.v7.widget.TooltipCompat -> android.support.v7.widget.TooltipCompat:
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
android.support.v7.widget.TooltipCompat$$ExternalSyntheticApiModelOutline0 -> android.support.v7.widget.TooltipCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void android.support.v7.widget.TooltipCompat$$InternalSyntheticApiModelOutline$1$5df4f01e0c49d6a464f15f58d8a43b64d34e4d6cf4ff35d3531fc0370d1df9ff$0.m(android.view.View,java.lang.CharSequence) -> m
      # {"id":"com.android.tools.r8.synthesized"}
android.support.v7.widget.TooltipCompatHandler -> android.support.v7.widget.TooltipCompatHandler:
    54:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:225:void cancelPendingShow() -> cancelPendingShow
    250:252:void clearAnchorPos() -> clearAnchorPos
    192:207:void hide() -> hide
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:221:void scheduleShow() -> scheduleShow
    210:217:void setPendingHandler(android.support.v7.widget.TooltipCompatHandler) -> setPendingHandler
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:189:void show(boolean) -> show
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
android.support.v7.widget.TooltipCompatHandler$1 -> android.support.v7.widget.TooltipCompatHandler$1:
    54:54:void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
android.support.v7.widget.TooltipCompatHandler$2 -> android.support.v7.widget.TooltipCompatHandler$2:
    60:60:void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
android.support.v7.widget.TooltipPopup -> android.support.v7.widget.TooltipPopup:
    53:73:void <init>(android.content.Context) -> <init>
    104:184:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    187:207:android.view.View getAppRootView(android.view.View) -> getAppRootView
    90:96:void hide() -> hide
    99:99:boolean isShowing() -> isShowing
    77:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
android.support.v7.widget.VectorEnabledTintResources -> android.support.v7.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    55:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
android.support.v7.widget.ViewStubCompat -> android.support.v7.widget.ViewStubCompat:
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    159:159:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    155:155:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:150:void onMeasure(int,int) -> onMeasure
    97:98:void setInflatedId(int) -> setInflatedId
    137:138:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:130:void setLayoutResource(int) -> setLayoutResource
    248:249:void setOnInflateListener(android.support.v7.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:186:void setVisibility(int) -> setVisibility
android.support.v7.widget.ViewUtils -> android.support.v7.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
android.text.PrecomputedText -> android.text.PrecomputedText:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
      # {"id":"com.android.tools.r8.synthesized"}
    void removeSpan(java.lang.Object) -> removeSpan
      # {"id":"com.android.tools.r8.synthesized"}
    void setSpan(java.lang.Object,int,int,int) -> setSpan
      # {"id":"com.android.tools.r8.synthesized"}
android.text.PrecomputedText$Params -> android.text.PrecomputedText$Params:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean equals(java.lang.Object) -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    int getBreakStrategy() -> getBreakStrategy
      # {"id":"com.android.tools.r8.synthesized"}
    int getHyphenationFrequency() -> getHyphenationFrequency
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.TextPaint getTextPaint() -> getTextPaint
      # {"id":"com.android.tools.r8.synthesized"}
android.text.PrecomputedText$Params$Builder -> android.text.PrecomputedText$Params$Builder:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(android.text.TextPaint) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params build() -> build
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params$Builder setBreakStrategy(int) -> setBreakStrategy
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
      # {"id":"com.android.tools.r8.synthesized"}
    android.text.PrecomputedText$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
      # {"id":"com.android.tools.r8.synthesized"}
android.view.DisplayCutout -> android.view.DisplayCutout:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetBottom() -> getSafeInsetBottom
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetLeft() -> getSafeInsetLeft
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetRight() -> getSafeInsetRight
      # {"id":"com.android.tools.r8.synthesized"}
    int getSafeInsetTop() -> getSafeInsetTop
      # {"id":"com.android.tools.r8.synthesized"}
android.view.View$OnCapturedPointerListener -> android.view.View$OnCapturedPointerListener:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    9:9:void <init>() -> <init>
    11:20:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    24:33:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    58:58:void <clinit>() -> <clinit>
    36:38:void <init>(android.os.Parcel) -> <init>
    49:49:int describeContents() -> describeContents
    54:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    61:61:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    66:66:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    55:1492:void <init>() -> <init>
    1479:1480:java.lang.Class findParcelClass(androidx.versionedparcelable.VersionedParcelable) -> findParcelClass
    1485:1487:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    79:79:boolean isStream() -> isStream
    436:439:byte[] readByteArray(byte[],int) -> readByteArray
    1438:1451:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    373:376:int readInt(int,int) -> readInt
    445:448:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    415:418:java.lang.String readString(java.lang.String,int) -> readString
    1382:1386:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    242:242:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    277:279:void writeByteArray(byte[],int) -> writeByteArray
    298:300:void writeInt(int,int) -> writeInt
    355:357:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    334:336:void writeString(java.lang.String,int) -> writeString
    1460:1475:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    934:943:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    946:954:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    46:47:void <init>(android.os.Parcel) -> <init>
    37:55:void <init>(android.os.Parcel,int,int,java.lang.String) -> <init>
    93:105:void closeField() -> closeField
    113:113:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    219:225:byte[] readByteArray() -> readByteArray
    72:78:boolean readField(int) -> readField
    189:189:int readInt() -> readInt
    231:231:android.os.Parcelable readParcelable() -> readParcelable
    209:209:java.lang.String readString() -> readString
    58:67:int readUntilField(int) -> readUntilField
    83:89:void setOutputField(int) -> setOutputField
    119:125:void writeByteArray(byte[]) -> writeByteArray
    139:140:void writeInt(int) -> writeInt
    169:170:void writeParcelable(android.os.Parcelable) -> writeParcelable
    159:160:void writeString(java.lang.String) -> writeString
com.antplay.AppView -> com.antplay.AppView:
    com.antplay.grid.AppGridAdapter -$$Nest$fgetappGridAdapter(com.antplay.AppView) -> -$$Nest$fgetappGridAdapter
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.utils.SpinnerDialog -$$Nest$fgetblockingLoadSpinner(com.antplay.AppView) -> -$$Nest$fgetblockingLoadSpinner
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.nvstream.http.ComputerDetails -$$Nest$fgetcomputer(com.antplay.AppView) -> -$$Nest$fgetcomputer
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.HashSet -$$Nest$fgethiddenAppIds(com.antplay.AppView) -> -$$Nest$fgethiddenAppIds
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String -$$Nest$fgetlastRawApplist(com.antplay.AppView) -> -$$Nest$fgetlastRawApplist
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetlastRunningAppId(com.antplay.AppView) -> -$$Nest$fgetlastRunningAppId
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.computers.ComputerManagerService$ComputerManagerBinder -$$Nest$fgetmanagerBinder(com.antplay.AppView) -> -$$Nest$fgetmanagerBinder
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.computers.ComputerManagerService$ApplistPoller -$$Nest$fgetpoller(com.antplay.AppView) -> -$$Nest$fgetpoller
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.utils.ShortcutHelper -$$Nest$fgetshortcutHelper(com.antplay.AppView) -> -$$Nest$fgetshortcutHelper
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetshowHiddenApps(com.antplay.AppView) -> -$$Nest$fgetshowHiddenApps
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetsuspendGridUpdates(com.antplay.AppView) -> -$$Nest$fgetsuspendGridUpdates
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String -$$Nest$fgetuuidString(com.antplay.AppView) -> -$$Nest$fgetuuidString
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputappGridAdapter(com.antplay.AppView,com.antplay.grid.AppGridAdapter) -> -$$Nest$fputappGridAdapter
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputblockingLoadSpinner(com.antplay.AppView,com.antplay.utils.SpinnerDialog) -> -$$Nest$fputblockingLoadSpinner
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputcomputer(com.antplay.AppView,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$fputcomputer
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputlastRawApplist(com.antplay.AppView,java.lang.String) -> -$$Nest$fputlastRawApplist
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputlastRunningAppId(com.antplay.AppView,int) -> -$$Nest$fputlastRunningAppId
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmanagerBinder(com.antplay.AppView,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> -$$Nest$fputmanagerBinder
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputsuspendGridUpdates(com.antplay.AppView,boolean) -> -$$Nest$fputsuspendGridUpdates
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mpopulateAppGridWithCache(com.antplay.AppView) -> -$$Nest$mpopulateAppGridWithCache
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mstartComputerUpdates(com.antplay.AppView) -> -$$Nest$mstartComputerUpdates
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mupdateUiWithAppList(com.antplay.AppView,java.util.List) -> -$$Nest$mupdateUiWithAppList
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mupdateUiWithServerinfo(com.antplay.AppView,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$mupdateUiWithServerinfo
      # {"id":"com.android.tools.r8.synthesized"}
    52:82:void <init>() -> <init>
    622:623:int getAdapterFragmentLayoutId() -> getAdapterFragmentLayoutId
    356:358:void loadAppsBlocking() -> loadAppsBlocking
    162:179:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    440:504:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    436:436:void onContextMenuClosed(android.view.Menu) -> onContextMenuClosed
    284:320:void onCreate(android.os.Bundle) -> onCreate
    393:432:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    362:370:void onDestroy() -> onDestroy
    385:389:void onPause() -> onPause
    374:381:void onResume() -> onResume
    340:353:void populateAppGridWithCache() -> populateAppGridWithCache
    628:646:void receiveAbsListView(android.widget.AbsListView) -> receiveAbsListView
    183:266:void startComputerUpdates() -> startComputerUpdates
    269:280:void stopComputerUpdates() -> stopComputerUpdates
    323:335:void updateHiddenApps(boolean) -> updateHiddenApps
    547:618:void updateUiWithAppList(java.util.List) -> updateUiWithAppList
    509:544:void updateUiWithServerinfo(com.antplay.nvstream.http.ComputerDetails) -> updateUiWithServerinfo
com.antplay.AppView$1 -> com.antplay.AppView$1:
    82:82:void <init>(com.antplay.AppView) -> <init>
    84:153:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    156:157:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.antplay.AppView$1$1 -> com.antplay.AppView$1$1:
    88:88:void <init>(com.antplay.AppView$1,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> <init>
    92:151:void run() -> run
com.antplay.AppView$1$1$1 -> com.antplay.AppView$1$1$1:
    132:132:void <init>(com.antplay.AppView$1$1) -> <init>
    135:149:void run() -> run
com.antplay.AppView$2 -> com.antplay.AppView$2:
    187:187:void <init>(com.antplay.AppView) -> <init>
    191:259:void notifyComputerUpdated(com.antplay.nvstream.http.ComputerDetails) -> notifyComputerUpdated
com.antplay.AppView$2$1 -> com.antplay.AppView$2$1:
    202:202:void <init>(com.antplay.AppView$2) -> <init>
    206:208:void run() -> run
com.antplay.AppView$2$2 -> com.antplay.AppView$2$2:
    216:216:void <init>(com.antplay.AppView$2,com.antplay.nvstream.http.ComputerDetails) -> <init>
    220:226:void run() -> run
com.antplay.AppView$3 -> com.antplay.AppView$3:
    445:445:void <init>(com.antplay.AppView,com.antplay.AppView$AppObject) -> <init>
    448:449:void run() -> run
com.antplay.AppView$4 -> com.antplay.AppView$4:
    460:460:void <init>(com.antplay.AppView,com.antplay.AppView$AppObject) -> <init>
    463:475:void run() -> run
com.antplay.AppView$4$1 -> com.antplay.AppView$4$1:
    465:465:void <init>(com.antplay.AppView$4) -> <init>
    469:473:void run() -> run
com.antplay.AppView$5 -> com.antplay.AppView$5:
    509:509:void <init>(com.antplay.AppView,com.antplay.nvstream.http.ComputerDetails) -> <init>
    512:542:void run() -> run
com.antplay.AppView$6 -> com.antplay.AppView$6:
    547:547:void <init>(com.antplay.AppView,java.util.List) -> <init>
    550:616:void run() -> run
com.antplay.AppView$7 -> com.antplay.AppView$7:
    629:629:void <init>(com.antplay.AppView) -> <init>
    633:641:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.antplay.AppView$AppObject -> com.antplay.AppView$AppObject:
    653:658:void <init>(com.antplay.nvstream.http.NvApp) -> <init>
    662:662:java.lang.String toString() -> toString
com.antplay.BuildConfig -> com.antplay.BuildConfig:
    7:7:void <clinit>() -> <clinit>
com.antplay.Game -> com.antplay.Game:
    com.antplay.nvstream.NvConnection -$$Nest$fgetconn(com.antplay.Game) -> -$$Nest$fgetconn
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.binding.input.ControllerHandler -$$Nest$fgetcontrollerHandler(com.antplay.Game) -> -$$Nest$fgetcontrollerHandler
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetdisplayedFailureDialog(com.antplay.Game) -> -$$Nest$fgetdisplayedFailureDialog
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetgrabbedInput(com.antplay.Game) -> -$$Nest$fgetgrabbedInput
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetisHidingOverlays(com.antplay.Game) -> -$$Nest$fgetisHidingOverlays
      # {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView -$$Nest$fgetnotificationOverlayView(com.antplay.Game) -> -$$Nest$fgetnotificationOverlayView
      # {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView -$$Nest$fgetperformanceOverlayView(com.antplay.Game) -> -$$Nest$fgetperformanceOverlayView
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.preferences.PreferenceConfiguration -$$Nest$fgetprefConfig(com.antplay.Game) -> -$$Nest$fgetprefConfig
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetrequestedNotificationOverlayVisibility(com.antplay.Game) -> -$$Nest$fgetrequestedNotificationOverlayVisibility
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.utils.SpinnerDialog -$$Nest$fgetspinner(com.antplay.Game) -> -$$Nest$fgetspinner
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.ui.StreamView -$$Nest$fgetstreamView(com.antplay.Game) -> -$$Nest$fgetstreamView
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.SharedPreferences -$$Nest$fgettombstonePrefs(com.antplay.Game) -> -$$Nest$fgettombstonePrefs
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputconnected(com.antplay.Game,boolean) -> -$$Nest$fputconnected
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputconnectedToUsbDriverService(com.antplay.Game,boolean) -> -$$Nest$fputconnectedToUsbDriverService
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputconnecting(com.antplay.Game,boolean) -> -$$Nest$fputconnecting
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputdisplayedFailureDialog(com.antplay.Game,boolean) -> -$$Nest$fputdisplayedFailureDialog
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputreportedCrash(com.antplay.Game,boolean) -> -$$Nest$fputreportedCrash
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputrequestedNotificationOverlayVisibility(com.antplay.Game,int) -> -$$Nest$fputrequestedNotificationOverlayVisibility
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputspinner(com.antplay.Game,com.antplay.utils.SpinnerDialog) -> -$$Nest$fputspinner
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mhandleMotionEvent(com.antplay.Game,android.view.View,android.view.MotionEvent) -> -$$Nest$mhandleMotionEvent
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mhideSystemUi(com.antplay.Game,int) -> -$$Nest$mhideSystemUi
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$msetInputGrabState(com.antplay.Game,boolean) -> -$$Nest$msetInputGrabState
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mstopConnection(com.antplay.Game) -> -$$Nest$mstopConnection
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mupdatePipAutoEnter(com.antplay.Game) -> -$$Nest$mupdatePipAutoEnter
      # {"id":"com.android.tools.r8.synthesized"}
    90:1164:void <init>() -> <init>
    2042:2076:void connectionStarted() -> connectionStarted
    2012:2038:void connectionStatusUpdate(int) -> connectionStatusUpdate
    1943:2008:void connectionTerminated(int) -> connectionTerminated
    2080:2086:void displayMessage(java.lang.String) -> displayMessage
    2090:2098:void displayTransientMessage(java.lang.String) -> displayTransientMessage
    1243:1256:byte getModifierState(android.view.KeyEvent) -> getModifierState
    1260:1260:byte getModifierState() -> getModifierState
    647:671:android.app.PictureInPictureParams getPictureInPictureParams(boolean) -> getPictureInPictureParams
    1433:1437:com.antplay.binding.input.touch.TouchContext getTouchContext(int) -> getTouchContext
    1271:1342:boolean handleKeyDown(android.view.KeyEvent) -> handleKeyDown
    1423:1428:boolean handleKeyMultiple(android.view.KeyEvent) -> handleKeyMultiple
    1353:1406:boolean handleKeyUp(android.view.KeyEvent) -> handleKeyUp
    1452:1778:boolean handleMotionEvent(android.view.View,android.view.MotionEvent) -> handleMotionEvent
    1173:1233:boolean handleSpecialKeys(int,boolean) -> handleSpecialKeys
    1025:1030:void hideSystemUi(int) -> hideSystemUi
    762:762:boolean isRefreshRateEqualMatch(float) -> isRefreshRateEqualMatch
    767:768:boolean isRefreshRateGoodMatch(float) -> isRefreshRateGoodMatch
    2234:2248:void keyboardEvent(boolean,short) -> keyboardEvent
    792:792:boolean mayReduceRefreshRate() -> mayReduceRefreshRate
    2192:2220:void mouseButtonEvent(int,boolean) -> mouseButtonEvent
    2229:2230:void mouseHScroll(byte) -> mouseHScroll
    2185:2186:void mouseMove(int,int) -> mouseMove
    2224:2225:void mouseVScroll(byte) -> mouseVScroll
    599:643:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    184:536:void onCreate(android.os.Bundle) -> onCreate
    1062:1086:void onDestroy() -> onDestroy
    1842:1842:boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    1783:1783:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    2299:2307:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    1265:1265:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1411:1411:boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
    1347:1347:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1035:1058:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    2275:2281:void onPerfUpdate(java.lang.String) -> onPerfUpdate
    742:745:boolean onPictureInPictureRequested() -> onPictureInPictureRequested
    1090:1147:void onStop() -> onStop
    2253:2271:void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
    1848:1857:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    2293:2295:void onUsbPermissionPromptCompleted() -> onUsbPermissionPromptCompleted
    2287:2289:void onUsbPermissionPromptStarting() -> onUsbPermissionPromptStarting
    720:736:void onUserLeaveHint() -> onUserLeaveHint
    750:759:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    798:989:float prepareDisplayForRendering() -> prepareDisplayForRendering
    2102:2105:void rumble(short,short,short) -> rumble
    2109:2111:void setHdrMode(boolean,byte[]) -> setHdrMode
    1151:1162:void setInputGrabState(boolean) -> setInputGrabState
    693:716:void setMetaKeyCaptureState(boolean) -> setMetaKeyCaptureState
    539:595:void setPreferredOrientationForCurrentDisplay() -> setPreferredOrientationForCurrentDisplay
    773:788:boolean shouldIgnoreInsetsForResolution(int,int) -> shouldIgnoreInsetsForResolution
    1874:1874:void stageComplete(java.lang.String) -> stageComplete
    1903:1937:void stageFailed(java.lang.String,int,int) -> stageFailed
    1862:1870:void stageStarting(java.lang.String) -> stageStarting
    1877:1897:void stopConnection() -> stopConnection
    2115:2129:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    2135:2165:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    2169:2181:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    1443:1446:void toggleKeyboard() -> toggleKeyboard
    1792:1838:void updateMousePosition(android.view.View,android.view.MotionEvent) -> updateMousePosition
    675:687:void updatePipAutoEnter() -> updatePipAutoEnter
com.antplay.Game$$ExternalSyntheticApiModelOutline0 -> com.antplay.Game$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.Game$$InternalSyntheticApiModelOutline$1$da7cfcd3348de067dc7ac1b14c6fddcbd80cf85d88a77ad1c4dc0de01d419dc9$0.m(android.view.Surface,float,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.Game$$ExternalSyntheticApiModelOutline1 -> com.antplay.Game$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.Game$$InternalSyntheticApiModelOutline$1$da7cfcd3348de067dc7ac1b14c6fddcbd80cf85d88a77ad1c4dc0de01d419dc9$1.m(android.view.Surface,float,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.Game$$ExternalSyntheticApiModelOutline2 -> com.antplay.Game$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.Game$$InternalSyntheticApiModelOutline$1$e017dbcd8902e5b1721967b4b65a7162c00709ec52cd0555819e5c353af0d339$0.m(android.view.View,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.Game$$ExternalSyntheticApiModelOutline3 -> com.antplay.Game$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.PictureInPictureParams$Builder com.antplay.Game$$InternalSyntheticApiModelOutline$2$1fb8c64508410360138a1ffb7000a3eab54088215d3aef3a43b432a74305c800$0.m(android.app.PictureInPictureParams$Builder,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.Game$$ExternalSyntheticApiModelOutline4 -> com.antplay.Game$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.PictureInPictureParams$Builder com.antplay.Game$$InternalSyntheticApiModelOutline$2$1fb8c64508410360138a1ffb7000a3eab54088215d3aef3a43b432a74305c800$1.m(android.app.PictureInPictureParams$Builder,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.Game$1 -> com.antplay.Game$1:
    155:155:void <init>(com.antplay.Game) -> <init>
    158:163:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    167:168:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.antplay.Game$10 -> com.antplay.Game$10:
    2012:2012:void <init>(com.antplay.Game,int) -> <init>
    2015:2036:void run() -> run
com.antplay.Game$11 -> com.antplay.Game$11:
    2042:2042:void <init>(com.antplay.Game) -> <init>
    2045:2074:void run() -> run
com.antplay.Game$11$1 -> com.antplay.Game$11$1:
    2060:2060:void <init>(com.antplay.Game$11) -> <init>
    2063:2064:void run() -> run
com.antplay.Game$12 -> com.antplay.Game$12:
    2080:2080:void <init>(com.antplay.Game,java.lang.String) -> <init>
    2083:2084:void run() -> run
com.antplay.Game$13 -> com.antplay.Game$13:
    2091:2091:void <init>(com.antplay.Game,java.lang.String) -> <init>
    2094:2095:void run() -> run
com.antplay.Game$14 -> com.antplay.Game$14:
    2275:2275:void <init>(com.antplay.Game,java.lang.String) -> <init>
    2278:2279:void run() -> run
com.antplay.Game$2 -> com.antplay.Game$2:
    278:278:void <init>(com.antplay.Game) -> <init>
    281:281:boolean onCapturedPointer(android.view.View,android.view.MotionEvent) -> onCapturedPointer
com.antplay.Game$3 -> com.antplay.Game$3:
    389:389:void <init>(com.antplay.Game) -> <init>
    396:398:void notifyCrash(java.lang.Exception) -> notifyCrash
com.antplay.Game$4 -> com.antplay.Game$4:
    994:994:void <init>(com.antplay.Game) -> <init>
    1002:1021:void run() -> run
com.antplay.Game$5 -> com.antplay.Game$5:
    1164:1164:void <init>(com.antplay.Game) -> <init>
    1167:1168:void run() -> run
com.antplay.Game$6 -> com.antplay.Game$6:
    1862:1862:void <init>(com.antplay.Game,java.lang.String) -> <init>
    1865:1868:void run() -> run
com.antplay.Game$7 -> com.antplay.Game$7:
    1891:1891:void <init>(com.antplay.Game) -> <init>
    1893:1894:void run() -> run
com.antplay.Game$8 -> com.antplay.Game$8:
    1905:1905:void <init>(com.antplay.Game,java.lang.String,int,int,int) -> <init>
    1908:1935:void run() -> run
com.antplay.Game$9 -> com.antplay.Game$9:
    1946:1946:void <init>(com.antplay.Game,int,int,int) -> <init>
    1950:2006:void run() -> run
com.antplay.HelpActivity -> com.antplay.HelpActivity:
    com.antplay.utils.SpinnerDialog -$$Nest$fgetloadingDialog(com.antplay.HelpActivity) -> -$$Nest$fgetloadingDialog
      # {"id":"com.android.tools.r8.synthesized"}
    android.webkit.WebView -$$Nest$fgetwebView(com.antplay.HelpActivity) -> -$$Nest$fgetwebView
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputloadingDialog(com.antplay.HelpActivity,com.antplay.utils.SpinnerDialog) -> -$$Nest$fputloadingDialog
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mrefreshBackDispatchState(com.antplay.HelpActivity) -> -$$Nest$mrefreshBackDispatchState
      # {"id":"com.android.tools.r8.synthesized"}
    14:14:void <init>() -> <init>
    109:115:void onBackPressed() -> onBackPressed
    24:77:void onCreate(android.os.Bundle) -> onCreate
    95:102:void onDestroy() -> onDestroy
    80:91:void refreshBackDispatchState() -> refreshBackDispatchState
com.antplay.HelpActivity$1 -> com.antplay.HelpActivity$1:
    27:27:void <init>(com.antplay.HelpActivity) -> <init>
    32:35:void onBackInvoked() -> onBackInvoked
com.antplay.HelpActivity$2 -> com.antplay.HelpActivity$2:
    53:53:void <init>(com.antplay.HelpActivity) -> <init>
    67:73:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    56:63:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.antplay.LimeLog -> com.antplay.LimeLog:
    8:8:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    11:12:void info(java.lang.String) -> info
    19:20:void severe(java.lang.String) -> severe
    15:16:void warning(java.lang.String) -> warning
com.antplay.PcView -> com.antplay.PcView:
    boolean -$$Nest$fgetfreezeUpdates(com.antplay.PcView) -> -$$Nest$fgetfreezeUpdates
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.computers.ComputerManagerService$ComputerManagerBinder -$$Nest$fgetmanagerBinder(com.antplay.PcView) -> -$$Nest$fgetmanagerBinder
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.grid.PcGridAdapter -$$Nest$fgetpcGridAdapter(com.antplay.PcView) -> -$$Nest$fgetpcGridAdapter
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmanagerBinder(com.antplay.PcView,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> -$$Nest$fputmanagerBinder
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mcompleteOnCreate(com.antplay.PcView) -> -$$Nest$mcompleteOnCreate
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mdoAppList(com.antplay.PcView,com.antplay.nvstream.http.ComputerDetails,boolean,boolean) -> -$$Nest$mdoAppList
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mdoPair(com.antplay.PcView,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$mdoPair
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mremoveComputer(com.antplay.PcView,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$mremoveComputer
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$msendAndVerifySecurityPinManually(com.antplay.PcView,java.lang.String) -> -$$Nest$msendAndVerifySecurityPinManually
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mstartComputerUpdates(com.antplay.PcView) -> -$$Nest$mstartComputerUpdates
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mstopComputerUpdates(com.antplay.PcView,boolean) -> -$$Nest$mstopComputerUpdates
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mupdateComputer(com.antplay.PcView,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$mupdateComputer
      # {"id":"com.android.tools.r8.synthesized"}
    70:483:void <init>() -> <init>
    236:248:void completeOnCreate() -> completeOnCreate
    598:613:void doAppList(com.antplay.nvstream.http.ComputerDetails,boolean,boolean) -> doAppList
    389:481:void doPair(com.antplay.nvstream.http.ComputerDetails) -> doPair
    550:595:void doUnpair(com.antplay.nvstream.http.ComputerDetails) -> doUnpair
    517:547:void doWakeOnLan(com.antplay.nvstream.http.ComputerDetails) -> doWakeOnLan
    757:757:int getAdapterFragmentLayoutId() -> getAdapterFragmentLayoutId
    131:187:void initializeViews() -> initializeViews
    106:117:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    617:690:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    385:386:void onContextMenuClosed(android.view.Menu) -> onContextMenuClosed
    191:233:void onCreate(android.os.Bundle) -> onCreate
    327:378:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    292:297:void onDestroy() -> onDestroy
    312:316:void onPause() -> onPause
    301:308:void onResume() -> onResume
    320:323:void onStop() -> onStop
    762:780:void receiveAbsListView(android.widget.AbsListView) -> receiveAbsListView
    695:720:void removeComputer(com.antplay.nvstream.http.ComputerDetails) -> removeComputer
    485:513:void sendAndVerifySecurityPinManually(java.lang.String) -> sendAndVerifySecurityPinManually
    253:270:void startComputerUpdates() -> startComputerUpdates
    273:288:void stopComputerUpdates(boolean) -> stopComputerUpdates
    723:753:void updateComputer(com.antplay.nvstream.http.ComputerDetails) -> updateComputer
com.antplay.PcView$1 -> com.antplay.PcView$1:
    76:76:void <init>(com.antplay.PcView) -> <init>
    78:97:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    100:101:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.antplay.PcView$1$1 -> com.antplay.PcView$1$1:
    81:81:void <init>(com.antplay.PcView$1,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> <init>
    85:95:void run() -> run
com.antplay.PcView$10 -> com.antplay.PcView$10:
    527:527:void <init>(com.antplay.PcView,com.antplay.nvstream.http.ComputerDetails) -> <init>
    532:545:void run() -> run
com.antplay.PcView$10$1 -> com.antplay.PcView$10$1:
    539:539:void <init>(com.antplay.PcView$10,java.lang.String) -> <init>
    542:543:void run() -> run
com.antplay.PcView$11 -> com.antplay.PcView$11:
    560:560:void <init>(com.antplay.PcView,com.antplay.nvstream.http.ComputerDetails) -> <init>
    566:593:void run() -> run
com.antplay.PcView$11$1 -> com.antplay.PcView$11$1:
    587:587:void <init>(com.antplay.PcView$11,java.lang.String) -> <init>
    590:591:void run() -> run
com.antplay.PcView$12 -> com.antplay.PcView$12:
    637:637:void <init>(com.antplay.PcView,com.antplay.PcView$ComputerObject) -> <init>
    640:645:void run() -> run
com.antplay.PcView$13 -> com.antplay.PcView$13:
    669:669:void <init>(com.antplay.PcView,com.antplay.PcView$ComputerObject) -> <init>
    672:673:void run() -> run
com.antplay.PcView$14 -> com.antplay.PcView$14:
    763:763:void <init>(com.antplay.PcView) -> <init>
    766:776:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.antplay.PcView$15 -> com.antplay.PcView$15:
    338:338:void <clinit>() -> <clinit>
com.antplay.PcView$2 -> com.antplay.PcView$2:
    151:151:void <init>(com.antplay.PcView) -> <init>
    154:155:void onClick(android.view.View) -> onClick
com.antplay.PcView$3 -> com.antplay.PcView$3:
    157:157:void <init>(com.antplay.PcView) -> <init>
    160:162:void onClick(android.view.View) -> onClick
com.antplay.PcView$4 -> com.antplay.PcView$4:
    164:164:void <init>(com.antplay.PcView) -> <init>
    167:168:void onClick(android.view.View) -> onClick
com.antplay.PcView$5 -> com.antplay.PcView$5:
    202:202:void <init>(com.antplay.PcView,com.antplay.preferences.GlPreferences) -> <init>
    226:226:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    222:222:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    206:218:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
com.antplay.PcView$5$1 -> com.antplay.PcView$5$1:
    212:212:void <init>(com.antplay.PcView$5) -> <init>
    215:216:void run() -> run
com.antplay.PcView$6 -> com.antplay.PcView$6:
    255:255:void <init>(com.antplay.PcView) -> <init>
    258:266:void notifyComputerUpdated(com.antplay.nvstream.http.ComputerDetails) -> notifyComputerUpdated
com.antplay.PcView$6$1 -> com.antplay.PcView$6$1:
    259:259:void <init>(com.antplay.PcView$6,com.antplay.nvstream.http.ComputerDetails) -> <init>
    262:263:void run() -> run
com.antplay.PcView$7 -> com.antplay.PcView$7:
    399:399:void <init>(com.antplay.PcView,com.antplay.nvstream.http.ComputerDetails) -> <init>
    404:479:void run() -> run
com.antplay.PcView$7$1 -> com.antplay.PcView$7$1:
    463:463:void <init>(com.antplay.PcView$7,java.lang.String,boolean) -> <init>
    466:477:void run() -> run
com.antplay.PcView$8 -> com.antplay.PcView$8:
    491:491:void <init>(com.antplay.PcView) -> <init>
    494:506:void onResponse(java.lang.String,java.lang.String) -> onResponse
com.antplay.PcView$9 -> com.antplay.PcView$9:
    507:507:void <init>(com.antplay.PcView) -> <init>
    510:511:void onError(java.lang.String,java.lang.String,long) -> onError
com.antplay.PcView$ComputerObject -> com.antplay.PcView$ComputerObject:
    785:790:void <init>(com.antplay.nvstream.http.ComputerDetails) -> <init>
    794:794:java.lang.String toString() -> toString
com.antplay.PosterContentProvider -> com.antplay.PosterContentProvider:
    31:33:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    98:104:android.net.Uri createBoxArtUri(java.lang.String,java.lang.String) -> createBoxArtUri
    65:65:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    70:70:java.lang.String getType(android.net.Uri) -> getType
    75:75:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    80:81:boolean onCreate() -> onCreate
    46:60:android.os.ParcelFileDescriptor openBoxArtFile(android.net.Uri,java.lang.String) -> openBoxArtFile
    37:41:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    87:87:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    93:93:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.antplay.ShortcutTrampoline -> com.antplay.ShortcutTrampoline:
    com.antplay.nvstream.http.NvApp -$$Nest$fgetapp(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetapp
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.utils.SpinnerDialog -$$Nest$fgetblockingLoadSpinner(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetblockingLoadSpinner
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.nvstream.http.ComputerDetails -$$Nest$fgetcomputer(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetcomputer
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.ArrayList -$$Nest$fgetintentStack(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetintentStack
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.computers.ComputerManagerService$ComputerManagerBinder -$$Nest$fgetmanagerBinder(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetmanagerBinder
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.ServiceConnection -$$Nest$fgetserviceConnection(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetserviceConnection
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String -$$Nest$fgetuuidString(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetuuidString
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetwakeHostTries(com.antplay.ShortcutTrampoline) -> -$$Nest$fgetwakeHostTries
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputblockingLoadSpinner(com.antplay.ShortcutTrampoline,com.antplay.utils.SpinnerDialog) -> -$$Nest$fputblockingLoadSpinner
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputcomputer(com.antplay.ShortcutTrampoline,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$fputcomputer
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmanagerBinder(com.antplay.ShortcutTrampoline,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> -$$Nest$fputmanagerBinder
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputwakeHostTries(com.antplay.ShortcutTrampoline,int) -> -$$Nest$fputwakeHostTries
      # {"id":"com.android.tools.r8.synthesized"}
    26:36:void <init>() -> <init>
    255:276:void onCreate(android.os.Bundle) -> onCreate
    280:296:void onStop() -> onStop
    219:250:boolean validateInput(java.lang.String,java.lang.String) -> validateInput
com.antplay.ShortcutTrampoline$1 -> com.antplay.ShortcutTrampoline$1:
    36:36:void <init>(com.antplay.ShortcutTrampoline) -> <init>
    38:210:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    213:214:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.antplay.ShortcutTrampoline$1$1 -> com.antplay.ShortcutTrampoline$1$1:
    42:42:void <init>(com.antplay.ShortcutTrampoline$1,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> <init>
    46:208:void run() -> run
com.antplay.ShortcutTrampoline$1$1$1 -> com.antplay.ShortcutTrampoline$1$1$1:
    77:77:void <init>(com.antplay.ShortcutTrampoline$1$1) -> <init>
    81:206:void notifyComputerUpdated(com.antplay.nvstream.http.ComputerDetails) -> notifyComputerUpdated
com.antplay.ShortcutTrampoline$1$1$1$1 -> com.antplay.ShortcutTrampoline$1$1$1$1:
    103:103:void <init>(com.antplay.ShortcutTrampoline$1$1$1,com.antplay.nvstream.http.ComputerDetails) -> <init>
    107:203:void run() -> run
com.antplay.ShortcutTrampoline$1$1$1$1$1 -> com.antplay.ShortcutTrampoline$1$1$1$1$1:
    136:136:void <init>(com.antplay.ShortcutTrampoline$1$1$1$1,android.content.Intent) -> <init>
    139:146:void run() -> run
com.antplay.ShortcutTrampoline$1$1$1$1$2 -> com.antplay.ShortcutTrampoline$1$1$1$1$2:
    147:147:void <init>(com.antplay.ShortcutTrampoline$1$1$1$1) -> <init>
    151:152:void run() -> run
com.antplay.binding.PlatformBinding -> com.antplay.binding.PlatformBinding:
    10:10:com.antplay.nvstream.http.LimelightCryptoProvider getCryptoProvider(android.content.Context) -> getCryptoProvider
com.antplay.binding.audio.AndroidAudioRenderer -> com.antplay.binding.audio.AndroidAudioRenderer:
    23:26:void <init>(android.content.Context,boolean) -> <init>
    248:252:void cleanup() -> cleanup
    29:68:android.media.AudioTrack createAudioTrack(int,int,int,boolean) -> createAudioTrack
    211:220:void playDecodedAudio(short[]) -> playDecodedAudio
    82:205:int setup(com.antplay.nvstream.jni.MoonBridge$AudioConfiguration,int,int) -> setup
    224:232:void start() -> start
    236:243:void stop() -> stop
com.antplay.binding.audio.AndroidAudioRenderer$$ExternalSyntheticApiModelOutline0 -> com.antplay.binding.audio.AndroidAudioRenderer$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.media.AudioTrack$Builder com.antplay.binding.audio.AndroidAudioRenderer$$InternalSyntheticApiModelOutline$3$f46db166c394546a96a4bdc7c85ad6c612977e039753ee3ff4b78e30369cdf0c$0.m(android.media.AudioTrack$Builder,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.crypto.AndroidCryptoProvider -> com.antplay.binding.crypto.AndroidCryptoProvider:
    54:56:void <clinit>() -> <clinit>
    58:63:void <init>(android.content.Context) -> <init>
    115:157:boolean generateCertKeyPair() -> generateCertKeyPair
    194:215:java.security.cert.X509Certificate getClientCertificate() -> getClientCertificate
    221:242:java.security.interfaces.RSAPrivateKey getClientPrivateKey() -> getClientPrivateKey
    246:252:byte[] getPemEncodedClientCertificate() -> getPemEncodedClientCertificate
    83:110:boolean loadCertKeyPair() -> loadCertKeyPair
    66:78:byte[] loadFileToBytes(java.io.File) -> loadFileToBytes
    161:189:void saveCertKeyPair() -> saveCertKeyPair
com.antplay.binding.input.ControllerHandler -> com.antplay.binding.input.ControllerHandler:
    android.app.Activity -$$Nest$fgetactivityContext(com.antplay.binding.input.ControllerHandler) -> -$$Nest$fgetactivityContext
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Handler -$$Nest$fgethandler(com.antplay.binding.input.ControllerHandler) -> -$$Nest$fgethandler
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$msendEmulatedMouseEvent(com.antplay.binding.input.ControllerHandler,short,short) -> -$$Nest$msendEmulatedMouseEvent
      # {"id":"com.android.tools.r8.synthesized"}
    51:133:void <init>(android.app.Activity,com.antplay.nvstream.NvConnection,com.antplay.ui.GameGestures,com.antplay.preferences.PreferenceConfiguration) -> <init>
    320:382:void assignControllerNumberIfNeeded(com.antplay.binding.input.ControllerHandler$GenericControllerContext) -> assignControllerNumberIfNeeded
    503:748:com.antplay.binding.input.ControllerHandler$InputDeviceContext createInputDeviceContextForDevice(android.view.InputDevice) -> createInputDeviceContextForDevice
    385:398:com.antplay.binding.input.ControllerHandler$UsbDeviceContext createUsbDeviceContextForDevice(com.antplay.binding.input.driver.AbstractController) -> createUsbDeviceContextForDevice
    1867:1869:void deviceAdded(com.antplay.binding.input.driver.AbstractController) -> deviceAdded
    1856:1863:void deviceRemoved(com.antplay.binding.input.driver.AbstractController) -> deviceRemoved
    806:811:short getActiveControllerMask() -> getActiveControllerMask
    258:295:short getAttachedControllerMask(android.content.Context) -> getAttachedControllerMask
    753:780:com.antplay.binding.input.ControllerHandler$InputDeviceContext getContextForEvent(android.view.InputEvent) -> getContextForEvent
    139:145:android.view.InputDevice$MotionRange getMotionRangeForJoystickAxis(android.view.InputDevice,int) -> getMotionRangeForJoystickAxis
    1179:1251:void handleAxisSet(com.antplay.binding.input.ControllerHandler$InputDeviceContext,float,float,float,float,float,float,float,float) -> handleAxisSet
    1643:1794:boolean handleButtonDown(android.view.KeyEvent) -> handleButtonDown
    1477:1639:boolean handleButtonUp(android.view.KeyEvent) -> handleButtonUp
    1166:1174:void handleDeadZone(com.antplay.utils.Vector2d,float) -> handleDeadZone
    1145:1155:int handleFlipFaceButtons(int) -> handleFlipFaceButtons
    1254:1286:boolean handleMotionEvent(android.view.MotionEvent) -> handleMotionEvent
    930:1141:int handleRemapping(com.antplay.binding.input.ControllerHandler$InputDeviceContext,android.view.KeyEvent) -> handleRemapping
    1425:1474:void handleRumble(short,short,short) -> handleRumble
    1309:1323:boolean hasDualAmplitudeControlledRumbleVibrators(android.os.VibratorManager) -> hasDualAmplitudeControlledRumbleVibrators
    218:218:boolean hasGamepadButtons(android.view.InputDevice) -> hasGamepadButtons
    212:214:boolean hasJoystickAxes(android.view.InputDevice) -> hasJoystickAxes
    405:440:boolean isExternal(android.view.InputDevice) -> isExternal
    222:254:boolean isGameControllerDevice(android.view.InputDevice) -> isGameControllerDevice
    784:790:byte maxByMagnitude(byte,byte) -> maxByMagnitude
    795:801:short maxByMagnitude(short,short) -> maxByMagnitude
    151:151:void onInputDeviceAdded(int) -> onInputDeviceAdded
    168:194:void onInputDeviceChanged(int) -> onInputDeviceChanged
    155:162:void onInputDeviceRemoved(int) -> onInputDeviceRemoved
    1161:1162:com.antplay.utils.Vector2d populateCachedVector(float,float) -> populateCachedVector
    300:315:void releaseControllerNumber(com.antplay.binding.input.ControllerHandler$GenericControllerContext) -> releaseControllerNumber
    1820:1852:void reportControllerState(int,short,float,float,float,float,float,float) -> reportControllerState
    1801:1813:void reportOscState(short,short,short,short,short,byte,byte) -> reportOscState
    1330:1362:void rumbleDualVibrators(android.os.VibratorManager,short,short) -> rumbleDualVibrators
    1368:1422:void rumbleSingleVibrator(android.os.Vibrator,short,short) -> rumbleSingleVibrator
    816:924:void sendControllerInputPacket(com.antplay.binding.input.ControllerHandler$GenericControllerContext) -> sendControllerInputPacket
    1294:1305:void sendEmulatedMouseEvent(short,short) -> sendEmulatedMouseEvent
    444:498:boolean shouldIgnoreBack(android.view.InputDevice) -> shouldIgnoreBack
    197:209:void stop() -> stop
com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline0 -> com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.binding.input.ControllerHandler$$InternalSyntheticApiModelOutline$3$1cf81d0de8c9c212e6cbaf26a1c8012e698431cd3134865b70cdde3438c6b2d0$0.m(android.os.Vibrator) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline1 -> com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.binding.input.ControllerHandler$$InternalSyntheticApiModelOutline$3$1cf81d0de8c9c212e6cbaf26a1c8012e698431cd3134865b70cdde3438c6b2d0$1.m(android.os.Vibrator,android.os.VibrationEffect,android.media.AudioAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline2 -> com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.os.VibratorManager com.antplay.binding.input.ControllerHandler$$InternalSyntheticApiModelOutline$3$3d2490f2a14e2a352aa28b8606a087d7acf86e8e11291e1442e8c1cf69e03adf$0.m(android.view.InputDevice) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline3 -> com.antplay.binding.input.ControllerHandler$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.binding.input.ControllerHandler$$InternalSyntheticApiModelOutline$4$450d5ddf4ff6e7db4dddf143527803d0ebdd436b5161ccd2c7e9c38474f4e039$0.m(android.view.InputDevice) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.input.ControllerHandler$GenericControllerContext -> com.antplay.binding.input.ControllerHandler$GenericControllerContext:
    1871:1898:void <init>(com.antplay.binding.input.ControllerHandler) -> <init>
    1925:1927:void destroy() -> destroy
    1915:1922:void toggleMouseEmulation() -> toggleMouseEmulation
com.antplay.binding.input.ControllerHandler$GenericControllerContext$1 -> com.antplay.binding.input.ControllerHandler$GenericControllerContext$1:
    1898:1898:void <init>(com.antplay.binding.input.ControllerHandler$GenericControllerContext) -> <init>
    1901:1911:void run() -> run
com.antplay.binding.input.ControllerHandler$InputDeviceContext -> com.antplay.binding.input.ControllerHandler$InputDeviceContext:
    1930:1974:void <init>(com.antplay.binding.input.ControllerHandler) -> <init>
    1978:1986:void destroy() -> destroy
com.antplay.binding.input.ControllerHandler$UsbDeviceContext -> com.antplay.binding.input.ControllerHandler$UsbDeviceContext:
    1989:1989:void <init>(com.antplay.binding.input.ControllerHandler) -> <init>
    1994:1997:void destroy() -> destroy
com.antplay.binding.input.KeyboardTranslator -> com.antplay.binding.input.KeyboardTranslator:
    94:105:void <init>() -> <init>
    108:120:boolean hasNormalizedMapping(int,int) -> hasNormalizedMapping
    358:364:void onInputDeviceAdded(int) -> onInputDeviceAdded
    373:381:void onInputDeviceChanged(int) -> onInputDeviceChanged
    368:369:void onInputDeviceRemoved(int) -> onInputDeviceRemoved
    133:353:short translate(int,int) -> translate
com.antplay.binding.input.KeyboardTranslator$KeyboardMapping -> com.antplay.binding.input.KeyboardTranslator$KeyboardMapping:
    63:78:void <init>(android.view.InputDevice) -> <init>
    86:90:int getQwertyKeyCodeForDeviceKeyCode(int) -> getQwertyKeyCodeForDeviceKeyCode
com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider -> com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider:
    android.view.View -$$Nest$fgettargetView(com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider) -> -$$Nest$fgettargetView
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mhasCaptureCompatibleInputDevice(com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider) -> -$$Nest$mhasCaptureCompatibleInputDevice
      # {"id":"com.android.tools.r8.synthesized"}
    22:25:void <init>(android.app.Activity,android.view.View) -> <init>
    79:82:void disableCapture() -> disableCapture
    66:75:void enableCapture() -> enableCapture
    110:112:boolean eventHasRelativeMouseAxes(android.view.MotionEvent) -> eventHasRelativeMouseAxes
    117:123:float getRelativeAxisX(android.view.MotionEvent) -> getRelativeAxisX
    128:134:float getRelativeAxisY(android.view.MotionEvent) -> getRelativeAxisY
    36:61:boolean hasCaptureCompatibleInputDevice() -> hasCaptureCompatibleInputDevice
    28:28:boolean isCaptureProviderSupported() -> isCaptureProviderSupported
    140:143:void onInputDeviceAdded(int) -> onInputDeviceAdded
    160:162:void onInputDeviceChanged(int) -> onInputDeviceChanged
    148:151:void onInputDeviceRemoved(int) -> onInputDeviceRemoved
    86:103:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$ExternalSyntheticApiModelOutline0 -> com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$InternalSyntheticApiModelOutline$2$add09fd73f7fe51552cde3cfe309221552f0a235330d38507214a5df50a9ddea$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$ExternalSyntheticApiModelOutline1 -> com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$InternalSyntheticApiModelOutline$2$b019dcd93c090a51dd9c706ad70cad725bb6535652eea2dce0f15b1e1738f9b9$0.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$ExternalSyntheticApiModelOutline2 -> com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$$InternalSyntheticApiModelOutline$2$b019dcd93c090a51dd9c706ad70cad725bb6535652eea2dce0f15b1e1738f9b9$1.m(android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$1 -> com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider$1:
    95:95:void <init>(com.antplay.binding.input.capture.AndroidNativePointerCaptureProvider) -> <init>
    98:101:void run() -> run
com.antplay.binding.input.capture.AndroidPointerIconCaptureProvider -> com.antplay.binding.input.capture.AndroidPointerIconCaptureProvider:
    15:18:void <init>(android.app.Activity,android.view.View) -> <init>
    32:34:void disableCapture() -> disableCapture
    26:28:void enableCapture() -> enableCapture
    21:21:boolean isCaptureProviderSupported() -> isCaptureProviderSupported
com.antplay.binding.input.capture.InputCaptureManager -> com.antplay.binding.input.capture.InputCaptureManager:
    13:35:com.antplay.binding.input.capture.InputCaptureProvider getInputCaptureProvider(android.app.Activity,com.antplay.binding.input.evdev.EvdevListener) -> getInputCaptureProvider
com.antplay.binding.input.capture.InputCaptureProvider -> com.antplay.binding.input.capture.InputCaptureProvider:
    5:5:void <init>() -> <init>
    15:15:void destroy() -> destroy
    12:13:void disableCapture() -> disableCapture
    9:10:void enableCapture() -> enableCapture
    26:26:boolean eventHasRelativeMouseAxes(android.view.MotionEvent) -> eventHasRelativeMouseAxes
    30:30:float getRelativeAxisX(android.view.MotionEvent) -> getRelativeAxisX
    34:34:float getRelativeAxisY(android.view.MotionEvent) -> getRelativeAxisY
    22:22:boolean isCapturingActive() -> isCapturingActive
    37:37:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
com.antplay.binding.input.capture.NullCaptureProvider -> com.antplay.binding.input.capture.NullCaptureProvider:
    4:4:void <init>() -> <init>
com.antplay.binding.input.capture.ShieldCaptureProvider -> com.antplay.binding.input.capture.ShieldCaptureProvider:
    29:41:void <clinit>() -> <clinit>
    43:45:void <init>(android.content.Context) -> <init>
    72:74:void disableCapture() -> disableCapture
    66:68:void enableCapture() -> enableCapture
    80:81:boolean eventHasRelativeMouseAxes(android.view.MotionEvent) -> eventHasRelativeMouseAxes
    86:86:float getRelativeAxisX(android.view.MotionEvent) -> getRelativeAxisX
    91:91:float getRelativeAxisY(android.view.MotionEvent) -> getRelativeAxisY
    48:48:boolean isCaptureProviderSupported() -> isCaptureProviderSupported
    53:61:boolean setCursorVisibility(boolean) -> setCursorVisibility
com.antplay.binding.input.driver.AbstractController -> com.antplay.binding.input.driver.AbstractController:
    45:50:void <init>(int,com.antplay.binding.input.driver.UsbDriverListener,int,int) -> <init>
    17:17:int getControllerId() -> getControllerId
    25:25:int getProductId() -> getProductId
    21:21:int getVendorId() -> getVendorId
    59:60:void notifyDeviceAdded() -> notifyDeviceAdded
    55:56:void notifyDeviceRemoved() -> notifyDeviceRemoved
    38:40:void reportInput() -> reportInput
    29:35:void setButtonFlag(int,int) -> setButtonFlag
com.antplay.binding.input.driver.AbstractXboxController -> com.antplay.binding.input.driver.AbstractXboxController:
    boolean -$$Nest$fgetstopped(com.antplay.binding.input.driver.AbstractXboxController) -> -$$Nest$fgetstopped
      # {"id":"com.android.tools.r8.synthesized"}
    25:28:void <init>(android.hardware.usb.UsbDevice,android.hardware.usb.UsbDeviceConnection,int,com.antplay.binding.input.driver.UsbDriverListener) -> <init>
    31:31:java.lang.Thread createInputThread() -> createInputThread
    91:135:boolean start() -> start
    139:159:void stop() -> stop
com.antplay.binding.input.driver.AbstractXboxController$1 -> com.antplay.binding.input.driver.AbstractXboxController$1:
    31:31:void <init>(com.antplay.binding.input.driver.AbstractXboxController) -> <init>
    39:85:void run() -> run
com.antplay.binding.input.driver.UsbDriverService -> com.antplay.binding.input.driver.UsbDriverService:
    java.util.ArrayList -$$Nest$fgetcontrollers(com.antplay.binding.input.driver.UsbDriverService) -> -$$Nest$fgetcontrollers
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.binding.input.driver.UsbDriverService$UsbDriverStateListener -$$Nest$fgetstateListener(com.antplay.binding.input.driver.UsbDriverService) -> -$$Nest$fgetstateListener
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputlistener(com.antplay.binding.input.driver.UsbDriverService,com.antplay.binding.input.driver.UsbDriverListener) -> -$$Nest$fputlistener
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputstateListener(com.antplay.binding.input.driver.UsbDriverService,com.antplay.binding.input.driver.UsbDriverService$UsbDriverStateListener) -> -$$Nest$fputstateListener
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mhandleUsbDeviceState(com.antplay.binding.input.driver.UsbDriverService,android.hardware.usb.UsbDevice) -> -$$Nest$mhandleUsbDeviceState
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mstart(com.antplay.binding.input.driver.UsbDriverService) -> -$$Nest$mstart
      # {"id":"com.android.tools.r8.synthesized"}
    25:37:void <init>() -> <init>
    65:68:void deviceAdded(com.antplay.binding.input.driver.AbstractController) -> deviceAdded
    54:60:void deviceRemoved(com.antplay.binding.input.driver.AbstractController) -> deviceRemoved
    138:203:void handleUsbDeviceState(android.hardware.usb.UsbDevice) -> handleUsbDeviceState
    209:223:boolean isRecognizedInputDevice(android.hardware.usb.UsbDevice) -> isRecognizedInputDevice
    257:272:boolean kernelSupportsXbox360W() -> kernelSupportsXbox360W
    231:250:boolean kernelSupportsXboxOne() -> kernelSupportsXboxOne
    343:343:android.os.IBinder onBind(android.content.Intent) -> onBind
    328:330:void onCreate() -> onCreate
    334:339:void onDestroy() -> onDestroy
    46:49:void reportControllerState(int,short,float,float,float,float,float,float) -> reportControllerState
    276:279:boolean shouldClaimDevice(android.hardware.usb.UsbDevice,boolean) -> shouldClaimDevice
    283:307:void start() -> start
    310:324:void stop() -> stop
com.antplay.binding.input.driver.UsbDriverService$UsbDriverBinder -> com.antplay.binding.input.driver.UsbDriverService$UsbDriverBinder:
    111:111:void <init>(com.antplay.binding.input.driver.UsbDriverService) -> <init>
    113:121:void setListener(com.antplay.binding.input.driver.UsbDriverListener) -> setListener
    124:125:void setStateListener(com.antplay.binding.input.driver.UsbDriverService$UsbDriverStateListener) -> setStateListener
    128:129:void start() -> start
com.antplay.binding.input.driver.UsbDriverService$UsbEventReceiver -> com.antplay.binding.input.driver.UsbDriverService$UsbEventReceiver:
    70:70:void <init>(com.antplay.binding.input.driver.UsbDriverService) -> <init>
    73:108:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.antplay.binding.input.driver.UsbDriverService$UsbEventReceiver$1 -> com.antplay.binding.input.driver.UsbDriverService$UsbEventReceiver$1:
    86:86:void <init>(com.antplay.binding.input.driver.UsbDriverService$UsbEventReceiver,android.hardware.usb.UsbDevice) -> <init>
    90:91:void run() -> run
com.antplay.binding.input.driver.Xbox360Controller -> com.antplay.binding.input.driver.Xbox360Controller:
    16:16:void <clinit>() -> <clinit>
    59:60:void <init>(android.hardware.usb.UsbDevice,android.hardware.usb.UsbDeviceConnection,int,com.antplay.binding.input.driver.UsbDriverListener) -> <init>
    45:55:boolean canClaimDevice(android.hardware.usb.UsbDevice) -> canClaimDevice
    141:144:boolean doInit() -> doInit
    73:123:boolean handleRead(java.nio.ByteBuffer) -> handleRead
    149:158:void rumble(short,short) -> rumble
    127:135:boolean sendLedCommand(byte) -> sendLedCommand
    63:67:int unsignByte(byte) -> unsignByte
com.antplay.binding.input.driver.Xbox360WirelessDongle -> com.antplay.binding.input.driver.Xbox360WirelessDongle:
    20:20:void <clinit>() -> <clinit>
    39:42:void <init>(android.hardware.usb.UsbDevice,android.hardware.usb.UsbDeviceConnection,int,com.antplay.binding.input.driver.UsbDriverListener) -> <init>
    25:35:boolean canClaimDevice(android.hardware.usb.UsbDevice) -> canClaimDevice
    142:142:void rumble(short,short) -> rumble
    45:63:void sendLedCommandToEndpoint(android.hardware.usb.UsbEndpoint,int) -> sendLedCommandToEndpoint
    67:84:void sendLedCommandToInterface(android.hardware.usb.UsbInterface,int) -> sendLedCommandToInterface
    88:131:boolean start() -> start
    137:137:void stop() -> stop
com.antplay.binding.input.driver.XboxOneController -> com.antplay.binding.input.driver.XboxOneController:
    18:40:void <clinit>() -> <clinit>
    56:60:void <init>(android.hardware.usb.UsbDevice,android.hardware.usb.UsbDeviceConnection,int,com.antplay.binding.input.driver.UsbDriverListener) -> <init>
    96:99:void ackModeReport(byte) -> ackModeReport
    138:148:boolean canClaimDevice(android.hardware.usb.UsbDevice) -> canClaimDevice
    154:176:boolean doInit() -> doInit
    103:134:boolean handleRead(java.nio.ByteBuffer) -> handleRead
    63:93:void processButtons(java.nio.ByteBuffer) -> processButtons
    181:191:void rumble(short,short) -> rumble
com.antplay.binding.input.driver.XboxOneController$InitPacket -> com.antplay.binding.input.driver.XboxOneController$InitPacket:
    198:202:void <init>(int,int,byte[]) -> <init>
com.antplay.binding.input.evdev.EvdevCaptureProviderShim -> com.antplay.binding.input.evdev.EvdevCaptureProviderShim:
    9:9:void <init>() -> <init>
    17:21:com.antplay.binding.input.capture.InputCaptureProvider createEvdevCaptureProvider(android.app.Activity,com.antplay.binding.input.evdev.EvdevListener) -> createEvdevCaptureProvider
    11:11:boolean isCaptureProviderSupported() -> isCaptureProviderSupported
com.antplay.binding.input.touch.AbsoluteTouchContext -> com.antplay.binding.input.touch.AbsoluteTouchContext:
    boolean -$$Nest$fgetconfirmedTap(com.antplay.binding.input.touch.AbsoluteTouchContext) -> -$$Nest$fgetconfirmedTap
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.nvstream.NvConnection -$$Nest$fgetconn(com.antplay.binding.input.touch.AbsoluteTouchContext) -> -$$Nest$fgetconn
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputconfirmedLongPress(com.antplay.binding.input.touch.AbsoluteTouchContext,boolean) -> -$$Nest$fputconfirmedLongPress
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mcancelTapDownTimer(com.antplay.binding.input.touch.AbsoluteTouchContext) -> -$$Nest$mcancelTapDownTimer
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mtapConfirmed(com.antplay.binding.input.touch.AbsoluteTouchContext) -> -$$Nest$mtapConfirmed
      # {"id":"com.android.tools.r8.synthesized"}
    11:75:void <init>(com.antplay.nvstream.NvConnection,int,android.view.View) -> <init>
    163:164:void cancelLongPressTimer() -> cancelLongPressTimer
    172:173:void cancelTapDownTimer() -> cancelTapDownTimer
    223:236:void cancelTouch() -> cancelTouch
    106:106:boolean distanceExceeds(int,int,double) -> distanceExceeds
    80:80:int getActionIndex() -> getActionIndex
    240:240:boolean isCancelled() -> isCancelled
    245:248:void setPointerCount(int) -> setPointerCount
    158:160:void startLongPressTimer() -> startLongPressTimer
    167:169:void startTapDownTimer() -> startTapDownTimer
    176:190:void tapConfirmed() -> tapConfirmed
    86:102:boolean touchDownEvent(int,int,long,boolean) -> touchDownEvent
    195:218:boolean touchMoveEvent(int,int,long) -> touchMoveEvent
    123:155:void touchUpEvent(int,int,long) -> touchUpEvent
    114:118:void updatePosition(int,int) -> updatePosition
com.antplay.binding.input.touch.AbsoluteTouchContext$1 -> com.antplay.binding.input.touch.AbsoluteTouchContext$1:
    23:23:void <init>(com.antplay.binding.input.touch.AbsoluteTouchContext) -> <init>
    27:35:void run() -> run
com.antplay.binding.input.touch.AbsoluteTouchContext$2 -> com.antplay.binding.input.touch.AbsoluteTouchContext$2:
    38:38:void <init>(com.antplay.binding.input.touch.AbsoluteTouchContext) -> <init>
    42:43:void run() -> run
com.antplay.binding.input.touch.AbsoluteTouchContext$3 -> com.antplay.binding.input.touch.AbsoluteTouchContext$3:
    51:51:void <init>(com.antplay.binding.input.touch.AbsoluteTouchContext) -> <init>
    54:55:void run() -> run
com.antplay.binding.input.touch.RelativeTouchContext -> com.antplay.binding.input.touch.RelativeTouchContext:
    int -$$Nest$fgetactionIndex(com.antplay.binding.input.touch.RelativeTouchContext) -> -$$Nest$fgetactionIndex
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetconfirmedMove(com.antplay.binding.input.touch.RelativeTouchContext) -> -$$Nest$fgetconfirmedMove
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.nvstream.NvConnection -$$Nest$fgetconn(com.antplay.binding.input.touch.RelativeTouchContext) -> -$$Nest$fgetconn
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetmaxPointerCountInGesture(com.antplay.binding.input.touch.RelativeTouchContext) -> -$$Nest$fgetmaxPointerCountInGesture
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputconfirmedDrag(com.antplay.binding.input.touch.RelativeTouchContext,boolean) -> -$$Nest$fputconfirmedDrag
      # {"id":"com.android.tools.r8.synthesized"}
    byte -$$Nest$mgetMouseButtonIndex(com.antplay.binding.input.touch.RelativeTouchContext) -> -$$Nest$mgetMouseButtonIndex
      # {"id":"com.android.tools.r8.synthesized"}
    12:105:void <init>(com.antplay.nvstream.NvConnection,int,int,int,android.view.View,com.antplay.preferences.PreferenceConfiguration) -> <init>
    208:209:void cancelDragTimer() -> cancelDragTimer
    307:316:void cancelTouch() -> cancelTouch
    213:231:void checkForConfirmedMove(int,int) -> checkForConfirmedMove
    237:238:void checkForConfirmedScroll() -> checkForConfirmedScroll
    110:110:int getActionIndex() -> getActionIndex
    140:144:byte getMouseButtonIndex() -> getMouseButtonIndex
    320:320:boolean isCancelled() -> isCancelled
    123:135:boolean isTap(long) -> isTap
    115:117:boolean isWithinTapBounds(int,int) -> isWithinTapBounds
    325:330:void setPointerCount(int) -> setPointerCount
    203:205:void startDragTimer() -> startDragTimer
    152:170:boolean touchDownEvent(int,int,long,boolean) -> touchDownEvent
    243:302:boolean touchMoveEvent(int,int,long) -> touchMoveEvent
    176:200:void touchUpEvent(int,int,long) -> touchUpEvent
com.antplay.binding.input.touch.RelativeTouchContext$1 -> com.antplay.binding.input.touch.RelativeTouchContext$1:
    34:34:void <init>(com.antplay.binding.input.touch.RelativeTouchContext) -> <init>
    38:50:void run() -> run
com.antplay.binding.input.touch.RelativeTouchContext$2 -> com.antplay.binding.input.touch.RelativeTouchContext$2:
    55:55:void <init>(com.antplay.binding.input.touch.RelativeTouchContext) -> <init>
    58:59:void run() -> run
com.antplay.binding.input.touch.RelativeTouchContext$3 -> com.antplay.binding.input.touch.RelativeTouchContext$3:
    61:61:void <init>(com.antplay.binding.input.touch.RelativeTouchContext) -> <init>
    64:65:void run() -> run
com.antplay.binding.input.touch.RelativeTouchContext$4 -> com.antplay.binding.input.touch.RelativeTouchContext$4:
    67:67:void <init>(com.antplay.binding.input.touch.RelativeTouchContext) -> <init>
    70:71:void run() -> run
com.antplay.binding.input.touch.RelativeTouchContext$5 -> com.antplay.binding.input.touch.RelativeTouchContext$5:
    73:73:void <init>(com.antplay.binding.input.touch.RelativeTouchContext) -> <init>
    76:77:void run() -> run
com.antplay.binding.input.touch.RelativeTouchContext$6 -> com.antplay.binding.input.touch.RelativeTouchContext$6:
    79:79:void <init>(com.antplay.binding.input.touch.RelativeTouchContext) -> <init>
    82:83:void run() -> run
com.antplay.binding.input.virtual_controller.AnalogStick -> com.antplay.binding.input.virtual_controller.AnalogStick:
    93:172:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context,int) -> <init>
    175:176:void addAnalogStickListener(com.antplay.binding.input.virtual_controller.AnalogStick$AnalogStickListener) -> addAnalogStickListener
    138:162:double getAngle(float,float) -> getAngle
    133:133:double getMovementRadius(float,float) -> getMovementRadius
    187:192:void notifyOnClick() -> notifyOnClick
    195:200:void notifyOnDoubleClick() -> notifyOnDoubleClick
    179:184:void notifyOnMovement(float,float) -> notifyOnMovement
    203:208:void notifyOnRevoke() -> notifyOnRevoke
    223:254:void onElementDraw(android.graphics.Canvas) -> onElementDraw
    286:347:boolean onElementTouchEvent(android.view.MotionEvent) -> onElementTouchEvent
    213:218:void onSizeChanged(int,int,int,int) -> onSizeChanged
    258:281:void updatePosition(long) -> updatePosition
com.antplay.binding.input.virtual_controller.AnalogStick$1 -> com.antplay.binding.input.virtual_controller.AnalogStick$1:
    241:241:void <clinit>() -> <clinit>
com.antplay.binding.input.virtual_controller.AnalogStick$CLICK_STATE -> com.antplay.binding.input.virtual_controller.AnalogStick$CLICK_STATE:
    85:87:void <clinit>() -> <clinit>
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:com.antplay.binding.input.virtual_controller.AnalogStick$CLICK_STATE valueOf(java.lang.String) -> valueOf
    85:85:com.antplay.binding.input.virtual_controller.AnalogStick$CLICK_STATE[] values() -> values
com.antplay.binding.input.virtual_controller.AnalogStick$STICK_STATE -> com.antplay.binding.input.virtual_controller.AnalogStick$STICK_STATE:
    76:79:void <clinit>() -> <clinit>
    76:76:void <init>(java.lang.String,int) -> <init>
    76:76:com.antplay.binding.input.virtual_controller.AnalogStick$STICK_STATE valueOf(java.lang.String) -> valueOf
    76:76:com.antplay.binding.input.virtual_controller.AnalogStick$STICK_STATE[] values() -> values
com.antplay.binding.input.virtual_controller.DigitalButton -> com.antplay.binding.input.virtual_controller.DigitalButton:
    void -$$Nest$monLongClickCallback(com.antplay.binding.input.virtual_controller.DigitalButton) -> -$$Nest$monLongClickCallback
      # {"id":"com.android.tools.r8.synthesized"}
    44:120:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,int,int,android.content.Context) -> <init>
    123:124:void addDigitalButtonListener(com.antplay.binding.input.virtual_controller.DigitalButton$DigitalButtonListener) -> addDigitalButtonListener
    68:106:boolean checkMovement(float,float,com.antplay.binding.input.virtual_controller.DigitalButton) -> checkMovement
    110:115:void checkMovementForAllButtons(float,float) -> checkMovementForAllButtons
    62:63:boolean inRange(float,float) -> inRange
    166:174:void onClickCallback() -> onClickCallback
    139:163:void onElementDraw(android.graphics.Canvas) -> onElementDraw
    198:231:boolean onElementTouchEvent(android.view.MotionEvent) -> onElementTouchEvent
    177:182:void onLongClickCallback() -> onLongClickCallback
    185:193:void onReleaseCallback() -> onReleaseCallback
    132:134:void setIcon(int) -> setIcon
    127:129:void setText(java.lang.String) -> setText
com.antplay.binding.input.virtual_controller.DigitalButton$1 -> com.antplay.binding.input.virtual_controller.DigitalButton$1:
    48:48:void <init>(com.antplay.binding.input.virtual_controller.DigitalButton) -> <init>
    51:52:void run() -> run
com.antplay.binding.input.virtual_controller.DigitalPad -> com.antplay.binding.input.virtual_controller.DigitalPad:
    18:31:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> <init>
    34:35:void addDigitalPadListener(com.antplay.binding.input.virtual_controller.DigitalPad$DigitalPadListener) -> addDigitalPadListener
    152:158:void newDirectionCallback(int) -> newDirectionCallback
    40:149:void onElementDraw(android.graphics.Canvas) -> onElementDraw
    163:197:boolean onElementTouchEvent(android.view.MotionEvent) -> onElementTouchEvent
com.antplay.binding.input.virtual_controller.LeftAnalogStick -> com.antplay.binding.input.virtual_controller.LeftAnalogStick:
    13:48:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> <init>
com.antplay.binding.input.virtual_controller.LeftAnalogStick$1 -> com.antplay.binding.input.virtual_controller.LeftAnalogStick$1:
    15:15:void <init>(com.antplay.binding.input.virtual_controller.LeftAnalogStick,com.antplay.binding.input.virtual_controller.VirtualController) -> <init>
    28:28:void onClick() -> onClick
    32:37:void onDoubleClick() -> onDoubleClick
    18:24:void onMovement(float,float) -> onMovement
    41:46:void onRevoke() -> onRevoke
com.antplay.binding.input.virtual_controller.LeftTrigger -> com.antplay.binding.input.virtual_controller.LeftTrigger:
    11:35:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,int,android.content.Context) -> <init>
com.antplay.binding.input.virtual_controller.LeftTrigger$1 -> com.antplay.binding.input.virtual_controller.LeftTrigger$1:
    12:12:void <init>(com.antplay.binding.input.virtual_controller.LeftTrigger,com.antplay.binding.input.virtual_controller.VirtualController) -> <init>
    15:20:void onClick() -> onClick
    24:24:void onLongClick() -> onLongClick
    28:33:void onRelease() -> onRelease
com.antplay.binding.input.virtual_controller.RightAnalogStick -> com.antplay.binding.input.virtual_controller.RightAnalogStick:
    13:48:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> <init>
com.antplay.binding.input.virtual_controller.RightAnalogStick$1 -> com.antplay.binding.input.virtual_controller.RightAnalogStick$1:
    15:15:void <init>(com.antplay.binding.input.virtual_controller.RightAnalogStick,com.antplay.binding.input.virtual_controller.VirtualController) -> <init>
    28:28:void onClick() -> onClick
    32:37:void onDoubleClick() -> onDoubleClick
    18:24:void onMovement(float,float) -> onMovement
    41:46:void onRevoke() -> onRevoke
com.antplay.binding.input.virtual_controller.RightTrigger -> com.antplay.binding.input.virtual_controller.RightTrigger:
    11:35:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,int,android.content.Context) -> <init>
com.antplay.binding.input.virtual_controller.RightTrigger$1 -> com.antplay.binding.input.virtual_controller.RightTrigger$1:
    12:12:void <init>(com.antplay.binding.input.virtual_controller.RightTrigger,com.antplay.binding.input.virtual_controller.VirtualController) -> <init>
    15:20:void onClick() -> onClick
    24:24:void onLongClick() -> onLongClick
    28:33:void onRelease() -> onRelease
com.antplay.binding.input.virtual_controller.VirtualController -> com.antplay.binding.input.virtual_controller.VirtualController:
    android.widget.Button -$$Nest$fgetbuttonConfigure(com.antplay.binding.input.virtual_controller.VirtualController) -> -$$Nest$fgetbuttonConfigure
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List -$$Nest$fgetelements(com.antplay.binding.input.virtual_controller.VirtualController) -> -$$Nest$fgetelements
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$msendControllerInputContextInternal(com.antplay.binding.input.virtual_controller.VirtualController) -> -$$Nest$msendControllerInputContextInternal
      # {"id":"com.android.tools.r8.synthesized"}
    46:99:void <init>(com.antplay.binding.input.ControllerHandler,android.widget.FrameLayout,android.content.Context) -> <init>
    153:153:void _DBG(java.lang.String) -> _DBG
    138:143:void addElement(com.antplay.binding.input.virtual_controller.VirtualControllerElement,int,int,int,int) -> addElement
    178:178:com.antplay.binding.input.virtual_controller.VirtualController$ControllerInputContext getControllerInputContext() -> getControllerInputContext
    174:174:com.antplay.binding.input.virtual_controller.VirtualController$ControllerMode getControllerMode() -> getControllerMode
    146:146:java.util.List getElements() -> getElements
    102:102:android.os.Handler getHandler() -> getHandler
    106:111:void hide() -> hide
    156:171:void refreshLayout() -> refreshLayout
    122:128:void removeElements() -> removeElements
    203:214:void sendControllerInputContext() -> sendControllerInputContext
    182:199:void sendControllerInputContextInternal() -> sendControllerInputContextInternal
    131:134:void setOpacity(int) -> setOpacity
    114:119:void show() -> show
com.antplay.binding.input.virtual_controller.VirtualController$1 -> com.antplay.binding.input.virtual_controller.VirtualController$1:
    46:46:void <init>(com.antplay.binding.input.virtual_controller.VirtualController) -> <init>
    49:50:void run() -> run
com.antplay.binding.input.virtual_controller.VirtualController$2 -> com.antplay.binding.input.virtual_controller.VirtualController$2:
    72:72:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> <init>
    77:96:void onClick(android.view.View) -> onClick
com.antplay.binding.input.virtual_controller.VirtualController$ControllerInputContext -> com.antplay.binding.input.virtual_controller.VirtualController$ControllerInputContext:
    24:31:void <init>() -> <init>
com.antplay.binding.input.virtual_controller.VirtualController$ControllerMode -> com.antplay.binding.input.virtual_controller.VirtualController$ControllerMode:
    34:37:void <clinit>() -> <clinit>
    34:34:void <init>(java.lang.String,int) -> <init>
    34:34:com.antplay.binding.input.virtual_controller.VirtualController$ControllerMode valueOf(java.lang.String) -> valueOf
    34:34:com.antplay.binding.input.virtual_controller.VirtualController$ControllerMode[] values() -> values
com.antplay.binding.input.virtual_controller.VirtualControllerConfigurationLoader -> com.antplay.binding.input.virtual_controller.VirtualControllerConfigurationLoader:
    190:337:void createDefaultLayout(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> createDefaultLayout
    84:118:com.antplay.binding.input.virtual_controller.DigitalButton createDigitalButton(int,int,int,int,java.lang.String,int,com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> createDigitalButton
    36:72:com.antplay.binding.input.virtual_controller.DigitalPad createDigitalPad(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> createDigitalPad
    148:148:com.antplay.binding.input.virtual_controller.AnalogStick createLeftStick(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> createLeftStick
    127:130:com.antplay.binding.input.virtual_controller.DigitalButton createLeftTrigger(int,java.lang.String,int,com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> createLeftTrigger
    154:154:com.antplay.binding.input.virtual_controller.AnalogStick createRightStick(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> createRightStick
    139:142:com.antplay.binding.input.virtual_controller.DigitalButton createRightTrigger(int,java.lang.String,int,com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> createRightTrigger
    356:373:void loadFromPreferences(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> loadFromPreferences
    341:353:void saveProfile(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context) -> saveProfile
    29:29:int screenScale(int,int) -> screenScale
com.antplay.binding.input.virtual_controller.VirtualControllerConfigurationLoader$1 -> com.antplay.binding.input.virtual_controller.VirtualControllerConfigurationLoader$1:
    37:37:void <init>(com.antplay.binding.input.virtual_controller.VirtualController) -> <init>
    40:69:void onDirectionChange(int) -> onDirectionChange
com.antplay.binding.input.virtual_controller.VirtualControllerConfigurationLoader$2 -> com.antplay.binding.input.virtual_controller.VirtualControllerConfigurationLoader$2:
    88:88:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,int,int) -> <init>
    91:96:void onClick() -> onClick
    100:105:void onLongClick() -> onLongClick
    109:115:void onRelease() -> onRelease
com.antplay.binding.input.virtual_controller.VirtualControllerElement -> com.antplay.binding.input.virtual_controller.VirtualControllerElement:
    21:21:void <clinit>() -> <clinit>
    42:69:void <init>(com.antplay.binding.input.virtual_controller.VirtualController,android.content.Context,int) -> <init>
    293:296:void _DBG(java.lang.String) -> _DBG
    155:157:void actionCancel() -> actionCancel
    147:148:void actionEnableMove() -> actionEnableMove
    151:152:void actionEnableResize() -> actionEnableResize
    324:333:org.json.JSONObject getConfiguration() -> getConfiguration
    319:319:int getCorrectWidth() -> getCorrectWidth
    160:165:int getDefaultColor() -> getDefaultColor
    169:170:int getDefaultStrokeWidth() -> getDefaultStrokeWidth
    315:315:float getPercent(float,float) -> getPercent
    337:345:void loadConfiguration(org.json.JSONObject) -> loadConfiguration
    72:83:void moveElement(int,int,int,int) -> moveElement
    99:112:void onDraw(android.graphics.Canvas) -> onDraw
    231:285:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    86:95:void resizeElement(int,int,int,int) -> resizeElement
    307:312:void setOpacity(int) -> setOpacity
com.antplay.binding.input.virtual_controller.VirtualControllerElement$2 -> com.antplay.binding.input.virtual_controller.VirtualControllerElement$2:
    254:254:void <clinit>() -> <clinit>
com.antplay.binding.input.virtual_controller.VirtualControllerElement$Mode -> com.antplay.binding.input.virtual_controller.VirtualControllerElement$Mode:
    56:59:void <clinit>() -> <clinit>
    56:56:void <init>(java.lang.String,int) -> <init>
    56:56:com.antplay.binding.input.virtual_controller.VirtualControllerElement$Mode valueOf(java.lang.String) -> valueOf
    56:56:com.antplay.binding.input.virtual_controller.VirtualControllerElement$Mode[] values() -> values
com.antplay.binding.video.MediaCodecDecoderRenderer -> com.antplay.binding.video.MediaCodecDecoderRenderer:
    com.antplay.binding.video.VideoStats -$$Nest$fgetactiveWindowVideoStats(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetactiveWindowVideoStats
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetadaptivePlayback(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetadaptivePlayback
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.MediaCodecInfo -$$Nest$fgetavcDecoder(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetavcDecoder
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.HandlerThread -$$Nest$fgetchoreographerHandlerThread(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetchoreographerHandlerThread
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.MediaFormat -$$Nest$fgetconfiguredFormat(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetconfiguredFormat
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetconsecutiveCrashCount(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetconsecutiveCrashCount
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetfusedIdrFrame(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetfusedIdrFrame
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String -$$Nest$fgetglRenderer(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetglRenderer
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.binding.video.VideoStats -$$Nest$fgetglobalVideoStats(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetglobalVideoStats
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.MediaCodecInfo -$$Nest$fgethevcDecoder(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgethevcDecoder
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetinitialHeight(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetinitialHeight
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetinitialWidth(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetinitialWidth
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.MediaFormat -$$Nest$fgetinputFormat(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetinputFormat
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetnumFramesIn(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetnumFramesIn
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetnumFramesOut(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetnumFramesOut
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetnumPpsIn(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetnumPpsIn
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetnumSpsIn(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetnumSpsIn
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetnumVpsIn(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetnumVpsIn
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.LinkedBlockingQueue -$$Nest$fgetoutputBufferQueue(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetoutputBufferQueue
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.MediaFormat -$$Nest$fgetoutputFormat(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetoutputFormat
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.preferences.PreferenceConfiguration -$$Nest$fgetprefs(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetprefs
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetrefFrameInvalidationActive(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetrefFrameInvalidationActive
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetrefreshRate(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetrefreshRate
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetstopping(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetstopping
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.MediaCodec -$$Nest$fgetvideoDecoder(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetvideoDecoder
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetvideoFormat(com.antplay.binding.video.MediaCodecDecoderRenderer) -> -$$Nest$fgetvideoFormat
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputnumFramesOut(com.antplay.binding.video.MediaCodecDecoderRenderer,int) -> -$$Nest$fputnumFramesOut
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputoutputFormat(com.antplay.binding.video.MediaCodecDecoderRenderer,android.media.MediaFormat) -> -$$Nest$fputoutputFormat
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mdoCodecRecoveryIfRequired(com.antplay.binding.video.MediaCodecDecoderRenderer,int) -> -$$Nest$mdoCodecRecoveryIfRequired
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mhandleDecoderException(com.antplay.binding.video.MediaCodecDecoderRenderer,java.lang.IllegalStateException) -> -$$Nest$mhandleDecoderException
      # {"id":"com.android.tools.r8.synthesized"}
    56:307:void <init>(android.content.Context,com.antplay.preferences.PreferenceConfiguration,com.antplay.binding.video.CrashListener,int,boolean,boolean,java.lang.String,com.antplay.binding.video.PerfOverlayListener) -> <init>
    1191:1192:void cleanup() -> cleanup
    414:469:void configureAndStartDecoder(android.media.MediaFormat) -> configureAndStartDecoder
    370:409:android.media.MediaFormat createBaseMediaFormat(java.lang.String) -> createBaseMediaFormat
    138:175:boolean decoderCanMeetPerformancePoint(android.media.MediaCodecInfo$VideoCapabilities,com.antplay.preferences.PreferenceConfiguration) -> decoderCanMeetPerformancePoint
    179:183:boolean decoderCanMeetPerformancePointWithHevcAndNotAvc(android.media.MediaCodecInfo,android.media.MediaCodecInfo,com.antplay.preferences.PreferenceConfiguration) -> decoderCanMeetPerformancePointWithHevcAndNotAvc
    611:750:boolean doCodecRecoveryIfRequired(int) -> doCodecRecoveryIfRequired
    870:915:void doFrame(long) -> doFrame
    1273:1283:void doProfileSpecificSpsPatching(org.jcodec.codecs.h264.io.model.SeqParameterSet) -> doProfileSpecificSpsPatching
    1050:1117:boolean fetchNextInputBuffer() -> fetchNextInputBuffer
    129:133:android.media.MediaCodecInfo findAvcDecoder() -> findAvcDecoder
    193:229:android.media.MediaCodecInfo findHevcDecoder(com.antplay.preferences.PreferenceConfiguration,boolean,boolean) -> findHevcDecoder
    366:366:int getActiveVideoFormat() -> getActiveVideoFormat
    1665:1668:int getAverageDecoderLatency() -> getAverageDecoderLatency
    1658:1661:int getAverageEndToEndLatency() -> getAverageEndToEndLatency
    1636:1654:int getCapabilities() -> getCapabilities
    349:353:int getPreferredColorRange() -> getPreferredColorRange
    340:344:int getPreferredColorSpace() -> getPreferredColorSpace
    756:864:boolean handleDecoderException(java.lang.IllegalStateException) -> handleDecoderException
    506:594:int initializeDecoder(boolean) -> initializeDecoder
    314:314:boolean isAvcSupported() -> isAvcSupported
    318:329:boolean isHevcMain10Hdr10Supported() -> isHevcMain10Hdr10Supported
    310:310:boolean isHevcSupported() -> isHevcSupported
    362:363:void notifyVideoBackground() -> notifyVideoBackground
    358:359:void notifyVideoForeground() -> notifyVideoForeground
    1129:1155:void prepareForStop() -> prepareForStop
    1228:1265:boolean queueNextInputBuffer(long,int) -> queueNextInputBuffer
    1609:1631:boolean replaySps() -> replaySps
    1198:1222:void setHdrMode(boolean,byte[]) -> setHdrMode
    233:234:void setRenderTarget(android.view.SurfaceHolder) -> setRenderTarget
    599:604:int setup(int,int,int,int) -> setup
    1122:1124:void start() -> start
    918:935:void startChoreographerThread() -> startChoreographerThread
    939:1044:void startRendererThread() -> startRendererThread
    1160:1187:void stop() -> stop
    1289:1605:int submitDecodeUnit(byte[],int,int,int,int,long,long) -> submitDecodeUnit
    472:499:boolean tryConfigureDecoder(android.media.MediaCodecInfo,android.media.MediaFormat,boolean) -> tryConfigureDecoder
com.antplay.binding.video.MediaCodecDecoderRenderer$$ExternalSyntheticApiModelOutline0 -> com.antplay.binding.video.MediaCodecDecoderRenderer$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.binding.video.MediaCodecDecoderRenderer$$InternalSyntheticApiModelOutline$4$2a9da105ec5c7c81f7f16c0f17d947f5b218d6ef7a36d1114435b23ccf2c045b$0.m(android.media.MediaFormat,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.video.MediaCodecDecoderRenderer$$ExternalSyntheticApiModelOutline1 -> com.antplay.binding.video.MediaCodecDecoderRenderer$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List com.antplay.binding.video.MediaCodecDecoderRenderer$$InternalSyntheticApiModelOutline$5$8823dfda830b8072800cffe045c71470f193778ce2512cf2fb74d9ca8f7c648f$0.m(android.media.MediaCodecInfo$VideoCapabilities) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.video.MediaCodecDecoderRenderer$2 -> com.antplay.binding.video.MediaCodecDecoderRenderer$2:
    929:929:void <init>(com.antplay.binding.video.MediaCodecDecoderRenderer) -> <init>
    932:933:void run() -> run
com.antplay.binding.video.MediaCodecDecoderRenderer$3 -> com.antplay.binding.video.MediaCodecDecoderRenderer$3:
    939:939:void <init>(com.antplay.binding.video.MediaCodecDecoderRenderer) -> <init>
    942:1039:void run() -> run
com.antplay.binding.video.MediaCodecDecoderRenderer$4 -> com.antplay.binding.video.MediaCodecDecoderRenderer$4:
    1144:1144:void <init>(com.antplay.binding.video.MediaCodecDecoderRenderer) -> <init>
    1148:1152:void run() -> run
com.antplay.binding.video.MediaCodecDecoderRenderer$DecoderHungException -> com.antplay.binding.video.MediaCodecDecoderRenderer$DecoderHungException:
    1674:1676:void <init>(int) -> <init>
    1679:1684:java.lang.String toString() -> toString
com.antplay.binding.video.MediaCodecDecoderRenderer$RendererException -> com.antplay.binding.video.MediaCodecDecoderRenderer$RendererException:
    1690:1690:void <clinit>() -> <clinit>
    1694:1696:void <init>(com.antplay.binding.video.MediaCodecDecoderRenderer,java.lang.Exception) -> <init>
    1705:1807:java.lang.String generateText(com.antplay.binding.video.MediaCodecDecoderRenderer,java.lang.Exception) -> generateText
    1699:1699:java.lang.String toString() -> toString
com.antplay.binding.video.MediaCodecHelper -> com.antplay.binding.video.MediaCodecHelper:
    47:251:void <clinit>() -> <clinit>
    639:639:boolean decoderCanDirectSubmit(java.lang.String) -> decoderCanDirectSubmit
    697:736:boolean decoderIsWhitelistedForHevc(android.media.MediaCodecInfo) -> decoderIsWhitelistedForHevc
    647:647:boolean decoderNeedsBaselineSpsHack(java.lang.String) -> decoderNeedsBaselineSpsHack
    635:635:boolean decoderNeedsConstrainedHighProfile(java.lang.String) -> decoderNeedsConstrainedHighProfile
    643:643:boolean decoderNeedsSpsBitstreamRestrictions(java.lang.String) -> decoderNeedsSpsBitstreamRestrictions
    611:631:boolean decoderSupportsAdaptivePlayback(android.media.MediaCodecInfo,java.lang.String) -> decoderSupportsAdaptivePlayback
    435:447:boolean decoderSupportsAndroidRLowLatency(android.media.MediaCodecInfo,java.lang.String) -> decoderSupportsAndroidRLowLatency
    592:606:boolean decoderSupportsFusedIdrFrame(android.media.MediaCodecInfo,java.lang.String) -> decoderSupportsFusedIdrFrame
    452:476:boolean decoderSupportsKnownVendorLowLatencyOption(java.lang.String) -> decoderSupportsKnownVendorLowLatencyOption
    489:490:boolean decoderSupportsMaxOperatingRate(java.lang.String) -> decoderSupportsMaxOperatingRate
    663:673:boolean decoderSupportsRefFrameInvalidationAvc(java.lang.String,int) -> decoderSupportsRefFrameInvalidationAvc
    684:690:boolean decoderSupportsRefFrameInvalidationHevc(android.media.MediaCodecInfo) -> decoderSupportsRefFrameInvalidationHevc
    825:852:android.media.MediaCodecInfo findFirstDecoder(java.lang.String) -> findFirstDecoder
    887:935:android.media.MediaCodecInfo findKnownSafeDecoder(java.lang.String,int) -> findKnownSafeDecoder
    784:803:android.media.MediaCodecInfo findPreferredDecoder() -> findPreferredDecoder
    857:870:android.media.MediaCodecInfo findProbableSafeDecoder(java.lang.String,int) -> findProbableSafeDecoder
    288:294:int getAdrenoRendererModelNumber(java.lang.String) -> getAdrenoRendererModelNumber
    258:273:java.lang.String getAdrenoVersionString(java.lang.String) -> getAdrenoVersionString
    651:657:byte getDecoderOptimalSlicesPerFrame(java.lang.String) -> getDecoderOptimalSlicesPerFrame
    742:754:java.util.LinkedList getMediaCodecList() -> getMediaCodecList
    307:415:void initialize(android.content.Context,java.lang.String) -> initialize
    808:821:boolean isCodecBlacklisted(android.media.MediaCodecInfo) -> isCodecBlacklisted
    418:431:boolean isDecoderInList(java.util.List,java.lang.String) -> isDecoderInList
    959:991:boolean isExynos4Device() -> isExynos4Device
    303:303:boolean isGLES31SnapdragonRenderer(java.lang.String) -> isGLES31SnapdragonRenderer
    277:284:boolean isLowEndSnapdragonRenderer(java.lang.String) -> isLowEndSnapdragonRenderer
    254:254:boolean isPowerVR(java.lang.String) -> isPowerVR
    939:949:java.lang.String readCpuinfo() -> readCpuinfo
    498:587:boolean setDecoderLowLatencyOptions(android.media.MediaFormat,android.media.MediaCodecInfo,int) -> setDecoderLowLatencyOptions
    953:953:boolean stringContainsIgnoreCase(java.lang.String,java.lang.String) -> stringContainsIgnoreCase
com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline0 -> com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.binding.video.MediaCodecHelper$$InternalSyntheticApiModelOutline$2$93b29a571ee0cd1c8793fbfe01ff3caec3532e838dbdfe8993aef85a3ef79add$0.m(android.media.MediaCodecInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline1 -> com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.binding.video.MediaCodecHelper$$InternalSyntheticApiModelOutline$3$17122bbe07c3627d7dde34cd54cdf1bf1781d8e562a2d4d4f0f053a2fe110aeb$0.m(android.media.MediaCodecInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline2 -> com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List com.antplay.binding.video.MediaCodecHelper$$InternalSyntheticApiModelOutline$3$254465fd18e6c1b57ae1546b0d9dc8ffe5b75e802335137dc0fc22092c86e80a$0.m(android.media.MediaCodec) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline3 -> com.antplay.binding.video.MediaCodecHelper$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.binding.video.MediaCodecHelper$$InternalSyntheticApiModelOutline$4$88c5d0e08407790cce6f118d8bafc9fc2720a5ba34c9ddb637181fadaf677f51$0.m(android.media.MediaCodecInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.binding.video.VideoStats -> com.antplay.binding.video.VideoStats:
    5:5:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    17:30:void add(com.antplay.binding.video.VideoStats) -> add
    44:52:void clear() -> clear
    33:41:void copy(com.antplay.binding.video.VideoStats) -> copy
    55:63:com.antplay.binding.video.VideoStatsFps getFps() -> getFps
com.antplay.binding.video.VideoStatsFps -> com.antplay.binding.video.VideoStatsFps:
# {"id":"sourceFile","fileName":"VideoStats.java"}
    67:67:void <init>() -> <init>
com.antplay.computers.ComputerDatabaseManager -> com.antplay.computers.ComputerDatabaseManager:
    45:55:void <init>(android.content.Context) -> <init>
    58:59:void close() -> close
    84:85:void deleteComputer(com.antplay.nvstream.http.ComputerDetails) -> deleteComputer
    183:189:java.util.List getAllComputers() -> getAllComputers
    193:203:com.antplay.nvstream.http.ComputerDetails getComputerByUUID(java.lang.String) -> getComputerByUUID
    141:179:com.antplay.nvstream.http.ComputerDetails getComputerFromCursor(android.database.Cursor) -> getComputerFromCursor
    63:81:void initializeDb(android.content.Context) -> initializeDb
    100:106:com.antplay.nvstream.http.ComputerDetails$AddressTuple tupleFromJson(org.json.JSONObject,java.lang.String) -> tupleFromJson
    88:96:org.json.JSONObject tupleToJson(com.antplay.nvstream.http.ComputerDetails$AddressTuple) -> tupleToJson
    110:137:boolean updateComputer(com.antplay.nvstream.http.ComputerDetails) -> updateComputer
com.antplay.computers.ComputerManagerService -> com.antplay.computers.ComputerManagerService:
    java.util.concurrent.atomic.AtomicInteger -$$Nest$fgetactivePolls(com.antplay.computers.ComputerManagerService) -> -$$Nest$fgetactivePolls
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.discovery.DiscoveryService$DiscoveryBinder -$$Nest$fgetdiscoveryBinder(com.antplay.computers.ComputerManagerService) -> -$$Nest$fgetdiscoveryBinder
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.ServiceConnection -$$Nest$fgetdiscoveryServiceConnection(com.antplay.computers.ComputerManagerService) -> -$$Nest$fgetdiscoveryServiceConnection
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.computers.IdentityManager -$$Nest$fgetidManager(com.antplay.computers.ComputerManagerService) -> -$$Nest$fgetidManager
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.computers.ComputerManagerListener -$$Nest$fgetlistener(com.antplay.computers.ComputerManagerService) -> -$$Nest$fgetlistener
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetpollingActive(com.antplay.computers.ComputerManagerService) -> -$$Nest$fgetpollingActive
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.LinkedList -$$Nest$fgetpollingTuples(com.antplay.computers.ComputerManagerService) -> -$$Nest$fgetpollingTuples
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputdiscoveryBinder(com.antplay.computers.ComputerManagerService,com.antplay.discovery.DiscoveryService$DiscoveryBinder) -> -$$Nest$fputdiscoveryBinder
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputlistener(com.antplay.computers.ComputerManagerService,com.antplay.computers.ComputerManagerListener) -> -$$Nest$fputlistener
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputpollingActive(com.antplay.computers.ComputerManagerService,boolean) -> -$$Nest$fputpollingActive
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.nvstream.mdns.MdnsDiscoveryListener -$$Nest$mcreateDiscoveryListener(com.antplay.computers.ComputerManagerService) -> -$$Nest$mcreateDiscoveryListener
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Thread -$$Nest$mcreatePollingThread(com.antplay.computers.ComputerManagerService,com.antplay.computers.PollingTuple) -> -$$Nest$mcreatePollingThread
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mpopulateExternalAddress(com.antplay.computers.ComputerManagerService,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$mpopulateExternalAddress
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mrunPoll(com.antplay.computers.ComputerManagerService,com.antplay.nvstream.http.ComputerDetails,boolean,int) -> -$$Nest$mrunPoll
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.nvstream.http.ComputerDetails -$$Nest$mtryPollIp(com.antplay.computers.ComputerManagerService,com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.ComputerDetails$AddressTuple) -> -$$Nest$mtryPollIp
      # {"id":"com.android.tools.r8.synthesized"}
    45:70:void <init>() -> <init>
    478:503:boolean addComputerBlocking(com.antplay.nvstream.http.ComputerDetails) -> addComputerBlocking
    443:471:void addTuple(com.antplay.nvstream.http.ComputerDetails) -> addTuple
    399:399:com.antplay.nvstream.mdns.MdnsDiscoveryListener createDiscoveryListener() -> createDiscoveryListener
    165:193:java.lang.Thread createPollingThread(com.antplay.computers.PollingTuple) -> createPollingThread
    534:539:boolean getLocalDatabaseReference() -> getLocalDatabaseReference
    800:800:android.os.IBinder onBind(android.content.Intent) -> onBind
    723:778:void onCreate() -> onCreate
    782:796:void onDestroy() -> onDestroy
    310:330:boolean onUnbind(android.content.Intent) -> onUnbind
    632:702:com.antplay.nvstream.http.ComputerDetails parallelPollPc(com.antplay.nvstream.http.ComputerDetails) -> parallelPollPc
    707:716:boolean pollComputer(com.antplay.nvstream.http.ComputerDetails) -> pollComputer
    334:396:void populateExternalAddress(com.antplay.nvstream.http.ComputerDetails) -> populateExternalAddress
    543:546:void releaseLocalDatabaseReference() -> releaseLocalDatabaseReference
    508:531:void removeComputer(com.antplay.nvstream.http.ComputerDetails) -> removeComputer
    91:161:boolean runPoll(com.antplay.nvstream.http.ComputerDetails,boolean,int) -> runPoll
    608:629:void startParallelPollThread(com.antplay.computers.ComputerManagerService$ParallelPollTuple,java.util.HashSet) -> startParallelPollThread
    553:581:com.antplay.nvstream.http.ComputerDetails tryPollIp(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.ComputerDetails$AddressTuple) -> tryPollIp
com.antplay.computers.ComputerManagerService$1 -> com.antplay.computers.ComputerManagerService$1:
    70:70:void <init>(com.antplay.computers.ComputerManagerService) -> <init>
    72:82:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    85:86:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.antplay.computers.ComputerManagerService$2 -> com.antplay.computers.ComputerManagerService$2:
    165:165:void <init>(com.antplay.computers.ComputerManagerService,com.antplay.computers.PollingTuple) -> <init>
    169:190:void run() -> run
com.antplay.computers.ComputerManagerService$3 -> com.antplay.computers.ComputerManagerService$3:
    399:399:void <init>(com.antplay.computers.ComputerManagerService) -> <init>
    402:432:void notifyComputerAdded(com.antplay.nvstream.mdns.MdnsComputer) -> notifyComputerAdded
com.antplay.computers.ComputerManagerService$4 -> com.antplay.computers.ComputerManagerService$4:
    614:614:void <init>(com.antplay.computers.ComputerManagerService,com.antplay.computers.ComputerManagerService$ParallelPollTuple) -> <init>
    617:625:void run() -> run
com.antplay.computers.ComputerManagerService$5 -> com.antplay.computers.ComputerManagerService$5:
    747:747:void <init>(com.antplay.computers.ComputerManagerService) -> <init>
    750:759:void onAvailable(android.net.Network) -> onAvailable
    763:772:void onLost(android.net.Network) -> onLost
com.antplay.computers.ComputerManagerService$ApplistPoller -> com.antplay.computers.ComputerManagerService$ApplistPoller:
    com.antplay.nvstream.http.ComputerDetails -$$Nest$fgetcomputer(com.antplay.computers.ComputerManagerService$ApplistPoller) -> -$$Nest$fgetcomputer
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Thread -$$Nest$fgetthread(com.antplay.computers.ComputerManagerService$ApplistPoller) -> -$$Nest$fgetthread
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputreceivedAppList(com.antplay.computers.ComputerManagerService$ApplistPoller,boolean) -> -$$Nest$fputreceivedAppList
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.computers.PollingTuple -$$Nest$mgetPollingTuple(com.antplay.computers.ComputerManagerService$ApplistPoller,com.antplay.nvstream.http.ComputerDetails) -> -$$Nest$mgetPollingTuple
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mwaitPollingDelay(com.antplay.computers.ComputerManagerService$ApplistPoller) -> -$$Nest$mwaitPollingDelay
      # {"id":"com.android.tools.r8.synthesized"}
    806:811:void <init>(com.antplay.computers.ComputerManagerService,com.antplay.nvstream.http.ComputerDetails) -> <init>
    840:848:com.antplay.computers.PollingTuple getPollingTuple(com.antplay.nvstream.http.ComputerDetails) -> getPollingTuple
    814:817:void pollNow() -> pollNow
    852:938:void start() -> start
    941:948:void stop() -> stop
    821:836:boolean waitPollingDelay() -> waitPollingDelay
com.antplay.computers.ComputerManagerService$ApplistPoller$1 -> com.antplay.computers.ComputerManagerService$ApplistPoller$1:
    852:852:void <init>(com.antplay.computers.ComputerManagerService$ApplistPoller) -> <init>
    855:934:void run() -> run
com.antplay.computers.ComputerManagerService$ComputerManagerBinder -> com.antplay.computers.ComputerManagerService$ComputerManagerBinder:
    196:196:void <init>(com.antplay.computers.ComputerManagerService) -> <init>
    261:261:boolean addComputerBlocking(com.antplay.nvstream.http.ComputerDetails) -> addComputerBlocking
    274:274:com.antplay.computers.ComputerManagerService$ApplistPoller createAppListPoller(com.antplay.nvstream.http.ComputerDetails) -> createAppListPoller
    282:290:com.antplay.nvstream.http.ComputerDetails getComputer(java.lang.String) -> getComputer
    278:278:java.lang.String getUniqueId() -> getUniqueId
    294:305:void invalidateStateForComputer(java.lang.String) -> invalidateStateForComputer
    265:266:void removeComputer(com.antplay.nvstream.http.ComputerDetails) -> removeComputer
    199:225:void startPolling(com.antplay.computers.ComputerManagerListener) -> startPolling
    270:271:void stopPolling() -> stopPolling
    246:258:void waitForPollingStopped() -> waitForPollingStopped
    228:243:void waitForReady() -> waitForReady
com.antplay.computers.ComputerManagerService$ParallelPollTuple -> com.antplay.computers.ComputerManagerService$ParallelPollTuple:
    593:596:void <init>(com.antplay.nvstream.http.ComputerDetails$AddressTuple,com.antplay.nvstream.http.ComputerDetails) -> <init>
    599:602:void interrupt() -> interrupt
com.antplay.computers.IdentityManager -> com.antplay.computers.IdentityManager:
    20:27:void <init>(android.content.Context) -> <init>
    57:71:java.lang.String generateNewUniqueId(android.content.Context) -> generateNewUniqueId
    30:30:java.lang.String getUniqueId() -> getUniqueId
    35:51:java.lang.String loadUniqueId(android.content.Context) -> loadUniqueId
com.antplay.computers.LegacyDatabaseReader -> com.antplay.computers.LegacyDatabaseReader:
    72:86:java.util.List getAllComputers(android.database.sqlite.SQLiteDatabase) -> getAllComputers
    24:68:com.antplay.nvstream.http.ComputerDetails getComputerFromCursor(android.database.Cursor) -> getComputerFromCursor
    90:101:java.util.List migrateAllComputers(android.content.Context) -> migrateAllComputers
com.antplay.computers.LegacyDatabaseReader2 -> com.antplay.computers.LegacyDatabaseReader2:
    53:67:java.util.List getAllComputers(android.database.sqlite.SQLiteDatabase) -> getAllComputers
    23:49:com.antplay.nvstream.http.ComputerDetails getComputerFromCursor(android.database.Cursor) -> getComputerFromCursor
    71:82:java.util.List migrateAllComputers(android.content.Context) -> migrateAllComputers
com.antplay.computers.LegacyDatabaseReader3 -> com.antplay.computers.LegacyDatabaseReader3:
    92:106:java.util.List getAllComputers(android.database.sqlite.SQLiteDatabase) -> getAllComputers
    52:88:com.antplay.nvstream.http.ComputerDetails getComputerFromCursor(android.database.Cursor) -> getComputerFromCursor
    110:121:java.util.List migrateAllComputers(android.content.Context) -> migrateAllComputers
    26:30:java.lang.String readNonEmptyString(java.lang.String) -> readNonEmptyString
    34:43:com.antplay.nvstream.http.ComputerDetails$AddressTuple splitAddressToTuple(java.lang.String) -> splitAddressToTuple
com.antplay.computers.PollingTuple -> com.antplay.computers.PollingTuple:
# {"id":"sourceFile","fileName":"ComputerManagerService.java"}
    958:962:void <init>(com.antplay.nvstream.http.ComputerDetails,java.lang.Thread) -> <init>
com.antplay.discovery.DiscoveryService -> com.antplay.discovery.DiscoveryService:
    com.antplay.nvstream.mdns.MdnsDiscoveryListener -$$Nest$fgetboundListener(com.antplay.discovery.DiscoveryService) -> -$$Nest$fgetboundListener
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.nvstream.mdns.MdnsDiscoveryAgent -$$Nest$fgetdiscoveryAgent(com.antplay.discovery.DiscoveryService) -> -$$Nest$fgetdiscoveryAgent
      # {"id":"com.android.tools.r8.synthesized"}
    android.net.wifi.WifiManager$MulticastLock -$$Nest$fgetmulticastLock(com.antplay.discovery.DiscoveryService) -> -$$Nest$fgetmulticastLock
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputboundListener(com.antplay.discovery.DiscoveryService,com.antplay.nvstream.mdns.MdnsDiscoveryListener) -> -$$Nest$fputboundListener
      # {"id":"com.android.tools.r8.synthesized"}
    17:66:void <init>() -> <init>
    70:70:android.os.IBinder onBind(android.content.Intent) -> onBind
    45:64:void onCreate() -> onCreate
    76:81:boolean onUnbind(android.content.Intent) -> onUnbind
com.antplay.discovery.DiscoveryService$1 -> com.antplay.discovery.DiscoveryService$1:
    49:49:void <init>(com.antplay.discovery.DiscoveryService) -> <init>
    52:55:void notifyComputerAdded(com.antplay.nvstream.mdns.MdnsComputer) -> notifyComputerAdded
com.antplay.discovery.DiscoveryService$DiscoveryBinder -> com.antplay.discovery.DiscoveryService$DiscoveryBinder:
    23:23:void <init>(com.antplay.discovery.DiscoveryService) -> <init>
    25:26:void setListener(com.antplay.nvstream.mdns.MdnsDiscoveryListener) -> setListener
    29:31:void startDiscovery(int) -> startDiscovery
    34:36:void stopDiscovery() -> stopDiscovery
com.antplay.grid.AppGridAdapter -> com.antplay.grid.AppGridAdapter:
    38:49:void <init>(android.content.Context,com.antplay.preferences.PreferenceConfiguration,com.antplay.nvstream.http.ComputerDetails,java.lang.String,boolean) -> <init>
    135:150:void addApp(com.antplay.AppView$AppObject) -> addApp
    119:122:void cancelQueuedOperations() -> cancelQueuedOperations
    77:81:int getLayoutIdForPreferences(com.antplay.preferences.PreferenceConfiguration) -> getLayoutIdForPreferences
    27:27:void populateView(android.view.View,android.widget.ImageView,android.widget.ProgressBar,android.widget.TextView,android.widget.ImageView,java.lang.Object) -> populateView
    166:183:void populateView(android.view.View,android.widget.ImageView,android.widget.ProgressBar,android.widget.TextView,android.widget.ImageView,com.antplay.AppView$AppObject) -> populateView
    153:155:void removeApp(com.antplay.AppView$AppObject) -> removeApp
    125:131:void sortList(java.util.List) -> sortList
    52:74:void updateHiddenApps(java.util.Set,boolean) -> updateHiddenApps
    86:116:void updateLayoutWithPreferences(android.content.Context,com.antplay.preferences.PreferenceConfiguration) -> updateLayoutWithPreferences
com.antplay.grid.AppGridAdapter$1 -> com.antplay.grid.AppGridAdapter$1:
    125:125:void <init>() -> <init>
    125:125:int compare(java.lang.Object,java.lang.Object) -> compare
    128:128:int compare(com.antplay.AppView$AppObject,com.antplay.AppView$AppObject) -> compare
com.antplay.grid.GenericGridAdapter -> com.antplay.grid.GenericGridAdapter:
    19:27:void <init>(android.content.Context,int) -> <init>
    44:44:int getCount() -> getCount
    49:49:java.lang.Object getItem(int) -> getItem
    54:54:long getItemId(int) -> getItemId
    61:72:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    30:36:void setLayoutId(int) -> setLayoutId
com.antplay.grid.PcGridAdapter -> com.antplay.grid.PcGridAdapter:
    21:22:void <init>(android.content.Context,com.antplay.preferences.PreferenceConfiguration) -> <init>
    34:36:void addComputer(com.antplay.PcView$ComputerObject) -> addComputer
    25:25:int getLayoutIdForPreferences(com.antplay.preferences.PreferenceConfiguration) -> getLayoutIdForPreferences
    18:18:void populateView(android.view.View,android.widget.ImageView,android.widget.ProgressBar,android.widget.TextView,android.widget.ImageView,java.lang.Object) -> populateView
    53:92:void populateView(android.view.View,android.widget.ImageView,android.widget.ProgressBar,android.widget.TextView,android.widget.ImageView,com.antplay.PcView$ComputerObject) -> populateView
    48:48:boolean removeComputer(com.antplay.PcView$ComputerObject) -> removeComputer
    39:45:void sortList() -> sortList
    30:31:void updateLayoutWithPreferences(android.content.Context,com.antplay.preferences.PreferenceConfiguration) -> updateLayoutWithPreferences
com.antplay.grid.PcGridAdapter$1 -> com.antplay.grid.PcGridAdapter$1:
    39:39:void <init>(com.antplay.grid.PcGridAdapter) -> <init>
    39:39:int compare(java.lang.Object,java.lang.Object) -> compare
    42:42:int compare(com.antplay.PcView$ComputerObject,com.antplay.PcView$ComputerObject) -> compare
com.antplay.grid.assets.CachedAppAssetLoader -> com.antplay.grid.assets.CachedAppAssetLoader:
    com.antplay.grid.assets.DiskAssetLoader -$$Nest$fgetdiskLoader(com.antplay.grid.assets.CachedAppAssetLoader) -> -$$Nest$fgetdiskLoader
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.grid.assets.MemoryAssetLoader -$$Nest$fgetmemoryLoader(com.antplay.grid.assets.CachedAppAssetLoader) -> -$$Nest$fgetmemoryLoader
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.ThreadPoolExecutor -$$Nest$fgetnetworkExecutor(com.antplay.grid.assets.CachedAppAssetLoader) -> -$$Nest$fgetnetworkExecutor
      # {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Bitmap -$$Nest$fgetnoAppImageBitmap(com.antplay.grid.assets.CachedAppAssetLoader) -> -$$Nest$fgetnoAppImageBitmap
      # {"id":"com.android.tools.r8.synthesized"}
    double -$$Nest$fgetscalingDivider(com.antplay.grid.assets.CachedAppAssetLoader) -> -$$Nest$fgetscalingDivider
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.grid.assets.ScaledBitmap -$$Nest$mdoNetworkAssetLoad(com.antplay.grid.assets.CachedAppAssetLoader,com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple,com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask) -> -$$Nest$mdoNetworkAssetLoad
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$misBitmapPlaceholder(com.antplay.grid.assets.CachedAppAssetLoader,com.antplay.grid.assets.ScaledBitmap) -> -$$Nest$misBitmapPlaceholder
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask -$$Nest$smgetLoaderTask(android.widget.ImageView) -> -$$Nest$smgetLoaderTask
      # {"id":"com.android.tools.r8.synthesized"}
    34:70:void <init>(com.antplay.nvstream.http.ComputerDetails,double,com.antplay.grid.assets.NetworkAssetLoader,com.antplay.grid.assets.MemoryAssetLoader,com.antplay.grid.assets.DiskAssetLoader,android.graphics.Bitmap) -> <init>
    74:77:void cancelBackgroundLoads() -> cancelBackgroundLoads
    82:89:void cancelForegroundLoads() -> cancelForegroundLoads
    286:302:boolean cancelPendingLoad(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple,android.widget.ImageView) -> cancelPendingLoad
    97:142:com.antplay.grid.assets.ScaledBitmap doNetworkAssetLoad(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple,com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask) -> doNetworkAssetLoad
    92:93:void freeCacheMemory() -> freeCacheMemory
    270:282:com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask getLoaderTask(android.widget.ImageView) -> getLoaderTask
    329:329:boolean isBitmapPlaceholder(com.antplay.grid.assets.ScaledBitmap) -> isBitmapPlaceholder
    335:369:boolean populateImageView(com.antplay.nvstream.http.NvApp,android.widget.ImageView,android.widget.TextView) -> populateImageView
    306:326:void queueCacheLoad(com.antplay.nvstream.http.NvApp) -> queueCacheLoad
com.antplay.grid.assets.CachedAppAssetLoader$1 -> com.antplay.grid.assets.CachedAppAssetLoader$1:
    314:314:void <init>(com.antplay.grid.assets.CachedAppAssetLoader,com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple) -> <init>
    318:324:void run() -> run
com.antplay.grid.assets.CachedAppAssetLoader$AsyncDrawable -> com.antplay.grid.assets.CachedAppAssetLoader$AsyncDrawable:
    260:262:void <init>(android.content.res.Resources,android.graphics.Bitmap,com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask) -> <init>
    265:265:com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask getLoaderTask() -> getLoaderTask
com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask -> com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask:
    java.lang.ref.WeakReference -$$Nest$fgetimageViewRef(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask) -> -$$Nest$fgetimageViewRef
      # {"id":"com.android.tools.r8.synthesized"}
    com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple -$$Nest$fgettuple(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask) -> -$$Nest$fgettuple
      # {"id":"com.android.tools.r8.synthesized"}
    152:156:void <init>(com.antplay.grid.assets.CachedAppAssetLoader,android.widget.ImageView,android.widget.TextView,boolean) -> <init>
    145:145:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    160:184:com.antplay.grid.assets.ScaledBitmap doInBackground(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple[]) -> doInBackground
    145:145:void onPostExecute(java.lang.Object) -> onPostExecute
    213:252:void onPostExecute(com.antplay.grid.assets.ScaledBitmap) -> onPostExecute
    145:145:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    190:208:void onProgressUpdate(java.lang.Void[]) -> onProgressUpdate
com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask$1 -> com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask$1:
    228:228:void <init>(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTask,android.widget.ImageView,com.antplay.grid.assets.ScaledBitmap) -> <init>
    235:237:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    240:240:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    230:230:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple -> com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple:
    376:379:void <init>(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp) -> <init>
    383:388:boolean equals(java.lang.Object) -> equals
    393:393:java.lang.String toString() -> toString
com.antplay.grid.assets.DiskAssetLoader -> com.antplay.grid.assets.DiskAssetLoader:
    boolean -$$Nest$fgetisLowRamDevice(com.antplay.grid.assets.DiskAssetLoader) -> -$$Nest$fgetisLowRamDevice
      # {"id":"com.android.tools.r8.synthesized"}
    29:39:void <init>(android.content.Context) -> <init>
    48:64:int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
    42:42:boolean checkCacheExists(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple) -> checkCacheExists
    147:154:void deleteAssetsForComputer(java.lang.String) -> deleteAssetsForComputer
    143:143:java.io.File getFile(java.lang.String,int) -> getFile
    68:139:com.antplay.grid.assets.ScaledBitmap loadBitmapFromCache(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple,int) -> loadBitmapFromCache
    157:171:void populateCacheWithStream(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple,java.io.InputStream) -> populateCacheWithStream
com.antplay.grid.assets.DiskAssetLoader$1 -> com.antplay.grid.assets.DiskAssetLoader$1:
    120:120:void <init>(com.antplay.grid.assets.DiskAssetLoader,com.antplay.grid.assets.ScaledBitmap) -> <init>
    123:130:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
com.antplay.grid.assets.MemoryAssetLoader -> com.antplay.grid.assets.MemoryAssetLoader:
    java.util.HashMap -$$Nest$sfgetevictionCache() -> -$$Nest$sfgetevictionCache
      # {"id":"com.android.tools.r8.synthesized"}
    11:29:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    71:73:void clearCache() -> clearCache
    32:32:java.lang.String constructKey(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple) -> constructKey
    36:62:com.antplay.grid.assets.ScaledBitmap loadBitmapFromCache(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple) -> loadBitmapFromCache
    66:67:void populateCache(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple,com.antplay.grid.assets.ScaledBitmap) -> populateCache
com.antplay.grid.assets.MemoryAssetLoader$1 -> com.antplay.grid.assets.MemoryAssetLoader$1:
    12:12:void <init>(int) -> <init>
    12:12:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    21:27:void entryRemoved(boolean,java.lang.String,com.antplay.grid.assets.ScaledBitmap,com.antplay.grid.assets.ScaledBitmap) -> entryRemoved
    12:12:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    16:16:int sizeOf(java.lang.String,com.antplay.grid.assets.ScaledBitmap) -> sizeOf
com.antplay.grid.assets.NetworkAssetLoader -> com.antplay.grid.assets.NetworkAssetLoader:
    17:20:void <init>(android.content.Context,java.lang.String) -> <init>
    23:38:java.io.InputStream getBitmapStream(com.antplay.grid.assets.CachedAppAssetLoader$LoaderTuple) -> getBitmapStream
com.antplay.grid.assets.ScaledBitmap -> com.antplay.grid.assets.ScaledBitmap:
    11:11:void <init>() -> <init>
    13:17:void <init>(int,int,android.graphics.Bitmap) -> <init>
com.antplay.models.LoginResponse -> com.antplay.models.LoginResponse:
    6:6:void <init>() -> <init>
com.antplay.nvstream.ConnectionContext -> com.antplay.nvstream.ConnectionContext:
    9:9:void <init>() -> <init>
com.antplay.nvstream.NvConnection -> com.antplay.nvstream.NvConnection:
    com.antplay.nvstream.ConnectionContext -$$Nest$fgetcontext(com.antplay.nvstream.NvConnection) -> -$$Nest$fgetcontext
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mstartApp(com.antplay.nvstream.NvConnection) -> -$$Nest$mstartApp
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.Semaphore -$$Nest$sfgetconnectionAllowed() -> -$$Nest$sfgetconnectionAllowed
      # {"id":"com.android.tools.r8.synthesized"}
    46:46:void <clinit>() -> <clinit>
    51:67:void <init>(android.content.Context,com.antplay.nvstream.http.ComputerDetails$AddressTuple,int,java.lang.String,com.antplay.nvstream.StreamConfiguration,com.antplay.nvstream.http.LimelightCryptoProvider,java.security.cert.X509Certificate) -> <init>
    126:217:int detectServerConnectionType() -> detectServerConnectionType
    546:546:java.lang.String findExternalAddressForMdns(java.lang.String,int) -> findExternalAddressForMdns
    71:79:javax.crypto.SecretKey generateRiAesKey() -> generateRiAesKey
    84:84:int generateRiKeyId() -> generateRiKeyId
    368:375:boolean launchNotRunningApp(com.antplay.nvstream.http.NvHTTP,com.antplay.nvstream.ConnectionContext) -> launchNotRunningApp
    346:362:boolean quitAndLaunch(com.antplay.nvstream.http.NvHTTP,com.antplay.nvstream.ConnectionContext) -> quitAndLaunch
    104:121:java.net.InetAddress resolveServerAddress() -> resolveServerAddress
    492:496:void sendControllerInput(short,short,short,byte,byte,short,short,short,short) -> sendControllerInput
    510:513:void sendKeyboardInput(short,byte,byte,byte) -> sendKeyboardInput
    474:477:void sendMouseButtonDown(byte) -> sendMouseButtonDown
    481:484:void sendMouseButtonUp(byte) -> sendMouseButtonUp
    522:525:void sendMouseHScroll(byte) -> sendMouseHScroll
    534:537:void sendMouseHighResHScroll(short) -> sendMouseHighResHScroll
    528:531:void sendMouseHighResScroll(short) -> sendMouseHighResScroll
    453:456:void sendMouseMove(short,short) -> sendMouseMove
    467:470:void sendMouseMoveAsMousePosition(short,short,short,short) -> sendMouseMoveAsMousePosition
    460:463:void sendMousePosition(short,short,short,short) -> sendMousePosition
    516:519:void sendMouseScroll(byte) -> sendMouseScroll
    540:543:void sendUtf8Text(java.lang.String) -> sendUtf8Text
    380:449:void start(com.antplay.nvstream.av.audio.AudioRenderer,com.antplay.nvstream.av.video.VideoDecoderRenderer,com.antplay.nvstream.NvConnectionListener) -> start
    222:339:boolean startApp() -> startApp
    89:100:void stop() -> stop
com.antplay.nvstream.NvConnection$$ExternalSyntheticApiModelOutline0 -> com.antplay.nvstream.NvConnection$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.net.IpPrefix com.antplay.nvstream.NvConnection$$InternalSyntheticApiModelOutline$4$c200d83b03ce4a953518d7965d231dba679e4afa2875f2a7900d150481953526$0.m(android.net.LinkProperties) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.nvstream.NvConnection$$ExternalSyntheticApiModelOutline1 -> com.antplay.nvstream.NvConnection$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.nvstream.NvConnection$$InternalSyntheticApiModelOutline$4$c200d83b03ce4a953518d7965d231dba679e4afa2875f2a7900d150481953526$1.m(android.net.RouteInfo) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.nvstream.NvConnection$1 -> com.antplay.nvstream.NvConnection$1:
    380:380:void <init>(com.antplay.nvstream.NvConnection,com.antplay.nvstream.NvConnectionListener,com.antplay.nvstream.av.video.VideoDecoderRenderer,com.antplay.nvstream.av.audio.AudioRenderer) -> <init>
    382:447:void run() -> run
com.antplay.nvstream.StreamConfiguration -> com.antplay.nvstream.StreamConfiguration:
    int -$$Nest$fgetencryptionFlags(com.antplay.nvstream.StreamConfiguration) -> -$$Nest$fgetencryptionFlags
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputapp(com.antplay.nvstream.StreamConfiguration,com.antplay.nvstream.http.NvApp) -> -$$Nest$fputapp
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputattachedGamepadMask(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputattachedGamepadMask
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputaudioConfiguration(com.antplay.nvstream.StreamConfiguration,com.antplay.nvstream.jni.MoonBridge$AudioConfiguration) -> -$$Nest$fputaudioConfiguration
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputbitrate(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputbitrate
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputclientRefreshRateX100(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputclientRefreshRateX100
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputcolorRange(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputcolorRange
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputcolorSpace(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputcolorSpace
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputenableHdr(com.antplay.nvstream.StreamConfiguration,boolean) -> -$$Nest$fputenableHdr
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputencryptionFlags(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputencryptionFlags
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputheight(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputheight
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputhevcBitratePercentageMultiplier(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputhevcBitratePercentageMultiplier
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputlaunchRefreshRate(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputlaunchRefreshRate
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmaxPacketSize(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputmaxPacketSize
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputpersistGamepadsAfterDisconnect(com.antplay.nvstream.StreamConfiguration,boolean) -> -$$Nest$fputpersistGamepadsAfterDisconnect
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputplayLocalAudio(com.antplay.nvstream.StreamConfiguration,boolean) -> -$$Nest$fputplayLocalAudio
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputrefreshRate(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputrefreshRate
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputremote(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputremote
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputsops(com.antplay.nvstream.StreamConfiguration,boolean) -> -$$Nest$fputsops
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputsupportsHevc(com.antplay.nvstream.StreamConfiguration,boolean) -> -$$Nest$fputsupportsHevc
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputwidth(com.antplay.nvstream.StreamConfiguration,int) -> -$$Nest$fputwidth
      # {"id":"com.android.tools.r8.synthesized"}
    void <init>(com.antplay.nvstream.StreamConfiguration-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    158:174:void <init>() -> <init>
    201:201:com.antplay.nvstream.http.NvApp getApp() -> getApp
    237:237:int getAttachedGamepadMask() -> getAttachedGamepadMask
    221:221:com.antplay.nvstream.jni.MoonBridge$AudioConfiguration getAudioConfiguration() -> getAudioConfiguration
    193:193:int getBitrate() -> getBitrate
    245:245:int getClientRefreshRateX100() -> getClientRefreshRateX100
    253:253:int getColorRange() -> getColorRange
    257:257:int getColorSpace() -> getColorSpace
    233:233:boolean getEnableHdr() -> getEnableHdr
    249:249:int getEncryptionFlags() -> getEncryptionFlags
    181:181:int getHeight() -> getHeight
    229:229:int getHevcBitratePercentageMultiplier() -> getHevcBitratePercentageMultiplier
    225:225:boolean getHevcSupported() -> getHevcSupported
    189:189:int getLaunchRefreshRate() -> getLaunchRefreshRate
    197:197:int getMaxPacketSize() -> getMaxPacketSize
    241:241:boolean getPersistGamepadsAfterDisconnect() -> getPersistGamepadsAfterDisconnect
    213:213:boolean getPlayLocalAudio() -> getPlayLocalAudio
    185:185:int getRefreshRate() -> getRefreshRate
    217:217:int getRemote() -> getRemote
    205:205:boolean getSops() -> getSops
    177:177:int getWidth() -> getWidth
com.antplay.nvstream.StreamConfiguration$Builder -> com.antplay.nvstream.StreamConfiguration$Builder:
    34:35:void <init>() -> <init>
    154:154:com.antplay.nvstream.StreamConfiguration build() -> build
    79:80:com.antplay.nvstream.StreamConfiguration$Builder enableLocalAudioPlayback(boolean) -> enableLocalAudioPlayback
    38:39:com.antplay.nvstream.StreamConfiguration$Builder setApp(com.antplay.nvstream.http.NvApp) -> setApp
    99:100:com.antplay.nvstream.StreamConfiguration$Builder setAttachedGamepadMask(int) -> setAttachedGamepadMask
    134:135:com.antplay.nvstream.StreamConfiguration$Builder setAudioConfiguration(com.antplay.nvstream.jni.MoonBridge$AudioConfiguration) -> setAudioConfiguration
    124:130:com.antplay.nvstream.StreamConfiguration$Builder setAudioEncryption(boolean) -> setAudioEncryption
    64:65:com.antplay.nvstream.StreamConfiguration$Builder setBitrate(int) -> setBitrate
    119:120:com.antplay.nvstream.StreamConfiguration$Builder setClientRefreshRateX100(int) -> setClientRefreshRateX100
    144:145:com.antplay.nvstream.StreamConfiguration$Builder setColorRange(int) -> setColorRange
    149:150:com.antplay.nvstream.StreamConfiguration$Builder setColorSpace(int) -> setColorSpace
    94:95:com.antplay.nvstream.StreamConfiguration$Builder setEnableHdr(boolean) -> setEnableHdr
    69:70:com.antplay.nvstream.StreamConfiguration$Builder setEnableSops(boolean) -> setEnableSops
    89:90:com.antplay.nvstream.StreamConfiguration$Builder setHevcBitratePercentageMultiplier(int) -> setHevcBitratePercentageMultiplier
    139:140:com.antplay.nvstream.StreamConfiguration$Builder setHevcSupported(boolean) -> setHevcSupported
    59:60:com.antplay.nvstream.StreamConfiguration$Builder setLaunchRefreshRate(int) -> setLaunchRefreshRate
    84:85:com.antplay.nvstream.StreamConfiguration$Builder setMaxPacketSize(int) -> setMaxPacketSize
    114:115:com.antplay.nvstream.StreamConfiguration$Builder setPersistGamepadsAfterDisconnect(boolean) -> setPersistGamepadsAfterDisconnect
    54:55:com.antplay.nvstream.StreamConfiguration$Builder setRefreshRate(int) -> setRefreshRate
    43:44:com.antplay.nvstream.StreamConfiguration$Builder setRemoteConfiguration(int) -> setRemoteConfiguration
    48:50:com.antplay.nvstream.StreamConfiguration$Builder setResolution(int,int) -> setResolution
com.antplay.nvstream.StreamConfiguration-IA -> com.antplay.nvstream.StreamConfiguration-IA:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.antplay.nvstream.av.video.VideoDecoderRenderer -> com.antplay.nvstream.av.video.VideoDecoderRenderer:
    3:3:void <init>() -> <init>
com.antplay.nvstream.http.ComputerDetails -> com.antplay.nvstream.http.ComputerDetails:
    80:83:void <init>() -> <init>
    91:107:int guessExternalPort() -> guessExternalPort
    153:166:java.lang.String toString() -> toString
    112:149:void update(com.antplay.nvstream.http.ComputerDetails) -> update
com.antplay.nvstream.http.ComputerDetails$AddressTuple -> com.antplay.nvstream.http.ComputerDetails$AddressTuple:
    16:31:void <init>(java.lang.String,int) -> <init>
    40:45:boolean equals(java.lang.Object) -> equals
    35:35:int hashCode() -> hashCode
    49:55:java.lang.String toString() -> toString
com.antplay.nvstream.http.ComputerDetails$State -> com.antplay.nvstream.http.ComputerDetails$State:
    8:9:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.antplay.nvstream.http.ComputerDetails$State valueOf(java.lang.String) -> valueOf
    8:8:com.antplay.nvstream.http.ComputerDetails$State[] values() -> values
com.antplay.nvstream.http.HostHttpResponseException -> com.antplay.nvstream.http.HostHttpResponseException:
    11:14:void <init>(int,java.lang.String) -> <init>
    17:17:int getErrorCode() -> getErrorCode
    26:26:java.lang.String getMessage() -> getMessage
com.antplay.nvstream.http.NvApp -> com.antplay.nvstream.http.NvApp:
    6:11:void <init>() -> <init>
    6:15:void <init>(java.lang.String) -> <init>
    6:22:void <init>(java.lang.String,int,boolean) -> <init>
    51:51:int getAppId() -> getAppId
    47:47:java.lang.String getAppName() -> getAppName
    55:55:boolean isHdrSupported() -> isHdrSupported
    59:59:boolean isInitialized() -> isInitialized
    30:35:void setAppId(java.lang.String) -> setAppId
    25:26:void setAppName(java.lang.String) -> setAppName
    43:44:void setHdrSupported(boolean) -> setHdrSupported
    64:68:java.lang.String toString() -> toString
com.antplay.nvstream.http.NvHTTP -> com.antplay.nvstream.http.NvHTTP:
    javax.net.ssl.X509TrustManager -$$Nest$fgetdefaultTrustManager(com.antplay.nvstream.http.NvHTTP) -> -$$Nest$fgetdefaultTrustManager
      # {"id":"com.android.tools.r8.synthesized"}
    java.security.cert.X509Certificate -$$Nest$fgetserverCert(com.antplay.nvstream.http.NvHTTP) -> -$$Nest$fgetserverCert
      # {"id":"com.android.tools.r8.synthesized"}
    73:742:void <clinit>() -> <clinit>
    201:236:void <init>(com.antplay.nvstream.http.ComputerDetails$AddressTuple,int,java.lang.String,java.security.cert.X509Certificate,com.antplay.nvstream.http.LimelightCryptoProvider) -> <init>
    744:750:java.lang.String bytesToHex(byte[]) -> bytesToHex
    709:709:java.lang.String executePairingChallenge() -> executePairingChallenge
    704:704:java.lang.String executePairingCommand(java.lang.String,boolean) -> executePairingCommand
    612:618:com.antplay.nvstream.http.NvApp getAppByName(java.lang.String) -> getAppByName
    692:699:java.util.LinkedList getAppList() -> getAppList
    626:684:java.util.LinkedList getAppListByReader(java.io.Reader) -> getAppListByReader
    688:688:java.lang.String getAppListRaw() -> getAppListRaw
    718:719:java.io.InputStream getBoxArt(com.antplay.nvstream.http.NvApp) -> getBoxArt
    421:426:okhttp3.HttpUrl getCompleteUrl(okhttp3.HttpUrl,java.lang.String,java.lang.String) -> getCompleteUrl
    360:390:com.antplay.nvstream.http.ComputerDetails getComputerDetails(java.lang.String) -> getComputerDetails
    394:394:com.antplay.nvstream.http.ComputerDetails getComputerDetails(boolean) -> getComputerDetails
    563:567:int getCurrentGame(java.lang.String) -> getCurrentGame
    94:108:javax.net.ssl.X509TrustManager getDefaultTrustManager() -> getDefaultTrustManager
    587:593:int getExternalPort(java.lang.String) -> getExternalPort
    546:546:java.lang.String getGfeVersion(java.lang.String) -> getGfeVersion
    573:579:int getHttpsPort(java.lang.String) -> getHttpsPort
    192:198:okhttp3.HttpUrl getHttpsUrl(boolean) -> getHttpsUrl
    492:492:com.antplay.nvstream.http.PairingManager$PairState getPairState() -> getPairState
    497:498:com.antplay.nvstream.http.PairingManager$PairState getPairState(java.lang.String) -> getPairState
    622:622:com.antplay.nvstream.http.PairingManager getPairingManager() -> getPairingManager
    727:739:int[] getServerAppVersionQuad(java.lang.String) -> getServerAppVersionQuad
    531:535:long getServerCodecModeSupport(java.lang.String) -> getServerCodecModeSupport
    304:347:java.lang.String getServerInfo(boolean) -> getServerInfo
    723:723:int getServerMajorVersion(java.lang.String) -> getServerMajorVersion
    488:488:java.lang.String getServerVersion(java.lang.String) -> getServerVersion
    239:275:java.lang.String getXmlString(java.io.Reader,java.lang.String,boolean) -> getXmlString
    279:279:java.lang.String getXmlString(java.lang.String,java.lang.String,boolean) -> getXmlString
    112:189:void initializeHttpState(com.antplay.nvstream.http.LimelightCryptoProvider) -> initializeHttpState
    758:795:boolean launchApp(com.antplay.nvstream.ConnectionContext,java.lang.String,int,boolean) -> launchApp
    352:356:com.antplay.nvstream.http.ComputerDetails$AddressTuple makeTuple(java.lang.String,int) -> makeTuple
    430:430:okhttp3.ResponseBody openHttpConnection(okhttp3.OkHttpClient,okhttp3.HttpUrl,java.lang.String) -> openHttpConnection
    438:457:okhttp3.ResponseBody openHttpConnection(okhttp3.OkHttpClient,okhttp3.HttpUrl,java.lang.String,java.lang.String) -> openHttpConnection
    462:462:java.lang.String openHttpConnectionToString(okhttp3.OkHttpClient,okhttp3.HttpUrl,java.lang.String) -> openHttpConnectionToString
    467:482:java.lang.String openHttpConnectionToString(okhttp3.OkHttpClient,okhttp3.HttpUrl,java.lang.String,java.lang.String) -> openHttpConnectionToString
    403:416:okhttp3.OkHttpClient performAndroidTlsHack(okhttp3.OkHttpClient) -> performAndroidTlsHack
    800:813:boolean quitApp() -> quitApp
    89:90:void setServerCert(java.security.cert.X509Certificate) -> setServerCert
    551:556:boolean supports4K(java.lang.String) -> supports4K
    714:715:void unpair() -> unpair
    287:298:void verifyResponseStatus(org.xmlpull.v1.XmlPullParser) -> verifyResponseStatus
com.antplay.nvstream.http.NvHTTP$1 -> com.antplay.nvstream.http.NvHTTP$1:
    112:112:void <init>(com.antplay.nvstream.http.NvHTTP,com.antplay.nvstream.http.LimelightCryptoProvider) -> <init>
    114:114:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    116:116:java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    118:118:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    120:120:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    122:122:java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
    124:124:java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
com.antplay.nvstream.http.NvHTTP$2 -> com.antplay.nvstream.http.NvHTTP$2:
    128:128:void <init>(com.antplay.nvstream.http.NvHTTP) -> <init>
    133:133:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    140:154:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    130:130:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.antplay.nvstream.http.NvHTTP$3 -> com.antplay.nvstream.http.NvHTTP$3:
    157:157:void <init>(com.antplay.nvstream.http.NvHTTP) -> <init>
    160:170:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.antplay.nvstream.http.PairingManager -> com.antplay.nvstream.http.PairingManager:
    43:43:void <clinit>() -> <clinit>
    36:41:void <init>(com.antplay.nvstream.http.NvHTTP,com.antplay.nvstream.http.LimelightCryptoProvider) -> <init>
    45:51:java.lang.String bytesToHex(byte[]) -> bytesToHex
    159:162:byte[] concatBytes(byte[],byte[]) -> concatBytes
    143:145:byte[] decryptAes(byte[],byte[]) -> decryptAes
    149:151:byte[] encryptAes(byte[],byte[]) -> encryptAes
    71:84:java.security.cert.X509Certificate extractPlainCert(java.lang.String) -> extractPlainCert
    155:155:byte[] generateAesKey(com.antplay.nvstream.http.PairingManager$PairingHashAlgorithm,byte[]) -> generateAesKey
    166:169:java.lang.String generatePinString() -> generatePinString
    90:92:byte[] generateRandomBytes(int) -> generateRandomBytes
    173:173:java.security.cert.X509Certificate getPairedCert() -> getPairedCert
    55:65:byte[] hexToBytes(java.lang.String) -> hexToBytes
    179:284:com.antplay.nvstream.http.PairingManager$PairState pair(java.lang.String,java.lang.String) -> pair
    129:139:byte[] performBlockCipher(org.bouncycastle.crypto.BlockCipher,byte[]) -> performBlockCipher
    96:99:byte[] saltPin(byte[],java.lang.String) -> saltPin
    116:124:byte[] signData(byte[],java.security.PrivateKey) -> signData
    104:110:boolean verifySignature(byte[],byte[],java.security.cert.Certificate) -> verifySignature
com.antplay.nvstream.http.PairingManager$PairState -> com.antplay.nvstream.http.PairingManager$PairState:
    28:33:void <clinit>() -> <clinit>
    28:28:void <init>(java.lang.String,int) -> <init>
    28:28:com.antplay.nvstream.http.PairingManager$PairState valueOf(java.lang.String) -> valueOf
    28:28:com.antplay.nvstream.http.PairingManager$PairState[] values() -> values
com.antplay.nvstream.http.PairingManager$Sha1PairingHash -> com.antplay.nvstream.http.PairingManager$Sha1PairingHash:
    void <init>(com.antplay.nvstream.http.PairingManager$Sha1PairingHash-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    292:292:void <init>() -> <init>
    294:294:int getHashLength() -> getHashLength
    299:304:byte[] hashData(byte[]) -> hashData
com.antplay.nvstream.http.PairingManager$Sha1PairingHash-IA -> com.antplay.nvstream.http.PairingManager$Sha1PairingHash-IA:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.antplay.nvstream.http.PairingManager$Sha256PairingHash -> com.antplay.nvstream.http.PairingManager$Sha256PairingHash:
    void <init>(com.antplay.nvstream.http.PairingManager$Sha256PairingHash-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    309:309:void <init>() -> <init>
    311:311:int getHashLength() -> getHashLength
    316:321:byte[] hashData(byte[]) -> hashData
com.antplay.nvstream.http.PairingManager$Sha256PairingHash-IA -> com.antplay.nvstream.http.PairingManager$Sha256PairingHash-IA:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.antplay.nvstream.jni.MoonBridge -> com.antplay.nvstream.jni.MoonBridge:
    10:85:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    88:88:int CAPABILITY_SLICES_PER_FRAME(byte) -> CAPABILITY_SLICES_PER_FRAME
    203:206:void bridgeArCleanup() -> bridgeArCleanup
    182:186:int bridgeArInit(int,int,int) -> bridgeArInit
    209:212:void bridgeArPlaySample(short[]) -> bridgeArPlaySample
    191:194:void bridgeArStart() -> bridgeArStart
    197:200:void bridgeArStop() -> bridgeArStop
    233:236:void bridgeClConnectionStarted() -> bridgeClConnectionStarted
    251:254:void bridgeClConnectionStatusUpdate(int) -> bridgeClConnectionStatusUpdate
    239:242:void bridgeClConnectionTerminated(int) -> bridgeClConnectionTerminated
    245:248:void bridgeClRumble(short,short,short) -> bridgeClRumble
    257:260:void bridgeClSetHdrMode(boolean,byte[]) -> bridgeClSetHdrMode
    221:224:void bridgeClStageComplete(int) -> bridgeClStageComplete
    227:230:void bridgeClStageFailed(int,int) -> bridgeClStageFailed
    215:218:void bridgeClStageStarting(int) -> bridgeClStageStarting
    164:167:void bridgeDrCleanup() -> bridgeDrCleanup
    143:147:int bridgeDrSetup(int,int,int,int) -> bridgeDrSetup
    152:155:void bridgeDrStart() -> bridgeDrStart
    158:161:void bridgeDrStop() -> bridgeDrStop
    172:177:int bridgeDrSubmitDecodeUnit(byte[],int,int,int,int,long,long) -> bridgeDrSubmitDecodeUnit
    269:272:void cleanupBridge() -> cleanupBridge
    263:266:void setupBridge(com.antplay.nvstream.av.video.VideoDecoderRenderer,com.antplay.nvstream.av.audio.AudioRenderer,com.antplay.nvstream.NvConnectionListener) -> setupBridge
com.antplay.nvstream.jni.MoonBridge$AudioConfiguration -> com.antplay.nvstream.jni.MoonBridge$AudioConfiguration:
    void <init>(int,com.antplay.nvstream.jni.MoonBridge$AudioConfiguration-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    95:98:void <init>(int,int) -> <init>
    103:113:void <init>(int) -> <init>
    122:127:boolean equals(java.lang.Object) -> equals
    117:117:int getSurroundAudioInfo() -> getSurroundAudioInfo
    132:132:int hashCode() -> hashCode
    138:138:int toInt() -> toInt
com.antplay.nvstream.jni.MoonBridge$AudioConfiguration-IA -> com.antplay.nvstream.jni.MoonBridge$AudioConfiguration-IA:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.antplay.nvstream.mdns.MdnsComputer -> com.antplay.nvstream.mdns.MdnsComputer:
    12:17:void <init>(java.lang.String,java.net.InetAddress,java.net.Inet6Address,int) -> <init>
    42:64:boolean equals(java.lang.Object) -> equals
    28:28:java.net.Inet6Address getIpv6Address() -> getIpv6Address
    24:24:java.net.InetAddress getLocalAddress() -> getLocalAddress
    32:32:int getPort() -> getPort
    37:37:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
com.antplay.nvstream.mdns.MdnsDiscoveryAgent -> com.antplay.nvstream.mdns.MdnsDiscoveryAgent:
    java.util.HashSet -$$Nest$fgetpendingResolution(com.antplay.nvstream.mdns.MdnsDiscoveryAgent) -> -$$Nest$fgetpendingResolution
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mhandleResolvedServiceInfo(com.antplay.nvstream.mdns.MdnsDiscoveryAgent,javax.jmdns.ServiceInfo) -> -$$Nest$mhandleResolvedServiceInfo
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.HashSet -$$Nest$sfgetlisteners() -> -$$Nest$sfgetlisteners
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smdereferenceResolver() -> -$$Nest$smdereferenceResolver
      # {"id":"com.android.tools.r8.synthesized"}
    javax.jmdns.JmmDNS -$$Nest$smreferenceResolver() -> -$$Nest$smreferenceResolver
      # {"id":"com.android.tools.r8.synthesized"}
    32:119:void <clinit>() -> <clinit>
    27:146:void <init>(com.antplay.nvstream.mdns.MdnsDiscoveryListener) -> <init>
    135:142:void dereferenceResolver() -> dereferenceResolver
    190:247:java.net.Inet6Address getBestIpv6Address(java.net.Inet6Address[]) -> getBestIpv6Address
    177:184:java.net.Inet6Address getLinkLocalAddress(java.net.Inet6Address[]) -> getLinkLocalAddress
    163:173:java.net.Inet6Address getLocalAddress(java.net.Inet6Address[]) -> getLocalAddress
    149:160:void handleResolvedServiceInfo(javax.jmdns.ServiceInfo) -> handleResolvedServiceInfo
    251:282:void handleServiceInfo(javax.jmdns.ServiceInfo) -> handleServiceInfo
    122:131:javax.jmdns.JmmDNS referenceResolver() -> referenceResolver
    360:373:void serviceAdded(javax.jmdns.ServiceEvent) -> serviceAdded
    377:378:void serviceRemoved(javax.jmdns.ServiceEvent) -> serviceRemoved
    383:383:void serviceResolved(javax.jmdns.ServiceEvent) -> serviceResolved
    286:337:void startDiscovery(int) -> startDiscovery
    341:350:void stopDiscovery() -> stopDiscovery
com.antplay.nvstream.mdns.MdnsDiscoveryAgent$1 -> com.antplay.nvstream.mdns.MdnsDiscoveryAgent$1:
    34:34:void <init>() -> <init>
    42:49:void serviceAdded(javax.jmdns.ServiceEvent) -> serviceAdded
    58:65:void serviceRemoved(javax.jmdns.ServiceEvent) -> serviceRemoved
    74:81:void serviceResolved(javax.jmdns.ServiceEvent) -> serviceResolved
com.antplay.nvstream.mdns.MdnsDiscoveryAgent$2 -> com.antplay.nvstream.mdns.MdnsDiscoveryAgent$2:
    113:113:void <init>() -> <init>
    116:116:javax.jmdns.NetworkTopologyDiscovery newNetworkTopologyDiscovery() -> newNetworkTopologyDiscovery
com.antplay.nvstream.mdns.MdnsDiscoveryAgent$3 -> com.antplay.nvstream.mdns.MdnsDiscoveryAgent$3:
    293:293:void <init>(com.antplay.nvstream.mdns.MdnsDiscoveryAgent,int) -> <init>
    298:333:void run() -> run
com.antplay.nvstream.mdns.MdnsDiscoveryAgent$MyNetworkTopologyDiscovery -> com.antplay.nvstream.mdns.MdnsDiscoveryAgent$MyNetworkTopologyDiscovery:
    84:84:void <init>() -> <init>
    90:106:boolean useInetAddress(java.net.NetworkInterface,java.net.InetAddress) -> useInetAddress
com.antplay.nvstream.wol.WakeOnLanSender -> com.antplay.nvstream.wol.WakeOnLanSender:
    14:20:void <clinit>() -> <clinit>
    132:147:byte[] createWolPayload(com.antplay.nvstream.http.ComputerDetails) -> createWolPayload
    114:128:byte[] macStringToBytes(java.lang.String) -> macStringToBytes
    25:59:void sendPacketsForAddress(java.net.InetAddress,int,java.net.DatagramSocket,byte[]) -> sendPacketsForAddress
    62:111:void sendWolPacket(com.antplay.nvstream.http.ComputerDetails) -> sendWolPacket
com.antplay.preferences.AddComputerManually -> com.antplay.preferences.AddComputerManually:
    java.util.concurrent.LinkedBlockingQueue -$$Nest$fgetcomputersToAdd(com.antplay.preferences.AddComputerManually) -> -$$Nest$fgetcomputersToAdd
      # {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView -$$Nest$fgethostText(com.antplay.preferences.AddComputerManually) -> -$$Nest$fgethostText
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmanagerBinder(com.antplay.preferences.AddComputerManually,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> -$$Nest$fputmanagerBinder
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mdoAddPc(com.antplay.preferences.AddComputerManually,java.lang.String) -> -$$Nest$mdoAddPc
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mhandleDoneEvent(com.antplay.preferences.AddComputerManually) -> -$$Nest$mhandleDoneEvent
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mjoinAddThread(com.antplay.preferences.AddComputerManually) -> -$$Nest$mjoinAddThread
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mstartAddThread(com.antplay.preferences.AddComputerManually) -> -$$Nest$mstartAddThread
      # {"id":"com.android.tools.r8.synthesized"}
    52:335:void <init>() -> <init>
    137:219:void doAddPc(java.lang.String) -> doAddPc
    369:400:void getVMFromServerManually() -> getVMFromServerManually
    324:332:boolean handleDoneEvent() -> handleDoneEvent
    71:108:boolean isWrongSubnetSiteLocalAddress(java.lang.String) -> isWrongSubnetSiteLocalAddress
    240:256:void joinAddThread() -> joinAddThread
    278:320:void onCreate(android.os.Bundle) -> onCreate
    268:274:void onDestroy() -> onDestroy
    260:264:void onStop() -> onStop
    116:133:java.net.URI parseRawUserInputToUri(java.lang.String) -> parseRawUserInputToUri
    222:237:void startAddThread() -> startAddThread
com.antplay.preferences.AddComputerManually$1 -> com.antplay.preferences.AddComputerManually$1:
    57:57:void <init>(com.antplay.preferences.AddComputerManually) -> <init>
    59:61:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    64:66:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.antplay.preferences.AddComputerManually$2 -> com.antplay.preferences.AddComputerManually$2:
    206:206:void <init>(com.antplay.preferences.AddComputerManually) -> <init>
    209:215:void run() -> run
com.antplay.preferences.AddComputerManually$3 -> com.antplay.preferences.AddComputerManually$3:
    222:222:void <init>(com.antplay.preferences.AddComputerManually) -> <init>
    225:233:void run() -> run
com.antplay.preferences.AddComputerManually$4 -> com.antplay.preferences.AddComputerManually$4:
    288:288:void <init>(com.antplay.preferences.AddComputerManually) -> <init>
    291:303:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.antplay.preferences.AddComputerManually$5 -> com.antplay.preferences.AddComputerManually$5:
    307:307:void <init>(com.antplay.preferences.AddComputerManually) -> <init>
    310:311:void onClick(android.view.View) -> onClick
com.antplay.preferences.AddComputerManually$7 -> com.antplay.preferences.AddComputerManually$7:
    372:372:void <init>(com.antplay.preferences.AddComputerManually) -> <init>
    376:393:void onResponse(java.lang.String,java.lang.String) -> onResponse
com.antplay.preferences.AddComputerManually$8 -> com.antplay.preferences.AddComputerManually$8:
    394:394:void <init>(com.antplay.preferences.AddComputerManually) -> <init>
    397:398:void onError(java.lang.String,java.lang.String,long) -> onError
com.antplay.preferences.ConfirmDeleteOscPreference -> com.antplay.preferences.ConfirmDeleteOscPreference:
    18:19:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    26:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:32:void <init>(android.content.Context) -> <init>
    35:39:void onClick(android.content.DialogInterface,int) -> onClick
com.antplay.preferences.GlPreferences -> com.antplay.preferences.GlPreferences:
    17:19:void <init>(android.content.SharedPreferences) -> <init>
    22:28:com.antplay.preferences.GlPreferences readPreferences(android.content.Context) -> readPreferences
    32:35:boolean writePreferences() -> writePreferences
com.antplay.preferences.LanguagePreference -> com.antplay.preferences.LanguagePreference:
    16:17:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    21:22:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    25:26:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    29:30:void <init>(android.content.Context) -> <init>
    34:50:void onClick() -> onClick
com.antplay.preferences.PreferenceConfiguration -> com.antplay.preferences.PreferenceConfiguration:
    12:12:void <init>() -> <init>
    360:362:void completeLanguagePreferenceMigration(android.content.Context) -> completeLanguagePreferenceMigration
    181:201:java.lang.String convertFromLegacyResolutionString(java.lang.String) -> convertFromLegacyResolutionString
    232:261:int getDefaultBitrate(java.lang.String,java.lang.String) -> getDefaultBitrate
    286:289:int getDefaultBitrate(android.content.Context) -> getDefaultBitrate
    266:282:boolean getDefaultSmallMode(android.content.Context) -> getDefaultSmallMode
    312:338:int getFramePacingValue(android.content.Context) -> getFramePacingValue
    210:210:int getHeightFromResolutionString(java.lang.String) -> getHeightFromResolutionString
    214:227:java.lang.String getResolutionString(int,int) -> getResolutionString
    293:307:int getVideoFormatValue(android.content.Context) -> getVideoFormatValue
    206:206:int getWidthFromResolutionString(java.lang.String) -> getWidthFromResolutionString
    133:152:boolean isNativeResolution(int,int) -> isNativeResolution
    367:368:boolean isShieldAtvFirmwareWithBrokenHdr() -> isShieldAtvFirmwareWithBrokenHdr
    158:162:boolean isSquarishScreen(int,int) -> isSquarishScreen
    168:177:boolean isSquarishScreen(android.view.Display) -> isSquarishScreen
    372:514:com.antplay.preferences.PreferenceConfiguration readPreferences(android.content.Context) -> readPreferences
    344:356:void resetStreamingSettings(android.content.Context) -> resetStreamingSettings
com.antplay.preferences.SeekBarPreference -> com.antplay.preferences.SeekBarPreference:
    int -$$Nest$fgetdivisor(com.antplay.preferences.SeekBarPreference) -> -$$Nest$fgetdivisor
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetminValue(com.antplay.preferences.SeekBarPreference) -> -$$Nest$fgetminValue
      # {"id":"com.android.tools.r8.synthesized"}
    android.widget.SeekBar -$$Nest$fgetseekBar(com.antplay.preferences.SeekBarPreference) -> -$$Nest$fgetseekBar
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetstepSize(com.antplay.preferences.SeekBarPreference) -> -$$Nest$fgetstepSize
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String -$$Nest$fgetsuffix(com.antplay.preferences.SeekBarPreference) -> -$$Nest$fgetsuffix
      # {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView -$$Nest$fgetvalueText(com.antplay.preferences.SeekBarPreference) -> -$$Nest$fgetvalueText
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputcurrentValue(com.antplay.preferences.SeekBarPreference,int) -> -$$Nest$fputcurrentValue
      # {"id":"com.android.tools.r8.synthesized"}
    39:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    19:19:boolean access$000(com.antplay.preferences.SeekBarPreference) -> access$000
    19:19:boolean access$100(com.antplay.preferences.SeekBarPreference,int) -> access$100
    19:19:boolean access$200(com.antplay.preferences.SeekBarPreference,java.lang.Object) -> access$200
    144:150:void onBindDialogView(android.view.View) -> onBindDialogView
    73:139:android.view.View onCreateDialogView() -> onCreateDialogView
    155:162:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    176:191:void showDialog(android.os.Bundle) -> showDialog
com.antplay.preferences.SeekBarPreference$1 -> com.antplay.preferences.SeekBarPreference$1:
    95:95:void <init>(com.antplay.preferences.SeekBarPreference) -> <init>
    98:118:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    121:121:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    124:124:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.antplay.preferences.SeekBarPreference$2 -> com.antplay.preferences.SeekBarPreference$2:
    179:179:void <init>(com.antplay.preferences.SeekBarPreference) -> <init>
    182:189:void onClick(android.view.View) -> onClick
com.antplay.preferences.SmallIconCheckboxPreference -> com.antplay.preferences.SmallIconCheckboxPreference:
    10:11:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    14:15:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    19:19:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
com.antplay.preferences.StreamSettings -> com.antplay.preferences.StreamSettings:
    40:40:void <init>() -> <init>
    72:86:void onAttachedToWindow() -> onAttachedToWindow
    109:122:void onBackPressed() -> onBackPressed
    90:104:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    59:68:void onCreate(android.os.Bundle) -> onCreate
    48:55:void reloadSettings() -> reloadSettings
com.antplay.preferences.StreamSettings$$ExternalSyntheticApiModelOutline0 -> com.antplay.preferences.StreamSettings$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.DisplayCutout com.antplay.preferences.StreamSettings$$InternalSyntheticApiModelOutline$1$e12c3009472ada57d4b3e387f04fd569f2b1bfb867b904af8e1477337f83a5dd$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.preferences.StreamSettings$SettingsFragment -> com.antplay.preferences.StreamSettings$SettingsFragment:
    int -$$Nest$fgetnativeResolutionStartIndex(com.antplay.preferences.StreamSettings$SettingsFragment) -> -$$Nest$fgetnativeResolutionStartIndex
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mresetBitrateToDefault(com.antplay.preferences.StreamSettings$SettingsFragment,android.content.SharedPreferences,java.lang.String,java.lang.String) -> -$$Nest$mresetBitrateToDefault
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$msetValue(com.antplay.preferences.StreamSettings$SettingsFragment,java.lang.String,java.lang.String) -> -$$Nest$msetValue
      # {"id":"com.android.tools.r8.synthesized"}
    124:125:void <init>() -> <init>
    184:188:void addNativeResolutionEntries(int,int,boolean) -> addNativeResolutionEntries
    134:181:void addNativeResolutionEntry(int,int,boolean,boolean) -> addNativeResolutionEntry
    249:642:void onCreate(android.os.Bundle) -> onCreate
    242:244:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    191:224:void removeValue(java.lang.String,java.lang.String,java.lang.Runnable) -> removeValue
    227:238:void resetBitrateToDefault(android.content.SharedPreferences,java.lang.String,java.lang.String) -> resetBitrateToDefault
    128:131:void setValue(java.lang.String,java.lang.String) -> setValue
com.antplay.preferences.StreamSettings$SettingsFragment$$ExternalSyntheticApiModelOutline0 -> com.antplay.preferences.StreamSettings$SettingsFragment$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.DisplayCutout com.antplay.preferences.StreamSettings$SettingsFragment$$InternalSyntheticApiModelOutline$1$63f3be01be2d12cf8c0c2d04b0828083e6e774fa98845921dd5b90c307758b43$0.m(android.view.Display) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.preferences.StreamSettings$SettingsFragment$1 -> com.antplay.preferences.StreamSettings$SettingsFragment$1:
    427:427:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    430:433:void run() -> run
com.antplay.preferences.StreamSettings$SettingsFragment$2 -> com.antplay.preferences.StreamSettings$SettingsFragment$2:
    438:438:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    441:444:void run() -> run
com.antplay.preferences.StreamSettings$SettingsFragment$3 -> com.antplay.preferences.StreamSettings$SettingsFragment$3:
    449:449:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    452:455:void run() -> run
com.antplay.preferences.StreamSettings$SettingsFragment$4 -> com.antplay.preferences.StreamSettings$SettingsFragment$4:
    489:489:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    492:495:void run() -> run
com.antplay.preferences.StreamSettings$SettingsFragment$5 -> com.antplay.preferences.StreamSettings$SettingsFragment$5:
    500:500:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    503:506:void run() -> run
com.antplay.preferences.StreamSettings$SettingsFragment$7 -> com.antplay.preferences.StreamSettings$SettingsFragment$7:
    533:533:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    538:551:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.antplay.preferences.StreamSettings$SettingsFragment$7$1 -> com.antplay.preferences.StreamSettings$SettingsFragment$7$1:
    539:539:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment$7) -> <init>
    543:547:void run() -> run
com.antplay.preferences.StreamSettings$SettingsFragment$8 -> com.antplay.preferences.StreamSettings$SettingsFragment$8:
    597:597:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    600:626:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.antplay.preferences.StreamSettings$SettingsFragment$9 -> com.antplay.preferences.StreamSettings$SettingsFragment$9:
    629:629:void <init>(com.antplay.preferences.StreamSettings$SettingsFragment) -> <init>
    632:639:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.antplay.ui.AdapterFragment -> com.antplay.ui.AdapterFragment:
    14:14:void <init>() -> <init>
    32:34:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    19:22:void onAttach(android.app.Activity) -> onAttach
    27:27:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.antplay.ui.LoginActivity -> com.antplay.ui.LoginActivity:
    java.lang.String -$$Nest$fgetTAG(com.antplay.ui.LoginActivity) -> -$$Nest$fgetTAG
      # {"id":"com.android.tools.r8.synthesized"}
    android.widget.ProgressBar -$$Nest$fgetloadingPB(com.antplay.ui.LoginActivity) -> -$$Nest$fgetloadingPB
      # {"id":"com.android.tools.r8.synthesized"}
    28:33:void <init>() -> <init>
    156:205:void callManualLoginAPI(java.lang.String,java.lang.String) -> callManualLoginAPI
    64:90:void onClick(android.view.View) -> onClick
    39:53:void onCreate(android.os.Bundle) -> onCreate
    56:59:void setOnClickListener() -> setOnClickListener
com.antplay.ui.LoginActivity$1 -> com.antplay.ui.LoginActivity$1:
    160:160:void <init>(com.antplay.ui.LoginActivity) -> <init>
    164:195:void onResponse(java.lang.String,int,java.lang.String) -> onResponse
com.antplay.ui.LoginActivity$2 -> com.antplay.ui.LoginActivity$2:
    196:196:void <init>(com.antplay.ui.LoginActivity) -> <init>
    199:202:void onError(java.lang.String,java.lang.String,long) -> onError
com.antplay.ui.StreamView -> com.antplay.ui.StreamView:
    26:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:79:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    41:60:void onMeasure(int,int) -> onMeasure
    14:15:void setDesiredAspectRatio(double) -> setDesiredAspectRatio
    18:19:void setInputCallbacks(com.antplay.ui.StreamView$InputCallbacks) -> setInputCallbacks
com.antplay.utils.CacheHelper -> com.antplay.utils.CacheHelper:
    42:42:boolean cacheFileExists(java.io.File,java.lang.String[]) -> cacheFileExists
    38:38:boolean deleteCacheFile(java.io.File,java.lang.String[]) -> deleteCacheFile
    46:46:java.io.InputStream openCacheFileForInput(java.io.File,java.lang.String[]) -> openCacheFileForInput
    50:50:java.io.OutputStream openCacheFileForOutput(java.io.File,java.lang.String[]) -> openCacheFileForOutput
    17:30:java.io.File openPath(boolean,java.io.File,java.lang.String[]) -> openPath
    67:80:java.lang.String readInputStreamToString(java.io.InputStream) -> readInputStreamToString
    54:64:void writeInputStreamToOutputStream(java.io.InputStream,java.io.OutputStream,long) -> writeInputStreamToOutputStream
    84:85:void writeStringToOutputStream(java.io.OutputStream,java.lang.String) -> writeStringToOutputStream
com.antplay.utils.Const -> com.antplay.utils.Const:
    6:11:void <clinit>() -> <clinit>
com.antplay.utils.Dialog -> com.antplay.utils.Dialog:
    android.app.Activity -$$Nest$fgetactivity(com.antplay.utils.Dialog) -> -$$Nest$fgetactivity
      # {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog -$$Nest$fgetalert(com.antplay.utils.Dialog) -> -$$Nest$fgetalert
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable -$$Nest$fgetrunOnDismiss(com.antplay.utils.Dialog) -> -$$Nest$fgetrunOnDismiss
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.ArrayList -$$Nest$sfgetrundownDialogs() -> -$$Nest$sfgetrundownDialogs
      # {"id":"com.android.tools.r8.synthesized"}
    20:20:void <clinit>() -> <clinit>
    23:28:void <init>(android.app.Activity,java.lang.String,java.lang.String,java.lang.Runnable) -> <init>
    32:41:void closeDialogs() -> closeDialogs
    45:53:void displayDialog(android.app.Activity,java.lang.String,java.lang.String,boolean) -> displayDialog
    57:58:void displayDialog(android.app.Activity,java.lang.String,java.lang.String,java.lang.Runnable) -> displayDialog
    63:111:void run() -> run
com.antplay.utils.Dialog$1 -> com.antplay.utils.Dialog$1:
    45:45:void <init>(boolean,android.app.Activity) -> <init>
    48:51:void run() -> run
com.antplay.utils.Dialog$2 -> com.antplay.utils.Dialog$2:
    73:73:void <init>(com.antplay.utils.Dialog) -> <init>
    75:81:void onClick(android.content.DialogInterface,int) -> onClick
com.antplay.utils.Dialog$3 -> com.antplay.utils.Dialog$3:
    83:83:void <init>(com.antplay.utils.Dialog) -> <init>
    85:93:void onClick(android.content.DialogInterface,int) -> onClick
com.antplay.utils.Dialog$4 -> com.antplay.utils.Dialog$4:
    95:95:void <init>(com.antplay.utils.Dialog) -> <init>
    100:104:void onShow(android.content.DialogInterface) -> onShow
com.antplay.utils.HelpLauncher -> com.antplay.utils.HelpLauncher:
    49:50:void launchGameStreamEolFaq(android.content.Context) -> launchGameStreamEolFaq
    41:42:void launchSetupGuide(android.content.Context) -> launchSetupGuide
    45:46:void launchTroubleshooting(android.content.Context) -> launchTroubleshooting
    14:38:void launchUrl(android.content.Context,java.lang.String) -> launchUrl
com.antplay.utils.NetHelper -> com.antplay.utils.NetHelper:
    12:30:boolean isActiveNetworkVpn(android.content.Context) -> isActiveNetworkVpn
com.antplay.utils.RestClient -> com.antplay.utils.RestClient:
    java.lang.String -$$Nest$mconvertInputStreamToString(com.antplay.utils.RestClient,java.io.InputStream) -> -$$Nest$mconvertInputStreamToString
      # {"id":"com.android.tools.r8.synthesized"}
    38:55:void <init>(android.content.Context) -> <init>
    1007:1017:java.lang.String convertInputStreamToString(java.io.InputStream) -> convertInputStreamToString
    1024:1037:java.lang.String getPostDataString(java.util.HashMap) -> getPostDataString
    822:909:com.antplay.utils.RestClient getRequestWithHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.antplay.utils.RestClient$ResponseListener,com.antplay.utils.RestClient$ErrorListener) -> getRequestWithHeader
    58:62:boolean isOnline(android.content.Context) -> isOnline
    490:597:com.antplay.utils.RestClient postRequestWithHeader(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,com.antplay.utils.RestClient$ResponseListener,com.antplay.utils.RestClient$ErrorListener) -> postRequestWithHeader
    159:268:com.antplay.utils.RestClient postRequestWithoutMethod(java.lang.String,java.lang.String,java.util.HashMap,com.antplay.utils.RestClient$ResponseListenerUpdated,com.antplay.utils.RestClient$ErrorListener) -> postRequestWithoutMethod
com.antplay.utils.RestClient$2 -> com.antplay.utils.RestClient$2:
    162:162:void <init>(com.antplay.utils.RestClient,android.os.Looper,java.lang.String,java.util.HashMap,com.antplay.utils.RestClient$ResponseListenerUpdated,java.lang.String,com.antplay.utils.RestClient$ErrorListener) -> <init>
    165:261:void handleMessage(android.os.Message) -> handleMessage
com.antplay.utils.RestClient$2$1 -> com.antplay.utils.RestClient$2$1:
    246:246:void <init>(com.antplay.utils.RestClient$2) -> <init>
    249:258:void run() -> run
com.antplay.utils.RestClient$5 -> com.antplay.utils.RestClient$5:
    493:493:void <init>(com.antplay.utils.RestClient,android.os.Looper,java.lang.String,java.lang.String,java.util.HashMap,com.antplay.utils.RestClient$ResponseListener,java.lang.String,com.antplay.utils.RestClient$ErrorListener) -> <init>
    496:590:void handleMessage(android.os.Message) -> handleMessage
com.antplay.utils.RestClient$5$1 -> com.antplay.utils.RestClient$5$1:
    575:575:void <init>(com.antplay.utils.RestClient$5) -> <init>
    578:587:void run() -> run
com.antplay.utils.RestClient$9 -> com.antplay.utils.RestClient$9:
    825:825:void <init>(com.antplay.utils.RestClient,android.os.Looper,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.antplay.utils.RestClient$ResponseListener,com.antplay.utils.RestClient$ErrorListener) -> <init>
    828:902:void handleMessage(android.os.Message) -> handleMessage
com.antplay.utils.RestClient$9$1 -> com.antplay.utils.RestClient$9$1:
    887:887:void <init>(com.antplay.utils.RestClient$9) -> <init>
    890:899:void run() -> run
com.antplay.utils.ServerHelper -> com.antplay.utils.ServerHelper:
    45:52:android.content.Intent createAppShortcutIntent(android.app.Activity,com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp) -> createAppShortcutIntent
    37:41:android.content.Intent createPcShortcutIntent(android.app.Activity,com.antplay.nvstream.http.ComputerDetails) -> createPcShortcutIntent
    57:74:android.content.Intent createStartIntent(android.app.Activity,com.antplay.nvstream.http.NvApp,com.antplay.nvstream.http.ComputerDetails,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> createStartIntent
    87:116:void doNetworkTest(android.app.Activity) -> doNetworkTest
    123:168:void doQuit(android.app.Activity,com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp,com.antplay.computers.ComputerManagerService$ComputerManagerBinder,java.lang.Runnable) -> doQuit
    79:84:void doStart(android.app.Activity,com.antplay.nvstream.http.NvApp,com.antplay.nvstream.http.ComputerDetails,com.antplay.computers.ComputerManagerService$ComputerManagerBinder) -> doStart
    30:33:com.antplay.nvstream.http.ComputerDetails$AddressTuple getCurrentAddressFromComputer(com.antplay.nvstream.http.ComputerDetails) -> getCurrentAddressFromComputer
com.antplay.utils.ServerHelper$1 -> com.antplay.utils.ServerHelper$1:
    87:87:void <init>(android.app.Activity) -> <init>
    90:114:void run() -> run
com.antplay.utils.ServerHelper$2 -> com.antplay.utils.ServerHelper$2:
    124:124:void <init>(com.antplay.nvstream.http.ComputerDetails,com.antplay.computers.ComputerManagerService$ComputerManagerBinder,android.app.Activity,com.antplay.nvstream.http.NvApp,java.lang.Runnable) -> <init>
    130:166:void run() -> run
com.antplay.utils.ServerHelper$2$1 -> com.antplay.utils.ServerHelper$2$1:
    160:160:void <init>(com.antplay.utils.ServerHelper$2,java.lang.String) -> <init>
    163:164:void run() -> run
com.antplay.utils.SharedPreferenceUtils -> com.antplay.utils.SharedPreferenceUtils:
    8:8:void <clinit>() -> <clinit>
    66:67:java.lang.String getString(android.content.Context,java.lang.String) -> getString
    11:15:void saveBoolean(android.content.Context,java.lang.String,boolean) -> saveBoolean
    59:63:void saveString(android.content.Context,java.lang.String,java.lang.String) -> saveString
com.antplay.utils.ShortcutHelper -> com.antplay.utils.ShortcutHelper:
    25:34:void <init>(android.app.Activity) -> <init>
    96:138:void createAppViewShortcut(com.antplay.nvstream.http.ComputerDetails,boolean,boolean) -> createAppViewShortcut
    141:142:void createAppViewShortcutForOnlineHost(com.antplay.nvstream.http.ComputerDetails) -> createAppViewShortcutForOnlineHost
    150:167:boolean createPinnedGameShortcut(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp,android.graphics.Bitmap) -> createPinnedGameShortcut
    192:199:void disableAppShortcut(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp,java.lang.CharSequence) -> disableAppShortcut
    172:189:void disableComputerShortcut(com.antplay.nvstream.http.ComputerDetails,java.lang.CharSequence) -> disableComputerShortcut
    202:208:void enableAppShortcut(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp) -> enableAppShortcut
    52:55:java.util.List getAllShortcuts() -> getAllShortcuts
    60:68:android.content.pm.ShortcutInfo getInfoForId(java.lang.String) -> getInfoForId
    145:145:java.lang.String getShortcutIdForGame(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp) -> getShortcutIdForGame
    73:79:boolean isExistingDynamicShortcut(java.lang.String) -> isExistingDynamicShortcut
    38:48:void reapShortcutsForDynamicAdd() -> reapShortcutsForDynamicAdd
    83:88:void reportComputerShortcutUsed(com.antplay.nvstream.http.ComputerDetails) -> reportComputerShortcutUsed
    91:93:void reportGameLaunched(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp) -> reportGameLaunched
com.antplay.utils.ShortcutHelper$$ExternalSyntheticApiModelOutline0 -> com.antplay.utils.ShortcutHelper$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.utils.ShortcutHelper$$InternalSyntheticApiModelOutline$2$a7878008dd18e1c61d96a624184330446afffd4b91f91ed7db16af2b6bfc240e$0.m(android.content.pm.ShortcutManager) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.ShortcutHelper$$ExternalSyntheticApiModelOutline1 -> com.antplay.utils.ShortcutHelper$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.drawable.Icon com.antplay.utils.ShortcutHelper$$InternalSyntheticApiModelOutline$2$a7878008dd18e1c61d96a624184330446afffd4b91f91ed7db16af2b6bfc240e$1.m(android.graphics.Bitmap) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.ShortcutHelper$$ExternalSyntheticApiModelOutline2 -> com.antplay.utils.ShortcutHelper$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.antplay.utils.ShortcutHelper$$InternalSyntheticApiModelOutline$2$a7878008dd18e1c61d96a624184330446afffd4b91f91ed7db16af2b6bfc240e$2.m(android.content.pm.ShortcutManager,android.content.pm.ShortcutInfo,android.content.IntentSender) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.SpinnerDialog -> com.antplay.utils.SpinnerDialog:
    android.app.ProgressDialog -$$Nest$fgetprogress(com.antplay.utils.SpinnerDialog) -> -$$Nest$fgetprogress
      # {"id":"com.android.tools.r8.synthesized"}
    18:18:void <clinit>() -> <clinit>
    21:27:void <init>(android.app.Activity,java.lang.String,java.lang.String,boolean) -> <init>
    38:50:void closeDialogs(android.app.Activity) -> closeDialogs
    55:56:void dismiss() -> dismiss
    31:33:com.antplay.utils.SpinnerDialog displayDialog(android.app.Activity,java.lang.String,java.lang.String,boolean) -> displayDialog
    113:119:void onCancel(android.content.DialogInterface) -> onCancel
    72:109:void run() -> run
    60:66:void setMessage(java.lang.String) -> setMessage
com.antplay.utils.SpinnerDialog$1 -> com.antplay.utils.SpinnerDialog$1:
    60:60:void <init>(com.antplay.utils.SpinnerDialog,java.lang.String) -> <init>
    63:64:void run() -> run
com.antplay.utils.TvChannelHelper -> com.antplay.utils.TvChannelHelper:
    java.lang.String -$$Nest$smtoUriString(android.content.Intent) -> -$$Nest$smtoUriString
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String -$$Nest$smtoValueString(java.lang.Object) -> -$$Nest$smtoValueString
      # {"id":"com.android.tools.r8.synthesized"}
    37:39:void <init>(android.app.Activity) -> <init>
    128:169:void addGameToChannel(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp) -> addGameToChannel
    62:97:void createTvChannel(com.antplay.nvstream.http.ComputerDetails) -> createTvChannel
    172:184:void deleteChannel(com.antplay.nvstream.http.ComputerDetails) -> deleteChannel
    187:205:void deleteProgram(com.antplay.nvstream.http.ComputerDetails,com.antplay.nvstream.http.NvApp) -> deleteProgram
    117:124:android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable) -> drawableToBitmap
    209:226:java.lang.Long getChannelId(java.lang.String) -> getChannelId
    231:259:java.lang.Long getProgramId(long,java.lang.String) -> getProgramId
    272:272:boolean isAndroidTV() -> isAndroidTV
    42:59:void requestChannelOnHomeScreen(com.antplay.nvstream.http.ComputerDetails) -> requestChannelOnHomeScreen
    267:267:java.lang.String toUriString(android.content.Intent) -> toUriString
    263:263:java.lang.String toValueString(java.lang.Object) -> toValueString
    101:114:void updateChannelIcon(long) -> updateChannelIcon
com.antplay.utils.TvChannelHelper$$ExternalSyntheticApiModelOutline0 -> com.antplay.utils.TvChannelHelper$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.net.Uri com.antplay.utils.TvChannelHelper$$InternalSyntheticApiModelOutline$2$a44d7e268510d3d88a1d643a3b70a556bf4e7f3f8ad6a98deb2342cb1ee085f0$0.m(long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.TvChannelHelper$$ExternalSyntheticApiModelOutline1 -> com.antplay.utils.TvChannelHelper$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.antplay.utils.TvChannelHelper$$InternalSyntheticApiModelOutline$2$a44d7e268510d3d88a1d643a3b70a556bf4e7f3f8ad6a98deb2342cb1ee085f0$1.m(android.content.Context,long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.TvChannelHelper$$ExternalSyntheticApiModelOutline2 -> com.antplay.utils.TvChannelHelper$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.net.Uri com.antplay.utils.TvChannelHelper$$InternalSyntheticApiModelOutline$3$54bdb743406d72d7f683594abd9c0ff287c72a5ca8e597c6ebef5124f26c4388$0.m(long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.TvChannelHelper$ChannelBuilder -> com.antplay.utils.TvChannelHelper$ChannelBuilder:
    void <init>(com.antplay.utils.TvChannelHelper$ChannelBuilder-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    333:335:void <init>() -> <init>
    353:354:com.antplay.utils.TvChannelHelper$ChannelBuilder setAppLinkIntent(android.content.Intent) -> setAppLinkIntent
    343:344:com.antplay.utils.TvChannelHelper$ChannelBuilder setDisplayName(java.lang.String) -> setDisplayName
    348:349:com.antplay.utils.TvChannelHelper$ChannelBuilder setInternalProviderId(java.lang.String) -> setInternalProviderId
    338:339:com.antplay.utils.TvChannelHelper$ChannelBuilder setType(java.lang.String) -> setType
    358:358:android.content.ContentValues toContentValues() -> toContentValues
com.antplay.utils.TvChannelHelper$ChannelBuilder-IA -> com.antplay.utils.TvChannelHelper$ChannelBuilder-IA:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.TvChannelHelper$PreviewProgramBuilder -> com.antplay.utils.TvChannelHelper$PreviewProgramBuilder:
    void <init>(com.antplay.utils.TvChannelHelper$PreviewProgramBuilder-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    276:278:void <init>() -> <init>
    282:283:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setChannelId(java.lang.Long) -> setChannelId
    302:303:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setIntent(android.content.Intent) -> setIntent
    312:313:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setInternalProviderId(java.lang.String) -> setInternalProviderId
    297:298:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setPosterArtAspectRatio(int) -> setPosterArtAspectRatio
    317:318:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setPosterArtUri(android.net.Uri) -> setPosterArtUri
    292:293:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setTitle(java.lang.String) -> setTitle
    287:288:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setType(int) -> setType
    322:323:com.antplay.utils.TvChannelHelper$PreviewProgramBuilder setWeight(int) -> setWeight
    327:327:android.content.ContentValues toContentValues() -> toContentValues
com.antplay.utils.TvChannelHelper$PreviewProgramBuilder-IA -> com.antplay.utils.TvChannelHelper$PreviewProgramBuilder-IA:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.UiHelper -> com.antplay.utils.UiHelper:
    95:109:void applyStatusBarPadding(android.view.View) -> applyStatusBarPadding
    234:259:void displayDeletePcConfirmationDialog(android.app.Activity,com.antplay.nvstream.http.ComputerDetails,java.lang.Runnable,java.lang.Runnable) -> displayDeletePcConfirmationDialog
    207:231:void displayQuitConfirmationDialog(android.app.Activity,java.lang.Runnable,java.lang.Runnable) -> displayQuitConfirmationDialog
    113:166:void notifyNewRootView(android.app.Activity) -> notifyNewRootView
    49:50:void notifyStreamConnected(android.content.Context) -> notifyStreamConnected
    45:46:void notifyStreamConnecting(android.content.Context) -> notifyStreamConnecting
    61:62:void notifyStreamEnded(android.content.Context) -> notifyStreamEnded
    53:54:void notifyStreamEnteringPiP(android.content.Context) -> notifyStreamEnteringPiP
    57:58:void notifyStreamExitingPiP(android.content.Context) -> notifyStreamExitingPiP
    32:42:void setGameModeStatus(android.content.Context,boolean,boolean,boolean) -> setGameModeStatus
    66:92:void setLocale(android.app.Activity) -> setLocale
    169:204:void showDecoderCrashDialog(android.app.Activity) -> showDecoderCrashDialog
com.antplay.utils.UiHelper$1 -> com.antplay.utils.UiHelper$1:
    97:97:void <init>() -> <init>
    100:104:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
com.antplay.utils.UiHelper$1$$ExternalSyntheticApiModelOutline0 -> com.antplay.utils.UiHelper$1$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Insets com.antplay.utils.UiHelper$1$$InternalSyntheticApiModelOutline$1$e2eaf9f6580cc60e9ceaefebb23f0b7445b7dfbfc65da476291c34a5a19542ca$0.m(android.view.WindowInsets) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.antplay.utils.UiHelper$2 -> com.antplay.utils.UiHelper$2:
    142:142:void <init>(android.app.Activity) -> <init>
    146:160:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
com.antplay.utils.UiHelper$3 -> com.antplay.utils.UiHelper$3:
    183:183:void <init>(android.content.SharedPreferences,int) -> <init>
    187:188:void run() -> run
com.antplay.utils.UiHelper$4 -> com.antplay.utils.UiHelper$4:
    195:195:void <init>(android.content.SharedPreferences,int) -> <init>
    199:200:void run() -> run
com.antplay.utils.UiHelper$5 -> com.antplay.utils.UiHelper$5:
    207:207:void <init>(java.lang.Runnable,java.lang.Runnable) -> <init>
    210:223:void onClick(android.content.DialogInterface,int) -> onClick
com.antplay.utils.UiHelper$6 -> com.antplay.utils.UiHelper$6:
    234:234:void <init>(java.lang.Runnable,java.lang.Runnable) -> <init>
    237:250:void onClick(android.content.DialogInterface,int) -> onClick
com.antplay.utils.Vector2d -> com.antplay.utils.Vector2d:
    8:8:void <clinit>() -> <clinit>
    10:12:void <init>() -> <init>
    21:21:double getMagnitude() -> getMagnitude
    41:41:float getX() -> getX
    45:45:float getY() -> getY
    15:18:void initialize(float,float) -> initialize
    29:30:void scalarMultiply(double) -> scalarMultiply
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    44:47:void <init>(java.lang.reflect.Field) -> <init>
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    31:136:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1) -> <init>
    147:155:java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    162:176:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    31:31:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:com.google.gson.FieldNamingPolicy[] values() -> values
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    90:90:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    113:113:void <init>(java.lang.String,int) -> <init>
    115:115:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$6 -> com.google.gson.FieldNamingPolicy$6:
    136:136:void <init>(java.lang.String,int) -> <init>
    138:138:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    114:114:void <clinit>() -> <clinit>
    188:195:void <init>() -> <init>
    124:290:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy) -> <init>
    935:943:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    419:427:com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter) -> atomicLongAdapter
    431:454:com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter) -> atomicLongArrayAdapter
    389:394:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    341:344:com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    365:368:com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    848:849:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    873:878:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    927:930:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    955:984:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    465:501:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    587:587:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    559:577:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    397:400:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    798:800:com.google.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    783:791:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    646:649:java.lang.String toJson(java.lang.Object) -> toJson
    668:670:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    713:718:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    727:747:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    757:759:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    772:777:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    808:827:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    1064:1069:java.lang.String toString() -> toString
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    344:344:void <init>(com.google.gson.Gson) -> <init>
    344:344:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    346:350:java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    344:344:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    353:360:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    368:368:void <init>(com.google.gson.Gson) -> <init>
    368:368:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    370:374:java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    368:368:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    377:384:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    400:400:void <init>() -> <init>
    400:400:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    402:406:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    400:400:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    409:414:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    419:419:void <init>(com.google.gson.TypeAdapter) -> <init>
    419:419:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    424:425:java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader) -> read
    419:419:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    421:422:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    431:431:void <init>(com.google.gson.TypeAdapter) -> <init>
    431:431:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    440:452:java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader) -> read
    431:431:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    433:438:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    1037:1037:void <init>() -> <init>
    1048:1051:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1041:1045:void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    1055:1059:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    39:41:void <init>() -> <init>
    105:109:void add(com.google.gson.JsonElement) -> add
    386:386:boolean equals(java.lang.Object) -> equals
    391:391:int hashCode() -> hashCode
    191:191:java.util.Iterator iterator() -> iterator
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    33:33:void <init>() -> <init>
    104:107:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    88:91:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    120:123:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    47:47:boolean isJsonArray() -> isJsonArray
    75:75:boolean isJsonNull() -> isJsonNull
    56:56:boolean isJsonObject() -> isJsonObject
    65:65:boolean isJsonPrimitive() -> isJsonPrimitive
    313:319:java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    32:32:void <clinit>() -> <clinit>
    39:41:void <init>() -> <init>
    65:65:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    32:33:void <init>() -> <init>
    58:59:void add(java.lang.String,com.google.gson.JsonElement) -> add
    123:123:java.util.Set entrySet() -> entrySet
    197:198:boolean equals(java.lang.Object) -> equals
    203:203:int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    42:43:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:63:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    42:44:void <init>(java.lang.Boolean) -> <init>
    51:53:void <init>(java.lang.Number) -> <init>
    60:62:void <init>(java.lang.String) -> <init>
    260:280:boolean equals(java.lang.Object) -> equals
    101:105:boolean getAsBoolean() -> getAsBoolean
    161:161:double getAsDouble() -> getAsDouble
    228:228:int getAsInt() -> getAsInt
    206:206:long getAsLong() -> getAsLong
    125:125:java.lang.Number getAsNumber() -> getAsNumber
    144:149:java.lang.String getAsString() -> getAsString
    243:255:int hashCode() -> hashCode
    91:91:boolean isBoolean() -> isBoolean
    288:293:boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    114:114:boolean isNumber() -> isNumber
    134:134:boolean isString() -> isString
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    27:52:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1) -> <init>
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    36:36:void <init>(java.lang.String,int) -> <init>
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    52:52:void <init>(java.lang.String,int) -> <init>
com.google.gson.ToNumberPolicy -> com.google.gson.ToNumberPolicy:
    33:88:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:void <init>(java.lang.String,int,com.google.gson.ToNumberPolicy$1) -> <init>
    33:33:com.google.gson.ToNumberPolicy valueOf(java.lang.String) -> valueOf
    33:33:com.google.gson.ToNumberPolicy[] values() -> values
com.google.gson.ToNumberPolicy$1 -> com.google.gson.ToNumberPolicy$1:
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    41:41:java.lang.Double readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$2 -> com.google.gson.ToNumberPolicy$2:
    50:50:void <init>(java.lang.String,int) -> <init>
    52:52:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$3 -> com.google.gson.ToNumberPolicy$3:
    65:65:void <init>(java.lang.String,int) -> <init>
    67:78:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$4 -> com.google.gson.ToNumberPolicy$4:
    88:88:void <init>(java.lang.String,int) -> <init>
    88:88:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    90:94:java.math.BigDecimal readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    119:119:void <init>() -> <init>
    186:186:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    233:237:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    186:186:void <init>(com.google.gson.TypeAdapter) -> <init>
    195:199:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    188:193:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
# {"id":"sourceFile","fileName":"$Gson$Preconditions.java"}
    45:48:void checkArgument(boolean) -> checkArgument
    38:41:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    45:45:void <clinit>() -> <clinit>
    69:69:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    109:128:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    481:482:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    474:477:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    167:167:boolean equal(java.lang.Object,java.lang.Object) -> equal
    174:224:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    297:299:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    307:315:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    242:272:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    328:338:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    133:161:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    283:289:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    229:229:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    461:466:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    59:59:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    343:343:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    349:440:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map) -> resolve
    444:457:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    80:85:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    95:100:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    233:233:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    551:553:void <init>(java.lang.reflect.Type) -> <init>
    560:561:boolean equals(java.lang.Object) -> equals
    556:556:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    565:565:int hashCode() -> hashCode
    569:569:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    489:506:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    521:522:boolean equals(java.lang.Object) -> equals
    509:509:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    517:517:java.lang.reflect.Type getOwnerType() -> getOwnerType
    513:513:java.lang.reflect.Type getRawType() -> getRawType
    526:528:int hashCode() -> hashCode
    532:542:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    584:601:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    612:613:boolean equals(java.lang.Object) -> equals
    608:608:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    604:604:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    618:619:int hashCode() -> hashCode
    623:628:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    51:55:void <init>(java.util.Map) -> <init>
    58:96:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    101:125:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    136:215:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    220:220:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    236:236:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    66:66:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    68:68:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    188:188:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    190:190:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    194:194:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    196:196:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    201:201:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    203:203:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.ConstructorConstructor$13:
    207:207:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    209:209:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.ConstructorConstructor$14:
    220:221:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type) -> <init>
    225:228:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    78:78:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    80:80:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    105:105:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor) -> <init>
    109:120:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    138:138:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    140:140:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    144:144:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Type) -> <init>
    147:155:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    160:160:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    162:162:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    166:166:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    168:168:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    172:172:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    174:174:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    182:182:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    184:184:java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    52:52:void <clinit>() -> <clinit>
    50:59:void <init>() -> <init>
    50:50:java.lang.Object clone() -> clone
    63:65:com.google.gson.internal.Excluder clone() -> clone
    112:122:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    210:211:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    194:206:boolean excludeClassChecks(java.lang.Class) -> excludeClassChecks
    215:221:boolean excludeClassInStrategy(java.lang.Class,boolean) -> excludeClassInStrategy
    152:190:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    225:226:boolean isAnonymousOrNonStaticLocal(java.lang.Class) -> isAnonymousOrNonStaticLocal
    230:230:boolean isInnerClass(java.lang.Class) -> isInnerClass
    234:234:boolean isStatic(java.lang.Class) -> isStatic
    242:248:boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    252:258:boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    238:238:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    122:122:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    143:146:com.google.gson.TypeAdapter delegate() -> delegate
    127:131:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    135:140:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.JavaVersion -> com.google.gson.internal.JavaVersion:
    26:26:void <clinit>() -> <clinit>
    29:30:int determineMajorJavaVersion() -> determineMajorJavaVersion
    62:73:int extractBeginningInt(java.lang.String) -> extractBeginningInt
    35:42:int getMajorJavaVersion(java.lang.String) -> getMajorJavaVersion
    81:81:int getMajorJavaVersion() -> getMajorJavaVersion
    88:88:boolean isJava9OrLater() -> isJava9OrLater
    48:56:int parseDotted(java.lang.String) -> parseDotted
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    25:25:void <init>() -> <init>
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    33:35:void <init>(java.lang.String) -> <init>
    66:66:double doubleValue() -> doubleValue
    95:102:boolean equals(java.lang.Object) -> equals
    61:61:float floatValue() -> floatValue
    90:90:int hashCode() -> hashCode
    40:45:int intValue() -> intValue
    53:55:long longValue() -> longValue
    71:71:java.lang.String toString() -> toString
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    41:43:void <clinit>() -> <clinit>
    63:64:void <init>() -> <init>
    51:78:void <init>(java.util.Comparator) -> <init>
    104:111:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    433:434:java.util.Set entrySet() -> entrySet
    211:211:boolean equal(java.lang.Object,java.lang.Object) -> equal
    125:183:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    205:207:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    189:191:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    85:86:java.lang.Object get(java.lang.Object) -> get
    438:439:java.util.Set keySet() -> keySet
    94:100:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    314:371:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    114:115:java.lang.Object remove(java.lang.Object) -> remove
    221:277:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    280:284:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    288:304:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    377:399:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    405:427:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    81:81:int size() -> size
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    43:43:void <init>() -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    45:45:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    563:563:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    594:595:void clear() -> clear
    577:577:boolean contains(java.lang.Object) -> contains
    569:569:java.util.Iterator iterator() -> iterator
    581:590:boolean remove(java.lang.Object) -> remove
    565:565:int size() -> size
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    569:569:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    569:569:java.lang.Object next() -> next
    571:571:java.util.Map$Entry next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    598:598:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    620:621:void clear() -> clear
    612:612:boolean contains(java.lang.Object) -> contains
    604:604:java.util.Iterator iterator() -> iterator
    616:616:boolean remove(java.lang.Object) -> remove
    600:600:int size() -> size
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    604:604:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    606:606:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    530:535:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    538:538:boolean hasNext() -> hasNext
    542:550:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    554:560:void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    453:456:void <init>() -> <init>
    459:467:void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    485:490:boolean equals(java.lang.Object) -> equals
    506:512:com.google.gson.internal.LinkedTreeMap$Node first() -> first
    470:470:java.lang.Object getKey() -> getKey
    474:474:java.lang.Object getValue() -> getValue
    494:495:int hashCode() -> hashCode
    519:525:com.google.gson.internal.LinkedTreeMap$Node last() -> last
    478:480:java.lang.Object setValue(java.lang.Object) -> setValue
    499:499:java.lang.String toString() -> toString
com.google.gson.internal.PreJava9DateFormatProvider -> com.google.gson.internal.PreJava9DateFormatProvider:
    59:69:java.lang.String getDatePartOfDateTimePattern(int) -> getDatePartOfDateTimePattern
    74:83:java.lang.String getTimePartOfDateTimePattern(int) -> getTimePartOfDateTimePattern
    39:40:java.text.DateFormat getUSDateTimeFormat(int,int) -> getUSDateTimeFormat
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    34:34:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    66:75:java.lang.Class wrap(java.lang.Class) -> wrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    44:64:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    72:73:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    76:76:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    85:89:void <init>(java.lang.Appendable) -> <init>
    101:101:void close() -> close
    100:100:void flush() -> flush
    92:94:void write(char[],int,int) -> write
    97:98:void write(int) -> write
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    106:106:void <init>() -> <init>
    112:112:char charAt(int) -> charAt
    109:109:int length() -> length
    115:115:java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    31:31:void <init>() -> <init>
    115:122:void assertInstantiable(java.lang.Class) -> assertInstantiable
    40:101:com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    45:45:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    49:50:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    69:69:void <init>(java.lang.reflect.Method,int) -> <init>
    73:74:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    89:89:void <init>(java.lang.reflect.Method) -> <init>
    93:94:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    101:101:void <init>() -> <init>
    104:104:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    39:39:void <clinit>() -> <clinit>
    57:61:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:82:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    87:98:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    39:41:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    45:58:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    67:71:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    74:86:java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    90:100:void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    47:47:void <clinit>() -> <clinit>
    58:68:void <init>() -> <init>
    78:87:java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    46:46:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    71:75:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    46:46:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    91:98:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    47:47:void <init>() -> <init>
    50:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType:
    52:52:void <clinit>() -> <clinit>
    60:62:void <init>(java.lang.Class) -> <init>
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1 -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1:
    52:52:void <init>(java.lang.Class) -> <init>
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    37:39:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    55:81:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    39:47:void <clinit>() -> <clinit>
    72:76:void beginArray() -> beginArray
    88:91:void beginObject() -> beginObject
    266:268:void close() -> close
    79:85:void endArray() -> endArray
    94:100:void endObject() -> endObject
    161:165:void expect(com.google.gson.stream.JsonToken) -> expect
    308:323:java.lang.String getPath() -> getPath
    103:104:boolean hasNext() -> hasNext
    327:327:java.lang.String locationString() -> locationString
    191:196:boolean nextBoolean() -> nextBoolean
    208:221:double nextDouble() -> nextDouble
    239:249:int nextInt() -> nextInt
    253:262:com.google.gson.JsonElement nextJsonElement() -> nextJsonElement
    225:235:long nextLong() -> nextLong
    168:174:java.lang.String nextName() -> nextName
    200:205:void nextNull() -> nextNull
    178:187:java.lang.String nextString() -> nextString
    108:146:com.google.gson.stream.JsonToken peek() -> peek
    151:151:java.lang.Object peekStack() -> peekStack
    155:157:java.lang.Object popStack() -> popStack
    290:295:void promoteNameToValue() -> promoteNameToValue
    298:305:void push(java.lang.Object) -> push
    271:283:void skipValue() -> skipValue
    286:286:java.lang.String toString() -> toString
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    39:39:void <init>() -> <init>
    44:44:void close() -> close
    41:41:int read(char[],int,int) -> read
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    34:46:void <clinit>() -> <clinit>
    49:59:void <init>() -> <init>
    95:98:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    114:117:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    206:210:void close() -> close
    102:110:com.google.gson.stream.JsonWriter endArray() -> endArray
    121:129:com.google.gson.stream.JsonWriter endObject() -> endObject
    203:203:void flush() -> flush
    65:68:com.google.gson.JsonElement get() -> get
    133:144:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    156:157:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    72:72:com.google.gson.JsonElement peek() -> peek
    76:92:void put(com.google.gson.JsonElement) -> put
    148:152:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    161:162:com.google.gson.stream.JsonWriter value(boolean) -> value
    166:170:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    182:183:com.google.gson.stream.JsonWriter value(long) -> value
    187:199:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    34:34:void <init>() -> <init>
    42:42:void close() -> close
    39:39:void flush() -> flush
    36:36:void write(char[],int,int) -> write
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    110:113:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:133:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    140:142:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    152:158:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    246:260:java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    145:145:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    161:195:java.util.Map read(com.google.gson.stream.JsonReader) -> read
    145:145:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    199:243:void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
com.google.gson.internal.bind.NumberTypeAdapter -> com.google.gson.internal.bind.NumberTypeAdapter:
    39:39:void <clinit>() -> <clinit>
    43:45:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    58:61:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    48:49:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    35:35:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    66:75:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    35:35:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    80:81:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.NumberTypeAdapter$1 -> com.google.gson.internal.bind.NumberTypeAdapter$1:
    49:49:void <init>(com.google.gson.internal.bind.NumberTypeAdapter) -> <init>
    52:52:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.NumberTypeAdapter$2 -> com.google.gson.internal.bind.NumberTypeAdapter$2:
    67:67:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    43:43:void <clinit>() -> <clinit>
    39:39:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy,com.google.gson.internal.bind.ObjectTypeAdapter$1) -> <init>
    48:51:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy) -> <init>
    66:69:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    54:54:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    74:108:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    114:127:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    54:54:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    57:60:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    75:75:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    53:62:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory) -> <init>
    95:102:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    108:120:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    65:65:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    69:69:boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder) -> excludeField
    145:179:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
    74:91:java.util.List getFieldNames(java.lang.reflect.Field) -> getFieldNames
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    120:120:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,java.lang.reflect.Field,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean) -> <init>
    131:135:void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
    124:128:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    137:139:boolean writeField(java.lang.Object) -> writeField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    201:204:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    207:231:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    235:252:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    187:191:void <init>(java.lang.String,boolean,boolean) -> <init>
com.google.gson.internal.bind.TreeTypeAdapter -> com.google.gson.internal.bind.TreeTypeAdapter:
    47:59:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    86:89:com.google.gson.TypeAdapter delegate() -> delegate
    62:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    73:83:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    153:153:void <init>(com.google.gson.internal.bind.TreeTypeAdapter) -> <init>
    153:153:void <init>(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1) -> <init>
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    33:37:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    76:80:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
    41:41:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    53:70:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    70:780:void <clinit>() -> <clinit>
    806:806:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    819:819:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    834:834:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    853:853:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    70:70:void <init>() -> <init>
    70:70:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    78:78:java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    70:70:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    73:74:void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    266:266:void <init>() -> <init>
    266:266:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    268:284:java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> read
    266:266:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    287:292:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    297:297:void <init>() -> <init>
    297:297:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    300:307:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    297:297:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    312:313:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    316:316:void <init>() -> <init>
    316:316:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    319:323:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    316:316:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    327:328:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    331:331:void <init>() -> <init>
    331:331:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    334:338:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    331:331:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    342:343:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    346:346:void <init>() -> <init>
    346:346:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    349:357:java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    346:346:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    361:362:void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    368:368:void <init>() -> <init>
    368:368:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    371:380:java.lang.String read(com.google.gson.stream.JsonReader) -> read
    368:368:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    384:385:void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    388:388:void <init>() -> <init>
    388:388:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    390:397:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    388:388:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    402:403:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    406:406:void <init>() -> <init>
    406:406:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    408:415:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    406:406:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    420:421:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    426:426:void <init>() -> <init>
    426:426:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    429:433:java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    426:426:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    437:438:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    444:444:void <init>() -> <init>
    444:444:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    447:451:java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    444:444:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    455:456:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    85:85:void <init>() -> <init>
    85:85:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    87:119:java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    85:85:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    123:129:void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    462:462:void <init>() -> <init>
    462:462:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    465:470:java.net.URL read(com.google.gson.stream.JsonReader) -> read
    462:462:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    474:475:void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    480:480:void <init>() -> <init>
    480:480:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    483:491:java.net.URI read(com.google.gson.stream.JsonReader) -> read
    480:480:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    496:497:void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    502:502:void <init>() -> <init>
    502:502:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    505:510:java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    502:502:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    514:515:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    521:521:void <init>() -> <init>
    521:521:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    524:528:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    521:521:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    532:533:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    538:538:void <init>() -> <init>
    538:538:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    541:541:java.util.Currency read(com.google.gson.stream.JsonReader) -> read
    538:538:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    545:546:void write(com.google.gson.stream.JsonWriter,java.util.Currency) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    550:550:void <init>() -> <init>
    550:550:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    560:589:java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    550:550:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    594:612:void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    618:618:void <init>() -> <init>
    618:618:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    621:644:java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    618:618:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    649:650:void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    655:655:void <init>() -> <init>
    655:655:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    657:693:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    655:655:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    698:728:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    780:780:void <init>() -> <init>
    783:790:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    134:134:void <init>() -> <init>
    134:134:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    137:145:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    134:134:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    149:150:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    806:806:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    809:809:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    812:812:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    819:819:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    822:823:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    826:827:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    834:834:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    837:838:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    841:842:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.bind.TypeAdapters$33:
    853:853:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    856:860:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    876:876:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33$1 -> com.google.gson.internal.bind.TypeAdapters$33$1:
    860:860:void <init>(com.google.gson.internal.bind.TypeAdapters$33,java.lang.Class) -> <init>
    866:871:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    862:863:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.bind.TypeAdapters$34:
    93:93:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    157:157:void <init>() -> <init>
    157:157:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    159:163:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    157:157:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    167:168:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    174:174:void <init>() -> <init>
    174:174:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    177:185:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    174:174:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    190:191:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    197:197:void <init>() -> <init>
    197:197:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    200:207:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    197:197:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    212:213:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    219:219:void <init>() -> <init>
    219:219:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    222:229:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    219:219:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    234:235:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    240:240:void <init>() -> <init>
    240:240:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    243:245:java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> read
    240:240:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    249:250:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    255:255:void <init>() -> <init>
    255:255:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    257:257:java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader) -> read
    255:255:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    260:261:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    735:766:void <init>(java.lang.Class) -> <init>
    734:734:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    768:772:java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    734:734:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    776:777:void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1 -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1:
    744:744:void <init>(com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter,java.lang.reflect.Field) -> <init>
    744:744:java.lang.Object run() -> run
    746:747:java.lang.Void run() -> run
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.bind.util.ISO8601Utils:
    30:30:void <clinit>() -> <clinit>
    288:288:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    345:349:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    124:276:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    301:323:int parseInt(java.lang.String,int,int) -> parseInt
com.google.gson.internal.reflect.PreJava9ReflectionAccessor -> com.google.gson.internal.reflect.PreJava9ReflectionAccessor:
    26:26:void <init>() -> <init>
    31:32:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
com.google.gson.internal.reflect.ReflectionAccessor -> com.google.gson.internal.reflect.ReflectionAccessor:
    36:36:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    52:52:com.google.gson.internal.reflect.ReflectionAccessor getInstance() -> getInstance
com.google.gson.internal.reflect.UnsafeReflectionAccessor -> com.google.gson.internal.reflect.UnsafeReflectionAccessor:
    31:35:void <init>() -> <init>
    81:83:java.lang.reflect.Field getOverrideField() -> getOverrideField
    70:75:java.lang.Object getUnsafeInstance() -> getUnsafeInstance
    40:51:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    55:65:boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject) -> makeAccessibleWithUnsafe
com.google.gson.internal.sql.SqlDateTypeAdapter -> com.google.gson.internal.sql.SqlDateTypeAdapter:
    39:39:void <clinit>() -> <clinit>
    38:38:void <init>(com.google.gson.internal.sql.SqlDateTypeAdapter$1) -> <init>
    47:50:void <init>() -> <init>
    38:38:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    53:62:java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    38:38:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    67:69:void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
com.google.gson.internal.sql.SqlDateTypeAdapter$1 -> com.google.gson.internal.sql.SqlDateTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:43:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimeTypeAdapter -> com.google.gson.internal.sql.SqlTimeTypeAdapter:
    41:41:void <clinit>() -> <clinit>
    40:40:void <init>(com.google.gson.internal.sql.SqlTimeTypeAdapter$1) -> <init>
    48:51:void <init>() -> <init>
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    53:62:java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    66:68:void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
com.google.gson.internal.sql.SqlTimeTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimeTypeAdapter$1:
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimestampTypeAdapter -> com.google.gson.internal.sql.SqlTimestampTypeAdapter:
    15:15:void <clinit>() -> <clinit>
    14:14:void <init>(com.google.gson.TypeAdapter,com.google.gson.internal.sql.SqlTimestampTypeAdapter$1) -> <init>
    29:31:void <init>(com.google.gson.TypeAdapter) -> <init>
    14:14:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    35:36:java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    14:14:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    41:42:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
com.google.gson.internal.sql.SqlTimestampTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimestampTypeAdapter$1:
    15:15:void <init>() -> <init>
    18:22:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTypesSupport -> com.google.gson.internal.sql.SqlTypesSupport:
    37:67:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTypesSupport$1 -> com.google.gson.internal.sql.SqlTypesSupport$1:
    45:45:void <init>(java.lang.Class) -> <init>
com.google.gson.internal.sql.SqlTypesSupport$2 -> com.google.gson.internal.sql.SqlTypesSupport$2:
    50:50:void <init>(java.lang.Class) -> <init>
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    61:65:void <init>() -> <init>
    71:75:void <init>(java.lang.reflect.Type) -> <init>
    284:285:boolean equals(java.lang.Object) -> equals
    296:296:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    303:303:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
    94:94:java.lang.Class getRawType() -> getRawType
    82:87:java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    101:101:java.lang.reflect.Type getType() -> getType
    280:280:int hashCode() -> hashCode
    289:289:java.lang.String toString() -> toString
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    1588:1610:void <clinit>() -> <clinit>
    229:293:void <init>(java.io.Reader) -> <init>
    340:351:void beginArray() -> beginArray
    376:386:void beginObject() -> beginObject
    1402:1405:void checkLenient() -> checkLenient
    1215:1219:void close() -> close
    1570:1585:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    461:593:int doPeek() -> doPeek
    358:369:void endArray() -> endArray
    393:405:void endObject() -> endObject
    1278:1303:boolean fillBuffer(int) -> fillBuffer
    1462:1485:java.lang.String getPath() -> getPath
    411:415:boolean hasNext() -> hasNext
    332:332:boolean isLenient() -> isLenient
    744:764:boolean isLiteral(char) -> isLiteral
    1452:1454:java.lang.String locationString() -> locationString
    839:852:boolean nextBoolean() -> nextBoolean
    885:916:double nextDouble() -> nextDouble
    1162:1208:int nextInt() -> nextInt
    930:971:long nextLong() -> nextLong
    776:792:java.lang.String nextName() -> nextName
    1321:1397:int nextNonWhitespace(boolean) -> nextNonWhitespace
    863:873:void nextNull() -> nextNull
    986:1032:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    804:828:java.lang.String nextString() -> nextString
    1040:1091:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    422:456:com.google.gson.stream.JsonToken peek() -> peek
    598:637:int peekKeyword() -> peekKeyword
    642:739:int peekNumber() -> peekNumber
    1263:1270:void push(int) -> push
    1498:1553:char readEscapeCharacter() -> readEscapeCharacter
    325:326:void setLenient(boolean) -> setLenient
    1096:1118:void skipQuotedValue(char) -> skipQuotedValue
    1429:1444:boolean skipTo(java.lang.String) -> skipTo
    1413:1423:void skipToEndOfLine() -> skipToEndOfLine
    1123:1149:void skipUnquotedValue() -> skipUnquotedValue
    1227:1260:void skipValue() -> skipValue
    1562:1562:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1448:1448:java.lang.String toString() -> toString
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    1588:1588:void <init>() -> <init>
    1590:1608:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    25:84:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:com.google.gson.stream.JsonToken[] values() -> values
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    146:163:void <clinit>() -> <clinit>
    168:203:void <init>(java.io.Writer) -> <init>
    611:619:void beforeName() -> beforeName
    628:657:void beforeValue() -> beforeValue
    288:289:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    308:309:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    338:351:com.google.gson.stream.JsonWriter close(int,int,char) -> close
    554:561:void close() -> close
    298:298:com.google.gson.stream.JsonWriter endArray() -> endArray
    318:318:com.google.gson.stream.JsonWriter endObject() -> endObject
    542:546:void flush() -> flush
    278:278:boolean getSerializeNulls() -> getSerializeNulls
    262:262:boolean isHtmlSafe() -> isHtmlSafe
    243:243:boolean isLenient() -> isLenient
    385:395:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    596:604:void newline() -> newline
    445:455:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    326:329:com.google.gson.stream.JsonWriter open(int,char) -> open
    365:368:int peek() -> peek
    355:359:void push(int) -> push
    375:376:void replaceTop(int) -> replaceTop
    254:255:void setHtmlSafe(boolean) -> setHtmlSafe
    214:221:void setIndent(java.lang.String) -> setIndent
    236:237:void setLenient(boolean) -> setLenient
    270:271:void setSerializeNulls(boolean) -> setSerializeNulls
    564:593:void string(java.lang.String) -> string
    413:419:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    464:467:com.google.gson.stream.JsonWriter value(boolean) -> value
    476:482:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    508:511:com.google.gson.stream.JsonWriter value(long) -> value
    522:534:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    399:404:void writeDeferredName() -> writeDeferredName
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    29:30:void <init>(java.lang.String) -> <init>
javax.jmdns.JmDNS -> javax.jmdns.JmDNS:
    48:60:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    99:99:javax.jmdns.JmDNS create(java.net.InetAddress) -> create
javax.jmdns.JmmDNS$Factory -> javax.jmdns.JmmDNS$Factory:
    51:51:void <clinit>() -> <clinit>
    54:55:void <init>() -> <init>
    114:118:void close() -> close
    100:105:javax.jmdns.JmmDNS getInstance() -> getInstance
    86:91:javax.jmdns.JmmDNS newJmmDNS() -> newJmmDNS
javax.jmdns.NetworkTopologyDiscovery$Factory -> javax.jmdns.NetworkTopologyDiscovery$Factory:
    74:74:void <clinit>() -> <clinit>
    77:78:void <init>() -> <init>
    123:130:javax.jmdns.NetworkTopologyDiscovery getInstance() -> getInstance
    109:114:javax.jmdns.NetworkTopologyDiscovery newNetworkTopologyDiscovery() -> newNetworkTopologyDiscovery
    89:90:void setClassDelegate(javax.jmdns.NetworkTopologyDiscovery$Factory$ClassDelegate) -> setClassDelegate
javax.jmdns.NetworkTopologyEvent -> javax.jmdns.NetworkTopologyEvent:
    28:29:void <init>(java.lang.Object) -> <init>
javax.jmdns.ServiceEvent -> javax.jmdns.ServiceEvent:
    28:29:void <init>(java.lang.Object) -> <init>
    12:12:java.lang.Object clone() -> clone
    67:70:javax.jmdns.ServiceEvent clone() -> clone
javax.jmdns.ServiceInfo -> javax.jmdns.ServiceInfo:
    33:33:void <init>() -> <init>
    33:33:java.lang.Object clone() -> clone
    731:734:javax.jmdns.ServiceInfo clone() -> clone
javax.jmdns.ServiceInfo$Fields -> javax.jmdns.ServiceInfo$Fields:
    38:58:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    38:38:javax.jmdns.ServiceInfo$Fields valueOf(java.lang.String) -> valueOf
    38:38:javax.jmdns.ServiceInfo$Fields[] values() -> values
javax.jmdns.impl.DNSCache -> javax.jmdns.impl.DNSCache:
    48:48:void <clinit>() -> <clinit>
    56:57:void <init>() -> <init>
    63:67:void <init>(javax.jmdns.impl.DNSCache) -> <init>
    75:76:void <init>(int) -> <init>
    125:125:java.util.Collection _getDNSEntryList(java.lang.String) -> _getDNSEntryList
    209:222:boolean addDNSEntry(javax.jmdns.impl.DNSEntry) -> addDNSEntry
    97:103:java.util.Collection allValues() -> allValues
    86:86:java.lang.Object clone() -> clone
    135:149:javax.jmdns.impl.DNSEntry getDNSEntry(javax.jmdns.impl.DNSEntry) -> getDNSEntry
    161:173:javax.jmdns.impl.DNSEntry getDNSEntry(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass) -> getDNSEntry
    113:121:java.util.Collection getDNSEntryList(java.lang.String) -> getDNSEntryList
    185:199:java.util.Collection getDNSEntryList(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass) -> getDNSEntryList
    301:306:void logCachedContent() -> logCachedContent
    232:245:boolean removeDNSEntry(javax.jmdns.impl.DNSEntry) -> removeDNSEntry
    257:271:boolean replaceDNSEntry(javax.jmdns.impl.DNSEntry,javax.jmdns.impl.DNSEntry) -> replaceDNSEntry
    278:294:java.lang.String toString() -> toString
javax.jmdns.impl.DNSEntry -> javax.jmdns.impl.DNSEntry:
    41:54:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    272:281:int compareTo(javax.jmdns.impl.DNSEntry) -> compareTo
    62:67:boolean equals(java.lang.Object) -> equals
    142:142:java.lang.String getKey() -> getKey
    126:126:java.lang.String getName() -> getName
    167:167:java.util.Map getQualifiedNameMap() -> getQualifiedNameMap
    156:156:javax.jmdns.impl.constants.DNSRecordClass getRecordClass() -> getRecordClass
    149:149:javax.jmdns.impl.constants.DNSRecordType getRecordType() -> getRecordType
    116:117:java.lang.String getSubtype() -> getSubtype
    133:133:java.lang.String getType() -> getType
    289:289:int hashCode() -> hashCode
    181:185:boolean isDomainDiscoveryQuery() -> isDomainDiscoveryQuery
    189:189:boolean isReverseLookup() -> isReverseLookup
    77:77:boolean isSameEntry(javax.jmdns.impl.DNSEntry) -> isSameEntry
    225:225:boolean isSameRecordClass(javax.jmdns.impl.DNSEntry) -> isSameRecordClass
    235:235:boolean isSameType(javax.jmdns.impl.DNSEntry) -> isSameType
    171:171:boolean isServicesDiscoveryMetaQuery() -> isServicesDiscoveryMetaQuery
    163:163:boolean isUnique() -> isUnique
    193:193:boolean isV4ReverseLookup() -> isV4ReverseLookup
    197:197:boolean isV6ReverseLookup() -> isV6ReverseLookup
    97:97:boolean matchRecordClass(javax.jmdns.impl.constants.DNSRecordClass) -> matchRecordClass
    107:107:boolean matchRecordType(javax.jmdns.impl.constants.DNSRecordType) -> matchRecordType
    87:87:boolean sameSubtype(javax.jmdns.impl.DNSEntry) -> sameSubtype
    243:246:void toByteArray(java.io.DataOutputStream) -> toByteArray
    255:261:byte[] toByteArray() -> toByteArray
    298:307:java.lang.String toString() -> toString
    315:315:void toString(java.lang.StringBuilder) -> toString
javax.jmdns.impl.DNSIncoming -> javax.jmdns.impl.DNSIncoming:
    24:610:void <clinit>() -> <clinit>
    187:273:void <init>(java.net.DatagramPacket) -> <init>
    276:280:void <init>(int,int,boolean,java.net.DatagramPacket,long) -> <init>
    620:628:java.lang.String _hexString(byte[]) -> _hexString
    587:595:void append(javax.jmdns.impl.DNSIncoming) -> append
    23:23:java.lang.Object clone() -> clone
    288:294:javax.jmdns.impl.DNSIncoming clone() -> clone
    598:598:int elapseSinceArrival() -> elapseSinceArrival
    607:607:int getSenderUDPPayload() -> getSenderUDPPayload
    482:482:boolean isIPv4MappedIPv6Address(byte[]) -> isIPv4MappedIPv6Address
    495:502:java.lang.String print(boolean) -> print
    310:478:javax.jmdns.impl.DNSRecord readAnswer(java.net.InetAddress) -> readAnswer
    298:306:javax.jmdns.impl.DNSQuestion readQuestion() -> readQuestion
    507:577:java.lang.String toString() -> toString
javax.jmdns.impl.DNSIncoming$1 -> javax.jmdns.impl.DNSIncoming$1:
    123:402:void <clinit>() -> <clinit>
javax.jmdns.impl.DNSIncoming$MessageInputStream -> javax.jmdns.impl.DNSIncoming$MessageInputStream:
    31:31:void <clinit>() -> <clinit>
    36:37:void <init>(byte[],int) -> <init>
    45:47:void <init>(byte[],int,int) -> <init>
    66:68:byte[] readBytes(int) -> readBytes
    62:62:int readInt() -> readInt
    114:162:java.lang.String readName() -> readName
    166:167:java.lang.String readNonNameString() -> readNonNameString
    72:106:java.lang.String readUTF(int) -> readUTF
    54:54:int readUnsignedByte() -> readUnsignedByte
    58:58:int readUnsignedShort() -> readUnsignedShort
javax.jmdns.impl.DNSMessage -> javax.jmdns.impl.DNSMessage:
    56:64:void <init>(int,int,boolean) -> <init>
    174:174:java.util.Collection getAdditionals() -> getAdditionals
    135:139:java.util.List getAllAnswers() -> getAllAnswers
    146:146:java.util.Collection getAnswers() -> getAnswers
    160:160:java.util.Collection getAuthorities() -> getAuthorities
    102:102:int getFlags() -> getFlags
    87:87:int getId() -> getId
    181:181:int getNumberOfAdditionals() -> getNumberOfAdditionals
    153:153:int getNumberOfAnswers() -> getNumberOfAnswers
    167:167:int getNumberOfAuthorities() -> getNumberOfAuthorities
    131:131:int getNumberOfQuestions() -> getNumberOfQuestions
    200:200:int getOperationCode() -> getOperationCode
    124:124:java.util.Collection getQuestions() -> getQuestions
    218:218:boolean isAuthoritativeAnswer() -> isAuthoritativeAnswer
    245:245:boolean isEmpty() -> isEmpty
    117:117:boolean isMulticast() -> isMulticast
    227:227:boolean isQuery() -> isQuery
    236:236:boolean isResponse() -> isResponse
    209:209:boolean isTruncated() -> isTruncated
    191:191:boolean isValidResponseCode() -> isValidResponseCode
    252:275:java.lang.String print() -> print
    285:332:java.lang.String print(byte[]) -> print
    110:111:void setFlags(int) -> setFlags
    95:96:void setId(int) -> setId
javax.jmdns.impl.DNSOutgoing -> javax.jmdns.impl.DNSOutgoing:
    191:191:void <clinit>() -> <clinit>
    215:216:void <init>(int) -> <init>
    237:244:void <init>(int,boolean,int) -> <init>
    301:304:void addAnswer(javax.jmdns.impl.DNSIncoming,javax.jmdns.impl.DNSRecord) -> addAnswer
    314:328:void addAnswer(javax.jmdns.impl.DNSRecord,long) -> addAnswer
    337:347:void addAuthorativeAnswer(javax.jmdns.impl.DNSRecord) -> addAuthorativeAnswer
    281:291:void addQuestion(javax.jmdns.impl.DNSQuestion) -> addQuestion
    271:271:int availableSpace() -> availableSpace
    375:401:byte[] data() -> data
    252:252:java.net.InetSocketAddress getDestination() -> getDestination
    489:489:int getMaxUDPPayload() -> getMaxUDPPayload
    262:263:void setDestination(java.net.InetSocketAddress) -> setDestination
    418:482:java.lang.String toString() -> toString
javax.jmdns.impl.DNSOutgoing$MessageOutputStream -> javax.jmdns.impl.DNSOutgoing$MessageOutputStream:
    37:38:void <init>(int,javax.jmdns.impl.DNSOutgoing) -> <init>
    41:44:void <init>(int,javax.jmdns.impl.DNSOutgoing,int) -> <init>
    150:161:int indexOfSeparator(java.lang.String) -> indexOfSeparator
    47:48:void writeByte(int) -> writeByte
    57:60:void writeBytes(byte[]) -> writeBytes
    63:66:void writeBytes(byte[],int,int) -> writeBytes
    74:76:void writeInt(int) -> writeInt
    114:115:void writeName(java.lang.String) -> writeName
    118:146:void writeName(java.lang.String,boolean) -> writeName
    166:169:void writeQuestion(javax.jmdns.impl.DNSQuestion) -> writeQuestion
    172:184:void writeRecord(javax.jmdns.impl.DNSRecord,long) -> writeRecord
    69:71:void writeShort(int) -> writeShort
    80:111:void writeUTF(java.lang.String,int,int) -> writeUTF
javax.jmdns.impl.DNSQuestion -> javax.jmdns.impl.DNSQuestion:
    25:25:void <clinit>() -> <clinit>
    221:222:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    277:277:void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> addAnswers
    280:287:void addAnswersForServiceInfo(javax.jmdns.impl.JmDNSImpl,java.util.Set,javax.jmdns.impl.ServiceInfoImpl) -> addAnswersForServiceInfo
    264:264:boolean answeredBy(javax.jmdns.impl.DNSEntry) -> answeredBy
    315:315:boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> iAmTheOnlyOne
    304:304:boolean isExpired(long) -> isExpired
    238:256:javax.jmdns.impl.DNSQuestion newQuestion(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> newQuestion
    325:325:void toString(java.lang.StringBuilder) -> toString
javax.jmdns.impl.DNSQuestion$1 -> javax.jmdns.impl.DNSQuestion$1:
    238:238:void <clinit>() -> <clinit>
javax.jmdns.impl.DNSQuestion$AllRecords -> javax.jmdns.impl.DNSQuestion$AllRecords:
    183:184:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    194:210:void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> addAnswers
    214:215:boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> iAmTheOnlyOne
    189:189:boolean isSameType(javax.jmdns.impl.DNSEntry) -> isSameType
javax.jmdns.impl.DNSQuestion$DNS4Address -> javax.jmdns.impl.DNSQuestion$DNS4Address:
    32:33:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    37:41:void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> addAnswers
    45:46:boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> iAmTheOnlyOne
javax.jmdns.impl.DNSQuestion$DNS6Address -> javax.jmdns.impl.DNSQuestion$DNS6Address:
    56:57:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    61:65:void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> addAnswers
    69:70:boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> iAmTheOnlyOne
javax.jmdns.impl.DNSQuestion$HostInformation -> javax.jmdns.impl.DNSQuestion$HostInformation:
    80:81:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
javax.jmdns.impl.DNSQuestion$Pointer -> javax.jmdns.impl.DNSQuestion$Pointer:
    89:90:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    95:119:void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> addAnswers
javax.jmdns.impl.DNSQuestion$Service -> javax.jmdns.impl.DNSQuestion$Service:
    128:129:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    133:147:void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> addAnswers
    151:152:boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> iAmTheOnlyOne
javax.jmdns.impl.DNSQuestion$Text -> javax.jmdns.impl.DNSQuestion$Text:
    162:163:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean) -> <init>
    167:168:void addAnswers(javax.jmdns.impl.JmDNSImpl,java.util.Set) -> addAnswers
    172:173:boolean iAmTheOnlyOne(javax.jmdns.impl.JmDNSImpl) -> iAmTheOnlyOne
javax.jmdns.impl.DNSRecord -> javax.jmdns.impl.DNSRecord:
    37:37:void <clinit>() -> <clinit>
    53:58:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean,int) -> <init>
    66:66:boolean equals(java.lang.Object) -> equals
    1085:1085:long getCreated() -> getCreated
    133:133:long getExpirationTime(int) -> getExpirationTime
    1062:1062:java.net.InetAddress getRecordSource() -> getRecordSource
    140:140:int getRemainingTTL(long) -> getRemainingTTL
    1036:1036:javax.jmdns.ServiceInfo getServiceInfo() -> getServiceInfo
    1081:1081:int getTTL() -> getTTL
    176:180:void incrementRefreshPercentage() -> incrementRefreshPercentage
    149:149:boolean isExpired(long) -> isExpired
    158:158:boolean isStale(long) -> isStale
    169:169:boolean isStaleAndShouldBeRefreshed(long) -> isStaleAndShouldBeRefreshed
    186:189:void resetTTL(javax.jmdns.impl.DNSRecord) -> resetTTL
    78:78:boolean sameType(javax.jmdns.impl.DNSRecord) -> sameType
    1058:1059:void setRecordSource(java.net.InetAddress) -> setRecordSource
    195:197:void setWillExpireSoon(long) -> setWillExpireSoon
    105:114:boolean suppressedBy(javax.jmdns.impl.DNSIncoming) -> suppressedBy
    122:125:boolean suppressedBy(javax.jmdns.impl.DNSRecord) -> suppressedBy
    1071:1074:void toString(java.lang.StringBuilder) -> toString
javax.jmdns.impl.DNSRecord$Address -> javax.jmdns.impl.DNSRecord$Address:
    295:295:void <clinit>() -> <clinit>
    300:302:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.net.InetAddress) -> <init>
    305:311:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,byte[]) -> <init>
    347:347:java.net.InetAddress getAddress() -> getAddress
    443:445:javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> getServiceEvent
    432:434:javax.jmdns.ServiceInfo getServiceInfo(boolean) -> getServiceInfo
    367:396:boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> handleQuery
    404:418:boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> handleResponse
    343:343:boolean isSingleValued() -> isSingleValued
    321:321:boolean sameName(javax.jmdns.impl.DNSRecord) -> sameName
    327:337:boolean sameValue(javax.jmdns.impl.DNSRecord) -> sameValue
    355:360:void toByteArray(java.io.DataOutputStream) -> toByteArray
    454:458:void toString(java.lang.StringBuilder) -> toString
javax.jmdns.impl.DNSRecord$HostInformation -> javax.jmdns.impl.DNSRecord$HostInformation:
    916:919:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.lang.String,java.lang.String) -> <init>
    1004:1006:javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> getServiceEvent
    992:995:javax.jmdns.ServiceInfo getServiceInfo(boolean) -> getServiceInfo
    936:936:boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> handleQuery
    945:945:boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> handleResponse
    973:973:boolean isSingleValued() -> isSingleValued
    954:964:boolean sameValue(javax.jmdns.impl.DNSRecord) -> sameValue
    1015:1019:void toString(java.lang.StringBuilder) -> toString
    982:984:void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> write
javax.jmdns.impl.DNSRecord$IPv4Address -> javax.jmdns.impl.DNSRecord$IPv4Address:
    207:208:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.net.InetAddress) -> <init>
    211:212:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,byte[]) -> <init>
    239:241:javax.jmdns.ServiceInfo getServiceInfo(boolean) -> getServiceInfo
    216:230:void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> write
javax.jmdns.impl.DNSRecord$IPv6Address -> javax.jmdns.impl.DNSRecord$IPv6Address:
    249:250:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.net.InetAddress) -> <init>
    253:254:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,byte[]) -> <init>
    284:286:javax.jmdns.ServiceInfo getServiceInfo(boolean) -> getServiceInfo
    258:275:void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> write
javax.jmdns.impl.DNSRecord$Pointer -> javax.jmdns.impl.DNSRecord$Pointer:
    470:472:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,java.lang.String) -> <init>
    520:520:java.lang.String getAlias() -> getAlias
    555:559:javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> getServiceEvent
    534:546:javax.jmdns.ServiceInfo getServiceInfo(boolean) -> getServiceInfo
    509:509:boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> handleQuery
    516:516:boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> handleResponse
    480:480:boolean isSameEntry(javax.jmdns.impl.DNSEntry) -> isSameEntry
    502:502:boolean isSingleValued() -> isSingleValued
    490:497:boolean sameValue(javax.jmdns.impl.DNSRecord) -> sameValue
    568:572:void toString(java.lang.StringBuilder) -> toString
    485:486:void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> write
javax.jmdns.impl.DNSRecord$Service -> javax.jmdns.impl.DNSRecord$Service:
    693:693:void <clinit>() -> <clinit>
    700:705:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,int,int,int,java.lang.String) -> <init>
    759:759:int getPort() -> getPort
    745:745:int getPriority() -> getPriority
    738:738:java.lang.String getServer() -> getServer
    873:885:javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> getServiceEvent
    864:864:javax.jmdns.ServiceInfo getServiceInfo(boolean) -> getServiceInfo
    752:752:int getWeight() -> getWeight
    778:823:boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> handleQuery
    828:843:boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> handleResponse
    773:773:boolean isSingleValued() -> isSingleValued
    764:768:boolean sameValue(javax.jmdns.impl.DNSRecord) -> sameValue
    726:735:void toByteArray(java.io.DataOutputStream) -> toByteArray
    895:899:void toString(java.lang.StringBuilder) -> toString
    709:722:void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> write
javax.jmdns.impl.DNSRecord$Text -> javax.jmdns.impl.DNSRecord$Text:
    581:583:void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordClass,boolean,int,byte[]) -> <init>
    659:661:javax.jmdns.ServiceEvent getServiceEvent(javax.jmdns.impl.JmDNSImpl) -> getServiceEvent
    650:650:javax.jmdns.ServiceInfo getServiceInfo(boolean) -> getServiceInfo
    589:589:byte[] getText() -> getText
    626:626:boolean handleQuery(javax.jmdns.impl.JmDNSImpl,long) -> handleQuery
    636:636:boolean handleResponse(javax.jmdns.impl.JmDNSImpl) -> handleResponse
    619:619:boolean isSingleValued() -> isSingleValued
    599:614:boolean sameValue(javax.jmdns.impl.DNSRecord) -> sameValue
    670:685:void toString(java.lang.StringBuilder) -> toString
    594:595:void write(javax.jmdns.impl.DNSOutgoing$MessageOutputStream) -> write
javax.jmdns.impl.DNSStatefulObject$DNSStatefulObjectSemaphore -> javax.jmdns.impl.DNSStatefulObject$DNSStatefulObjectSemaphore:
    35:35:void <clinit>() -> <clinit>
    46:49:void <init>(java.lang.String) -> <init>
    77:82:void signalEvent() -> signalEvent
    86:101:java.lang.String toString() -> toString
    58:71:void waitForEvent(long) -> waitForEvent
javax.jmdns.impl.DNSStatefulObject$DefaultImplementation -> javax.jmdns.impl.DNSStatefulObject$DefaultImplementation:
    107:107:void <clinit>() -> <clinit>
    122:128:void <init>() -> <init>
    219:232:boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> advanceState
    147:157:void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> associateWithTask
    260:273:boolean cancelState() -> cancelState
    135:135:javax.jmdns.impl.JmDNSImpl getDns() -> getDns
    334:334:boolean isAnnounced() -> isAnnounced
    326:326:boolean isAnnouncing() -> isAnnouncing
    181:186:boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> isAssociatedWithTask
    350:350:boolean isCanceled() -> isCanceled
    342:342:boolean isCanceling() -> isCanceling
    366:366:boolean isClosed() -> isClosed
    358:358:boolean isClosing() -> isClosing
    318:318:boolean isProbing() -> isProbing
    302:310:boolean recoverState() -> recoverState
    164:174:void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> removeAssociationWithTask
    240:252:boolean revertState() -> revertState
    139:140:void setDns(javax.jmdns.impl.JmDNSImpl) -> setDns
    198:212:void setState(javax.jmdns.impl.constants.DNSState) -> setState
    190:191:void setTask(javax.jmdns.impl.tasks.DNSTask) -> setTask
    423:425:java.lang.String toString() -> toString
    404:414:boolean waitForCanceled(long) -> waitForCanceled
    370:370:boolean willCancel() -> willCancel
    374:374:boolean willClose() -> willClose
javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl -> javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl:
    275:279:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    314:315:void cancelStateTimer() -> cancelStateTimer
    305:306:void cancelTimer() -> cancelTimer
    296:297:void purgeStateTimer() -> purgeStateTimer
    287:288:void purgeTimer() -> purgeTimer
    332:333:void startAnnouncer() -> startAnnouncer
    350:351:void startCanceler() -> startCanceler
    323:324:void startProber() -> startProber
    359:360:void startReaper() -> startReaper
    341:342:void startRenewer() -> startRenewer
    395:396:void startResponder(javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int) -> startResponder
    368:369:void startServiceInfoResolver(javax.jmdns.impl.ServiceInfoImpl) -> startServiceInfoResolver
    386:387:void startServiceResolver(java.lang.String) -> startServiceResolver
    377:378:void startTypeResolver() -> startTypeResolver
javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer -> javax.jmdns.impl.DNSTaskStarter$DNSTaskStarterImpl$StarterTimer:
    189:191:void <init>(java.lang.String,boolean) -> <init>
    206:210:void cancel() -> cancel
    217:220:void schedule(java.util.TimerTask,long) -> schedule
    227:230:void schedule(java.util.TimerTask,java.util.Date) -> schedule
    237:240:void schedule(java.util.TimerTask,long,long) -> schedule
    247:250:void schedule(java.util.TimerTask,java.util.Date,long) -> schedule
    257:260:void scheduleAtFixedRate(java.util.TimerTask,long,long) -> scheduleAtFixedRate
    267:270:void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long) -> scheduleAtFixedRate
javax.jmdns.impl.DNSTaskStarter$Factory -> javax.jmdns.impl.DNSTaskStarter$Factory:
    59:59:void <clinit>() -> <clinit>
    62:64:void <init>() -> <init>
    144:145:void disposeStarter(javax.jmdns.impl.JmDNSImpl) -> disposeStarter
    111:118:javax.jmdns.impl.DNSTaskStarter$Factory getInstance() -> getInstance
    129:134:javax.jmdns.impl.DNSTaskStarter getStarter(javax.jmdns.impl.JmDNSImpl) -> getStarter
    97:102:javax.jmdns.impl.DNSTaskStarter newDNSTaskStarter(javax.jmdns.impl.JmDNSImpl) -> newDNSTaskStarter
javax.jmdns.impl.HostInfo -> javax.jmdns.impl.HostInfo:
    33:33:void <clinit>() -> <clinit>
    122:133:void <init>(java.net.InetAddress,java.lang.String,javax.jmdns.impl.JmDNSImpl) -> <init>
    299:299:boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> advanceState
    274:283:java.util.Collection answers(javax.jmdns.impl.constants.DNSRecordClass,boolean,int) -> answers
    323:324:void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> associateWithTask
    339:339:boolean cancelState() -> cancelState
    162:166:boolean conflictWithRecord(javax.jmdns.impl.DNSRecord$Address) -> conflictWithRecord
    219:222:javax.jmdns.impl.DNSRecord$Address getDNS4AddressRecord(boolean,int) -> getDNS4AddressRecord
    245:248:javax.jmdns.impl.DNSRecord$Pointer getDNS4ReverseAddressRecord(boolean,int) -> getDNS4ReverseAddressRecord
    226:229:javax.jmdns.impl.DNSRecord$Address getDNS6AddressRecord(boolean,int) -> getDNS6AddressRecord
    252:255:javax.jmdns.impl.DNSRecord$Pointer getDNS6ReverseAddressRecord(boolean,int) -> getDNS6ReverseAddressRecord
    207:215:javax.jmdns.impl.DNSRecord$Address getDNSAddressRecord(javax.jmdns.impl.constants.DNSRecordType,boolean,int) -> getDNSAddressRecord
    233:241:javax.jmdns.impl.DNSRecord$Pointer getDNSReverseAddressRecord(javax.jmdns.impl.constants.DNSRecordType,boolean,int) -> getDNSReverseAddressRecord
    144:147:java.net.Inet4Address getInet4Address() -> getInet4Address
    151:154:java.net.Inet6Address getInet6Address() -> getInet6Address
    140:140:java.net.InetAddress getInetAddress() -> getInetAddress
    158:158:java.net.NetworkInterface getInterface() -> getInterface
    136:136:java.lang.String getName() -> getName
    169:171:java.lang.String incrementHostName() -> incrementHostName
    379:379:boolean isAnnounced() -> isAnnounced
    331:331:boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> isAssociatedWithTask
    395:395:boolean isCanceled() -> isCanceled
    387:387:boolean isCanceling() -> isCanceling
    411:411:boolean isClosed() -> isClosed
    403:403:boolean isClosing() -> isClosing
    363:363:boolean isProbing() -> isProbing
    115:117:java.net.InetAddress loopbackAddress() -> loopbackAddress
    67:110:javax.jmdns.impl.HostInfo newHostInfo(java.net.InetAddress,javax.jmdns.impl.JmDNSImpl,java.lang.String) -> newHostInfo
    355:355:boolean recoverState() -> recoverState
    307:308:void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> removeAssociationWithTask
    315:315:boolean revertState() -> revertState
    175:203:boolean shouldIgnorePacket(java.net.DatagramPacket) -> shouldIgnorePacket
    260:270:java.lang.String toString() -> toString
    427:431:boolean waitForCanceled(long) -> waitForCanceled
javax.jmdns.impl.HostInfo$1 -> javax.jmdns.impl.HostInfo$1:
    207:207:void <clinit>() -> <clinit>
javax.jmdns.impl.HostInfo$HostInfoState -> javax.jmdns.impl.HostInfo$HostInfoState:
    51:53:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
javax.jmdns.impl.JmDNSImpl -> javax.jmdns.impl.JmDNSImpl:
    61:340:void <clinit>() -> <clinit>
    399:400:void <init>(java.net.InetAddress,java.lang.String) -> <init>
    323:1804:void <init>(java.net.InetAddress,java.lang.String,long) -> <init>
    1842:1892:void __recover() -> __recover
    1531:1543:java.util.List aRecordsLast(java.util.List) -> aRecordsLast
    1211:1225:void addListener(javax.jmdns.impl.DNSListener,javax.jmdns.impl.DNSQuestion) -> addListener
    949:950:void addServiceListener(java.lang.String,javax.jmdns.ServiceListener) -> addServiceListener
    953:991:void addServiceListener(java.lang.String,javax.jmdns.ServiceListener,boolean) -> addServiceListener
    924:933:void addServiceTypeListener(javax.jmdns.ServiceTypeListener) -> addServiceTypeListener
    544:544:boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> advanceState
    592:593:void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> associateWithTask
    560:560:boolean cancelState() -> cancelState
    1703:1704:void cancelStateTimer() -> cancelStateTimer
    1694:1695:void cancelTimer() -> cancelTimer
    1906:1931:void cleanCache() -> cleanCache
    1938:1983:void close() -> close
    501:536:void closeMulticastSocket() -> closeMulticastSocket
    2121:2130:void disposeServiceCollectors() -> disposeServiceCollectors
    689:689:javax.jmdns.impl.DNSCache getCache() -> getCache
    2350:2350:javax.jmdns.JmDNS$Delegate getDelegate() -> getDelegate
    584:584:javax.jmdns.impl.JmDNSImpl getDns() -> getDns
    2345:2345:java.net.InetAddress getGroup() -> getGroup
    722:722:java.net.InetAddress getInetAddress() -> getInetAddress
    2301:2301:long getLastThrottleIncrement() -> getLastThrottleIncrement
    714:714:javax.jmdns.impl.HostInfo getLocalHost() -> getLocalHost
    697:697:java.lang.String getName() -> getName
    2313:2313:java.util.Random getRandom() -> getRandom
    747:747:javax.jmdns.ServiceInfo getServiceInfo(java.lang.String,java.lang.String,long) -> getServiceInfo
    763:765:javax.jmdns.ServiceInfo getServiceInfo(java.lang.String,java.lang.String,boolean,long) -> getServiceInfo
    786:842:javax.jmdns.impl.ServiceInfoImpl getServiceInfoFromCache(java.lang.String,java.lang.String,java.lang.String,boolean) -> getServiceInfoFromCache
    2337:2337:java.util.Map getServiceTypes() -> getServiceTypes
    2293:2293:java.util.Map getServices() -> getServices
    2341:2341:java.net.MulticastSocket getSocket() -> getSocket
    2309:2309:int getThrottle() -> getThrottle
    1556:1589:void handleQuery(javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int) -> handleQuery
    1367:1464:void handleRecord(javax.jmdns.impl.DNSRecord,long) -> handleRecord
    1482:1503:void handleResponse(javax.jmdns.impl.DNSIncoming) -> handleResponse
    898:917:void handleServiceResolved(javax.jmdns.ServiceEvent) -> handleServiceResolved
    2317:2318:void ioLock() -> ioLock
    2321:2322:void ioUnlock() -> ioUnlock
    632:632:boolean isAnnounced() -> isAnnounced
    608:608:boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> isAssociatedWithTask
    648:648:boolean isCanceled() -> isCanceled
    640:640:boolean isCanceling() -> isCanceling
    664:664:boolean isClosed() -> isClosed
    656:656:boolean isClosing() -> isClosing
    1473:1473:boolean isOlderThanOneSecond(javax.jmdns.impl.DNSRecord,long) -> isOlderThanOneSecond
    616:616:boolean isProbing() -> isProbing
    1165:1199:boolean makeServiceNameUnique(javax.jmdns.impl.ServiceInfoImpl) -> makeServiceNameUnique
    462:496:void openMulticastSocket(javax.jmdns.impl.HostInfo) -> openMulticastSocket
    1685:1686:void purgeStateTimer() -> purgeStateTimer
    1676:1677:void purgeTimer() -> purgeTimer
    1810:1837:void recover() -> recover
    576:576:boolean recoverState() -> recoverState
    1016:1046:void registerService(javax.jmdns.ServiceInfo) -> registerService
    1102:1156:boolean registerServiceType(java.lang.String) -> registerServiceType
    600:601:void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> removeAssociationWithTask
    1234:1235:void removeListener(javax.jmdns.impl.DNSListener) -> removeListener
    1357:1364:void removeObsoleteDnsListener(javax.jmdns.ServiceEvent) -> removeObsoleteDnsListener
    998:1009:void removeServiceListener(java.lang.String,javax.jmdns.ServiceListener) -> removeServiceListener
    1244:1248:void renewServiceCollector(java.lang.String) -> renewServiceCollector
    893:895:void requestServiceInfo(java.lang.String,java.lang.String,boolean,long) -> requestServiceInfo
    769:781:javax.jmdns.impl.ServiceInfoImpl resolveServiceInfo(java.lang.String,java.lang.String,java.lang.String,boolean) -> resolveServiceInfo
    1592:1600:void respondToQuery(javax.jmdns.impl.DNSIncoming) -> respondToQuery
    552:552:boolean revertState() -> revertState
    1638:1668:void send(javax.jmdns.impl.DNSOutgoing) -> send
    2297:2298:void setLastThrottleIncrement(long) -> setLastThrottleIncrement
    2305:2306:void setThrottle(int) -> setThrottle
    447:459:void start(java.util.Collection) -> start
    1721:1722:void startAnnouncer() -> startAnnouncer
    1739:1740:void startCanceler() -> startCanceler
    1712:1713:void startProber() -> startProber
    1748:1749:void startReaper() -> startReaper
    1730:1731:void startRenewer() -> startRenewer
    1784:1785:void startResponder(javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int) -> startResponder
    1757:1758:void startServiceInfoResolver(javax.jmdns.impl.ServiceInfoImpl) -> startServiceInfoResolver
    1775:1776:void startServiceResolver(java.lang.String) -> startServiceResolver
    1766:1767:void startTypeResolver() -> startTypeResolver
    1999:2037:java.lang.String toString() -> toString
    2284:2289:java.lang.String toUnqualifiedName(java.lang.String,java.lang.String) -> toUnqualifiedName
    1072:1095:void unregisterAllServices() -> unregisterAllServices
    1262:1354:void updateRecord(long,javax.jmdns.impl.DNSRecord,javax.jmdns.impl.JmDNSImpl$Operation) -> updateRecord
    680:680:boolean waitForCanceled(long) -> waitForCanceled
    846:862:void waitForInfoData(javax.jmdns.ServiceInfo,long) -> waitForInfoData
javax.jmdns.impl.JmDNSImpl$1 -> javax.jmdns.impl.JmDNSImpl$1:
    907:907:void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ListenerStatus$ServiceListenerStatus,javax.jmdns.ServiceEvent) -> <init>
    911:912:void run() -> run
javax.jmdns.impl.JmDNSImpl$2 -> javax.jmdns.impl.JmDNSImpl$2:
    1124:1124:void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus,javax.jmdns.ServiceEvent) -> <init>
    1128:1129:void run() -> run
javax.jmdns.impl.JmDNSImpl$3 -> javax.jmdns.impl.JmDNSImpl$3:
    1144:1144:void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus,javax.jmdns.ServiceEvent) -> <init>
    1148:1149:void run() -> run
javax.jmdns.impl.JmDNSImpl$4 -> javax.jmdns.impl.JmDNSImpl$4:
    1324:1324:void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ListenerStatus$ServiceListenerStatus,javax.jmdns.ServiceEvent) -> <init>
    1328:1329:void run() -> run
javax.jmdns.impl.JmDNSImpl$5 -> javax.jmdns.impl.JmDNSImpl$5:
    1339:1339:void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ListenerStatus$ServiceListenerStatus,javax.jmdns.ServiceEvent) -> <init>
    1343:1344:void run() -> run
javax.jmdns.impl.JmDNSImpl$6 -> javax.jmdns.impl.JmDNSImpl$6:
    1825:1825:void <init>(javax.jmdns.impl.JmDNSImpl,java.lang.String) -> <init>
    1831:1832:void run() -> run
javax.jmdns.impl.JmDNSImpl$7 -> javax.jmdns.impl.JmDNSImpl$7:
    1318:1318:void <clinit>() -> <clinit>
javax.jmdns.impl.JmDNSImpl$Operation -> javax.jmdns.impl.JmDNSImpl$Operation:
    63:64:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    63:63:javax.jmdns.impl.JmDNSImpl$Operation valueOf(java.lang.String) -> valueOf
    63:63:javax.jmdns.impl.JmDNSImpl$Operation[] values() -> values
javax.jmdns.impl.JmDNSImpl$ServiceCollector -> javax.jmdns.impl.JmDNSImpl$ServiceCollector:
    2161:2166:void <init>(java.lang.String) -> <init>
    2176:2190:void serviceAdded(javax.jmdns.ServiceEvent) -> serviceAdded
    2200:2204:void serviceRemoved(javax.jmdns.ServiceEvent) -> serviceRemoved
    2214:2218:void serviceResolved(javax.jmdns.ServiceEvent) -> serviceResolved
    2253:2278:java.lang.String toString() -> toString
javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry -> javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry:
    207:210:void <init>(java.lang.String) -> <init>
    251:255:boolean add(java.lang.String) -> add
    118:118:java.lang.Object clone() -> clone
    273:277:javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry clone() -> clone
    239:239:boolean contains(java.lang.String) -> contains
    227:227:java.util.Set entrySet() -> entrySet
    218:218:java.lang.String getType() -> getType
    286:296:java.lang.String toString() -> toString
javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry$SubTypeEntry -> javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry$SubTypeEntry:
    132:135:void <init>(java.lang.String) -> <init>
    124:124:java.lang.Object clone() -> clone
    193:193:javax.jmdns.impl.JmDNSImpl$ServiceTypeEntry$SubTypeEntry clone() -> clone
    172:175:boolean equals(java.lang.Object) -> equals
    124:124:java.lang.Object getKey() -> getKey
    142:142:java.lang.String getKey() -> getKey
    124:124:java.lang.Object getValue() -> getValue
    150:150:java.lang.String getValue() -> getValue
    183:183:int hashCode() -> hashCode
    124:124:java.lang.Object setValue(java.lang.Object) -> setValue
    164:164:java.lang.String setValue(java.lang.String) -> setValue
    201:201:java.lang.String toString() -> toString
javax.jmdns.impl.JmmDNSImpl -> javax.jmdns.impl.JmmDNSImpl:
    49:49:void <clinit>() -> <clinit>
    92:105:void <init>() -> <init>
    378:394:void addServiceListener(java.lang.String,javax.jmdns.ServiceListener) -> addServiceListener
    113:152:void close() -> close
    790:790:javax.jmdns.JmDNS createJmDnsInstance(java.net.InetAddress) -> createJmDnsInstance
    199:201:javax.jmdns.JmDNS[] getDNS() -> getDNS
    233:233:javax.jmdns.ServiceInfo[] getServiceInfos(java.lang.String,java.lang.String,long) -> getServiceInfos
    252:298:javax.jmdns.ServiceInfo[] getServiceInfos(java.lang.String,java.lang.String,boolean,long) -> getServiceInfos
    627:698:void inetAddressAdded(javax.jmdns.NetworkTopologyEvent) -> inetAddressAdded
    706:731:void inetAddressRemoved(javax.jmdns.NetworkTopologyEvent) -> inetAddressRemoved
    618:618:javax.jmdns.NetworkTopologyListener[] networkListeners() -> networkListeners
    325:326:void requestServiceInfo(java.lang.String,java.lang.String,long) -> requestServiceInfo
    335:346:void requestServiceInfo(java.lang.String,java.lang.String,boolean,long) -> requestServiceInfo
javax.jmdns.impl.JmmDNSImpl$1 -> javax.jmdns.impl.JmmDNSImpl$1:
    122:122:void <init>(javax.jmdns.impl.JmmDNSImpl,javax.jmdns.JmDNS) -> <init>
    129:133:void run() -> run
javax.jmdns.impl.JmmDNSImpl$2 -> javax.jmdns.impl.JmmDNSImpl$2:
    257:257:void <init>(javax.jmdns.impl.JmmDNSImpl,javax.jmdns.JmDNS,java.lang.String,java.lang.String,boolean,long) -> <init>
    257:257:java.lang.Object call() -> call
    261:261:javax.jmdns.ServiceInfo call() -> call
javax.jmdns.impl.JmmDNSImpl$3 -> javax.jmdns.impl.JmmDNSImpl$3:
    336:336:void <init>(javax.jmdns.impl.JmmDNSImpl,javax.jmdns.JmDNS,java.lang.String,java.lang.String,boolean,long) -> <init>
    342:343:void run() -> run
javax.jmdns.impl.JmmDNSImpl$5 -> javax.jmdns.impl.JmmDNSImpl$5:
    639:639:void <init>(javax.jmdns.impl.JmmDNSImpl,java.util.Collection,javax.jmdns.JmDNS,java.util.Collection,java.util.Collection,java.util.Map) -> <init>
    646:675:void run() -> run
javax.jmdns.impl.JmmDNSImpl$6 -> javax.jmdns.impl.JmmDNSImpl$6:
    679:679:void <init>(javax.jmdns.impl.JmmDNSImpl,javax.jmdns.NetworkTopologyListener,javax.jmdns.NetworkTopologyEvent) -> <init>
    685:686:void run() -> run
javax.jmdns.impl.JmmDNSImpl$7 -> javax.jmdns.impl.JmmDNSImpl$7:
    715:715:void <init>(javax.jmdns.impl.JmmDNSImpl,javax.jmdns.NetworkTopologyListener,javax.jmdns.NetworkTopologyEvent) -> <init>
    721:722:void run() -> run
javax.jmdns.impl.JmmDNSImpl$NetworkChecker -> javax.jmdns.impl.JmmDNSImpl$NetworkChecker:
    738:738:void <clinit>() -> <clinit>
    747:751:void <init>(javax.jmdns.NetworkTopologyListener,javax.jmdns.NetworkTopologyDiscovery) -> <init>
    765:784:void run() -> run
    755:757:void start(java.util.Timer) -> start
javax.jmdns.impl.ListenerStatus -> javax.jmdns.impl.ListenerStatus:
    244:247:void <init>(java.util.EventListener,boolean) -> <init>
    280:280:boolean equals(java.lang.Object) -> equals
    253:253:java.util.EventListener getListener() -> getListener
    271:271:int hashCode() -> hashCode
    262:262:boolean isSynchronous() -> isSynchronous
    289:289:java.lang.String toString() -> toString
javax.jmdns.impl.ListenerStatus$ServiceListenerStatus -> javax.jmdns.impl.ListenerStatus$ServiceListenerStatus:
    29:29:void <clinit>() -> <clinit>
    40:42:void <init>(javax.jmdns.ServiceListener,boolean) -> <init>
    119:131:boolean _sameInfo(javax.jmdns.ServiceInfo,javax.jmdns.ServiceInfo) -> _sameInfo
    60:70:void serviceAdded(javax.jmdns.ServiceEvent) -> serviceAdded
    79:85:void serviceRemoved(javax.jmdns.ServiceEvent) -> serviceRemoved
    94:116:void serviceResolved(javax.jmdns.ServiceEvent) -> serviceResolved
    140:153:java.lang.String toString() -> toString
javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus -> javax.jmdns.impl.ListenerStatus$ServiceTypeListenerStatus:
    159:159:void <clinit>() -> <clinit>
    170:172:void <init>(javax.jmdns.ServiceTypeListener,boolean) -> <init>
    181:186:void serviceTypeAdded(javax.jmdns.ServiceEvent) -> serviceTypeAdded
    199:204:void subTypeForServiceTypeAdded(javax.jmdns.ServiceEvent) -> subTypeForServiceTypeAdded
    212:225:java.lang.String toString() -> toString
javax.jmdns.impl.NameRegister$1 -> javax.jmdns.impl.NameRegister$1:
    99:99:void <clinit>() -> <clinit>
javax.jmdns.impl.NameRegister$BaseRegister -> javax.jmdns.impl.NameRegister$BaseRegister:
    30:30:void <init>() -> <init>
    33:55:java.lang.String incrementNameWithDash(java.lang.String) -> incrementNameWithDash
    59:77:java.lang.String incrementNameWithParentesis(java.lang.String) -> incrementNameWithParentesis
javax.jmdns.impl.NameRegister$Factory -> javax.jmdns.impl.NameRegister$Factory:
    228:231:javax.jmdns.impl.NameRegister getRegistry() -> getRegistry
javax.jmdns.impl.NameRegister$NameType -> javax.jmdns.impl.NameRegister$NameType:
    19:27:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    19:19:javax.jmdns.impl.NameRegister$NameType valueOf(java.lang.String) -> valueOf
    19:19:javax.jmdns.impl.NameRegister$NameType[] values() -> values
javax.jmdns.impl.NameRegister$UniqueNamePerInterface -> javax.jmdns.impl.NameRegister$UniqueNamePerInterface:
    88:91:void <init>() -> <init>
    134:141:java.lang.String incrementName(java.net.InetAddress,java.lang.String,javax.jmdns.impl.NameRegister$NameType) -> incrementName
javax.jmdns.impl.NetworkTopologyDiscoveryImpl -> javax.jmdns.impl.NetworkTopologyDiscoveryImpl:
    24:24:void <clinit>() -> <clinit>
    30:31:void <init>() -> <init>
    39:55:java.net.InetAddress[] getInetAddresses() -> getInetAddresses
    83:97:boolean useInetAddress(java.net.NetworkInterface,java.net.InetAddress) -> useInetAddress
javax.jmdns.impl.NetworkTopologyEventImpl -> javax.jmdns.impl.NetworkTopologyEventImpl:
    33:35:void <init>(javax.jmdns.JmDNS,java.net.InetAddress) -> <init>
    38:40:void <init>(javax.jmdns.NetworkTopologyListener,java.net.InetAddress) -> <init>
    15:15:java.lang.Object clone() -> clone
    79:79:javax.jmdns.impl.NetworkTopologyEventImpl clone() -> clone
    48:48:javax.jmdns.JmDNS getDNS() -> getDNS
    57:57:java.net.InetAddress getInetAddress() -> getInetAddress
    62:70:java.lang.String toString() -> toString
javax.jmdns.impl.ServiceEventImpl -> javax.jmdns.impl.ServiceEventImpl:
    51:55:void <init>(javax.jmdns.impl.JmDNSImpl,java.lang.String,java.lang.String,javax.jmdns.ServiceInfo) -> <init>
    19:19:java.lang.Object clone() -> clone
    19:19:javax.jmdns.ServiceEvent clone() -> clone
    118:119:javax.jmdns.impl.ServiceEventImpl clone() -> clone
    63:63:javax.jmdns.JmDNS getDNS() -> getDNS
    109:109:javax.jmdns.ServiceInfo getInfo() -> getInfo
    81:81:java.lang.String getName() -> getName
    72:72:java.lang.String getType() -> getType
    90:100:java.lang.String toString() -> toString
javax.jmdns.impl.ServiceInfoImpl -> javax.jmdns.impl.ServiceInfoImpl:
    46:46:void <clinit>() -> <clinit>
    169:170:void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean,byte[]) -> <init>
    173:174:void <init>(java.util.Map,int,int,int,boolean,java.util.Map) -> <init>
    177:186:void <init>(java.util.Map,int,int,int,boolean,java.lang.String) -> <init>
    188:206:void <init>(java.util.Map,int,int,int,boolean,byte[]) -> <init>
    213:237:void <init>(javax.jmdns.ServiceInfo) -> <init>
    1214:1216:void _setText(byte[]) -> _setText
    430:431:void addAddress(java.net.Inet4Address) -> addAddress
    438:439:void addAddress(java.net.Inet6Address) -> addAddress
    928:928:boolean advanceState(javax.jmdns.impl.tasks.DNSTask) -> advanceState
    1175:1185:java.util.Collection answers(javax.jmdns.impl.constants.DNSRecordClass,boolean,int,javax.jmdns.impl.HostInfo) -> answers
    976:977:void associateWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> associateWithTask
    944:944:boolean cancelState() -> cancelState
    250:289:java.util.Map checkQualifiedNameMap(java.util.Map) -> checkQualifiedNameMap
    45:45:java.lang.Object clone() -> clone
    45:45:javax.jmdns.ServiceInfo clone() -> clone
    1103:1113:javax.jmdns.impl.ServiceInfoImpl clone() -> clone
    240:246:java.util.Map createQualifiedMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createQualifiedMap
    1072:1072:boolean equals(java.lang.Object) -> equals
    655:655:java.lang.String getApplication() -> getApplication
    1227:1227:javax.jmdns.impl.JmDNSImpl getDns() -> getDns
    663:663:java.lang.String getDomain() -> getDomain
    498:498:java.net.Inet4Address[] getInet4Addresses() -> getInet4Addresses
    507:507:java.net.Inet6Address[] getInet6Addresses() -> getInet6Addresses
    486:489:java.net.InetAddress[] getInetAddresses() -> getInetAddresses
    342:345:java.lang.String getKey() -> getKey
    334:334:java.lang.String getName() -> getName
    515:515:int getPort() -> getPort
    523:523:int getPriority() -> getPriority
    697:708:java.util.Map getProperties() -> getProperties
    671:671:java.lang.String getProtocol() -> getProtocol
    364:371:java.lang.String getQualifiedName() -> getQualifiedName
    687:694:java.util.Map getQualifiedNameMap() -> getQualifiedNameMap
    379:379:java.lang.String getServer() -> getServer
    679:679:java.lang.String getSubtype() -> getSubtype
    539:539:byte[] getTextBytes() -> getTextBytes
    314:317:java.lang.String getType() -> getType
    325:326:java.lang.String getTypeWithSubtype() -> getTypeWithSubtype
    531:531:int getWeight() -> getWeight
    788:824:boolean handleExpiredRecord(javax.jmdns.impl.DNSRecord) -> handleExpiredRecord
    837:903:boolean handleUpdateRecord(javax.jmdns.impl.DNSCache,long,javax.jmdns.impl.DNSRecord) -> handleUpdateRecord
    913:913:boolean hasData() -> hasData
    918:918:boolean hasInetAddress() -> hasInetAddress
    1273:1283:boolean hasSameAddresses(javax.jmdns.ServiceInfo) -> hasSameAddresses
    387:387:boolean hasServer() -> hasServer
    1064:1064:int hashCode() -> hashCode
    1008:1008:boolean isAnnounced() -> isAnnounced
    1000:1000:boolean isAnnouncing() -> isAnnouncing
    984:984:boolean isAssociatedWithTask(javax.jmdns.impl.tasks.DNSTask,javax.jmdns.impl.constants.DNSState) -> isAssociatedWithTask
    1235:1235:boolean isPersistent() -> isPersistent
    992:992:boolean isProbing() -> isProbing
    1253:1253:boolean needTextAnnouncing() -> needTextAnnouncing
    960:960:boolean recoverState() -> recoverState
    968:969:void removeAssociationWithTask(javax.jmdns.impl.tasks.DNSTask) -> removeAssociationWithTask
    293:306:java.lang.String removeSeparators(java.lang.String) -> removeSeparators
    936:936:boolean revertState() -> revertState
    1219:1220:void setDns(javax.jmdns.impl.JmDNSImpl) -> setDns
    355:357:void setName(java.lang.String) -> setName
    1243:1247:void setNeedTextAnnouncing(boolean) -> setNeedTextAnnouncing
    395:396:void setServer(java.lang.String) -> setServer
    1121:1161:java.lang.String toString() -> toString
    722:776:void updateRecord(javax.jmdns.impl.DNSCache,long,javax.jmdns.impl.DNSEntry) -> updateRecord
    1056:1056:boolean waitForCanceled(long) -> waitForCanceled
javax.jmdns.impl.ServiceInfoImpl$1 -> javax.jmdns.impl.ServiceInfoImpl$1:
    788:788:void <clinit>() -> <clinit>
javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState -> javax.jmdns.impl.ServiceInfoImpl$ServiceInfoState:
    87:89:void <init>(javax.jmdns.impl.ServiceInfoImpl) -> <init>
    114:115:void setDns(javax.jmdns.impl.JmDNSImpl) -> setDns
    93:110:void setTask(javax.jmdns.impl.tasks.DNSTask) -> setTask
javax.jmdns.impl.ServiceTypeDecoder -> javax.jmdns.impl.ServiceTypeDecoder:
    11:12:void <clinit>() -> <clinit>
    18:23:java.util.Map decodeQualifiedNameMap(java.lang.String,java.lang.String,java.lang.String) -> decodeQualifiedNameMap
    29:67:java.util.Map decodeQualifiedNameMapForType(java.lang.String) -> decodeQualifiedNameMapForType
    72:75:java.lang.String originalCase(java.lang.String,java.util.regex.Matcher,int) -> originalCase
javax.jmdns.impl.SocketListener -> javax.jmdns.impl.SocketListener:
    19:19:void <clinit>() -> <clinit>
    30:33:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    51:95:void run() -> run
    36:46:void sleepThread() -> sleepThread
javax.jmdns.impl.constants.DNSConstants -> javax.jmdns.impl.constants.DNSConstants:
    16:55:void <clinit>() -> <clinit>
javax.jmdns.impl.constants.DNSLabel -> javax.jmdns.impl.constants.DNSLabel:
    11:27:void <clinit>() -> <clinit>
    39:42:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    59:59:int indexValue() -> indexValue
    67:71:javax.jmdns.impl.constants.DNSLabel labelForByte(int) -> labelForByte
    79:79:int labelValue(int) -> labelValue
    84:84:java.lang.String toString() -> toString
    11:11:javax.jmdns.impl.constants.DNSLabel valueOf(java.lang.String) -> valueOf
    11:11:javax.jmdns.impl.constants.DNSLabel[] values() -> values
javax.jmdns.impl.constants.DNSOptionCode -> javax.jmdns.impl.constants.DNSOptionCode:
    11:32:void <clinit>() -> <clinit>
    38:41:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    58:58:int indexValue() -> indexValue
    66:70:javax.jmdns.impl.constants.DNSOptionCode resultCodeForFlags(int) -> resultCodeForFlags
    75:75:java.lang.String toString() -> toString
    11:11:javax.jmdns.impl.constants.DNSOptionCode valueOf(java.lang.String) -> valueOf
    11:11:javax.jmdns.impl.constants.DNSOptionCode[] values() -> values
javax.jmdns.impl.constants.DNSRecordClass -> javax.jmdns.impl.constants.DNSRecordClass:
    14:44:void <clinit>() -> <clinit>
    72:75:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    125:130:javax.jmdns.impl.constants.DNSRecordClass classForIndex(int) -> classForIndex
    92:92:int indexValue() -> indexValue
    102:102:boolean isUnique(int) -> isUnique
    135:135:java.lang.String toString() -> toString
    14:14:javax.jmdns.impl.constants.DNSRecordClass valueOf(java.lang.String) -> valueOf
    14:14:javax.jmdns.impl.constants.DNSRecordClass[] values() -> values
javax.jmdns.impl.constants.DNSRecordType -> javax.jmdns.impl.constants.DNSRecordType:
    14:252:void <clinit>() -> <clinit>
    258:261:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    278:278:int indexValue() -> indexValue
    310:310:java.lang.String toString() -> toString
    301:305:javax.jmdns.impl.constants.DNSRecordType typeForIndex(int) -> typeForIndex
    14:14:javax.jmdns.impl.constants.DNSRecordType valueOf(java.lang.String) -> valueOf
    14:14:javax.jmdns.impl.constants.DNSRecordType[] values() -> values
javax.jmdns.impl.constants.DNSResultCode -> javax.jmdns.impl.constants.DNSResultCode:
    11:59:void <clinit>() -> <clinit>
    101:104:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    121:121:int indexValue() -> indexValue
    137:141:javax.jmdns.impl.constants.DNSResultCode resultCodeForFlags(int,int) -> resultCodeForFlags
    146:146:java.lang.String toString() -> toString
    11:11:javax.jmdns.impl.constants.DNSResultCode valueOf(java.lang.String) -> valueOf
    11:11:javax.jmdns.impl.constants.DNSResultCode[] values() -> values
javax.jmdns.impl.constants.DNSState -> javax.jmdns.impl.constants.DNSState:
    12:61:void <clinit>() -> <clinit>
    73:76:void <init>(java.lang.String,int,java.lang.String,javax.jmdns.impl.constants.DNSState$StateClass) -> <init>
    91:118:javax.jmdns.impl.constants.DNSState advance() -> advance
    176:176:boolean isAnnounced() -> isAnnounced
    167:167:boolean isAnnouncing() -> isAnnouncing
    194:194:boolean isCanceled() -> isCanceled
    185:185:boolean isCanceling() -> isCanceling
    212:212:boolean isClosed() -> isClosed
    203:203:boolean isClosing() -> isClosing
    158:158:boolean isProbing() -> isProbing
    128:148:javax.jmdns.impl.constants.DNSState revert() -> revert
    80:80:java.lang.String toString() -> toString
    12:12:javax.jmdns.impl.constants.DNSState valueOf(java.lang.String) -> valueOf
    12:12:javax.jmdns.impl.constants.DNSState[] values() -> values
javax.jmdns.impl.constants.DNSState$1 -> javax.jmdns.impl.constants.DNSState$1:
    91:91:void <clinit>() -> <clinit>
javax.jmdns.impl.constants.DNSState$StateClass -> javax.jmdns.impl.constants.DNSState$StateClass:
    63:64:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    63:63:javax.jmdns.impl.constants.DNSState$StateClass valueOf(java.lang.String) -> valueOf
    63:63:javax.jmdns.impl.constants.DNSState$StateClass[] values() -> values
javax.jmdns.impl.tasks.DNSTask -> javax.jmdns.impl.tasks.DNSTask:
    31:33:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    111:127:javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSIncoming,javax.jmdns.impl.DNSRecord) -> addAnswer
    142:158:javax.jmdns.impl.DNSOutgoing addAnswer(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSRecord,long) -> addAnswer
    172:188:javax.jmdns.impl.DNSOutgoing addAuthoritativeAnswer(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSRecord) -> addAuthoritativeAnswer
    79:95:javax.jmdns.impl.DNSOutgoing addQuestion(javax.jmdns.impl.DNSOutgoing,javax.jmdns.impl.DNSQuestion) -> addQuestion
    41:41:javax.jmdns.impl.JmDNSImpl getDns() -> getDns
    65:65:java.lang.String toString() -> toString
javax.jmdns.impl.tasks.RecordReaper -> javax.jmdns.impl.tasks.RecordReaper:
    18:18:void <clinit>() -> <clinit>
    24:25:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    33:33:java.lang.String getName() -> getName
    49:57:void run() -> run
    42:45:void start(java.util.Timer) -> start
javax.jmdns.impl.tasks.Responder -> javax.jmdns.impl.tasks.Responder:
    26:26:void <clinit>() -> <clinit>
    45:50:void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.DNSIncoming,java.net.InetAddress,int) -> <init>
    58:58:java.lang.String getName() -> getName
    104:162:void run() -> run
    83:100:void start(java.util.Timer) -> start
    67:67:java.lang.String toString() -> toString
javax.jmdns.impl.tasks.resolver.DNSResolverTask -> javax.jmdns.impl.tasks.resolver.DNSResolverTask:
    20:20:void <clinit>() -> <clinit>
    25:32:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    61:84:void run() -> run
    49:52:void start(java.util.Timer) -> start
    40:40:java.lang.String toString() -> toString
javax.jmdns.impl.tasks.resolver.ServiceInfoResolver -> javax.jmdns.impl.tasks.resolver.ServiceInfoResolver:
    28:32:void <init>(javax.jmdns.impl.JmDNSImpl,javax.jmdns.impl.ServiceInfoImpl) -> <init>
    63:77:javax.jmdns.impl.DNSOutgoing addAnswers(javax.jmdns.impl.DNSOutgoing) -> addAnswers
    86:95:javax.jmdns.impl.DNSOutgoing addQuestions(javax.jmdns.impl.DNSOutgoing) -> addQuestions
    50:54:boolean cancel() -> cancel
    104:104:java.lang.String description() -> description
    40:40:java.lang.String getName() -> getName
javax.jmdns.impl.tasks.resolver.ServiceResolver -> javax.jmdns.impl.tasks.resolver.ServiceResolver:
    28:30:void <init>(javax.jmdns.impl.JmDNSImpl,java.lang.String) -> <init>
    47:54:javax.jmdns.impl.DNSOutgoing addAnswers(javax.jmdns.impl.DNSOutgoing) -> addAnswers
    63:66:javax.jmdns.impl.DNSOutgoing addQuestions(javax.jmdns.impl.DNSOutgoing) -> addQuestions
    75:75:java.lang.String description() -> description
    38:38:java.lang.String getName() -> getName
javax.jmdns.impl.tasks.resolver.TypeResolver -> javax.jmdns.impl.tasks.resolver.TypeResolver:
    31:32:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    49:54:javax.jmdns.impl.DNSOutgoing addAnswers(javax.jmdns.impl.DNSOutgoing) -> addAnswers
    63:63:javax.jmdns.impl.DNSOutgoing addQuestions(javax.jmdns.impl.DNSOutgoing) -> addQuestions
    72:72:java.lang.String description() -> description
    40:40:java.lang.String getName() -> getName
javax.jmdns.impl.tasks.state.Announcer -> javax.jmdns.impl.tasks.state.Announcer:
    26:30:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    136:142:void advanceTask() -> advanceTask
    101:105:javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForDNS
    114:118:javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForInfo
    63:65:boolean cancel() -> cancel
    83:83:boolean checkRunCondition() -> checkRunCondition
    92:92:javax.jmdns.impl.DNSOutgoing createOugoing() -> createOugoing
    38:38:java.lang.String getName() -> getName
    74:74:java.lang.String getTaskDescription() -> getTaskDescription
    127:128:void recoverTask(java.lang.Throwable) -> recoverTask
    56:59:void start(java.util.Timer) -> start
    47:47:java.lang.String toString() -> toString
javax.jmdns.impl.tasks.state.Canceler -> javax.jmdns.impl.tasks.state.Canceler:
    24:28:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    136:140:void advanceTask() -> advanceTask
    101:105:javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForDNS
    114:118:javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForInfo
    63:65:boolean cancel() -> cancel
    83:83:boolean checkRunCondition() -> checkRunCondition
    92:92:javax.jmdns.impl.DNSOutgoing createOugoing() -> createOugoing
    36:36:java.lang.String getName() -> getName
    74:74:java.lang.String getTaskDescription() -> getTaskDescription
    127:128:void recoverTask(java.lang.Throwable) -> recoverTask
    54:55:void start(java.util.Timer) -> start
    45:45:java.lang.String toString() -> toString
javax.jmdns.impl.tasks.state.DNSStateTask -> javax.jmdns.impl.tasks.state.DNSStateTask:
    25:32:void <clinit>() -> <clinit>
    37:61:void <init>(javax.jmdns.impl.JmDNSImpl,int) -> <init>
    160:167:void advanceObjectsState(java.util.List) -> advanceObjectsState
    77:83:void associate(javax.jmdns.impl.constants.DNSState) -> associate
    42:42:int defaultTTL() -> defaultTTL
    67:67:int getTTL() -> getTTL
    177:177:javax.jmdns.impl.constants.DNSState getTaskState() -> getTaskState
    90:98:void removeAssociation() -> removeAssociation
    102:149:void run() -> run
    185:186:void setTaskState(javax.jmdns.impl.constants.DNSState) -> setTaskState
javax.jmdns.impl.tasks.state.Prober -> javax.jmdns.impl.tasks.state.Prober:
    29:33:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    151:157:void advanceTask() -> advanceTask
    114:119:javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForDNS
    128:133:javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForInfo
    76:78:boolean cancel() -> cancel
    96:96:boolean checkRunCondition() -> checkRunCondition
    105:105:javax.jmdns.impl.DNSOutgoing createOugoing() -> createOugoing
    41:41:java.lang.String getName() -> getName
    87:87:java.lang.String getTaskDescription() -> getTaskDescription
    142:143:void recoverTask(java.lang.Throwable) -> recoverTask
    59:72:void start(java.util.Timer) -> start
    50:50:java.lang.String toString() -> toString
javax.jmdns.impl.tasks.state.Renewer -> javax.jmdns.impl.tasks.state.Renewer:
    24:28:void <init>(javax.jmdns.impl.JmDNSImpl) -> <init>
    134:138:void advanceTask() -> advanceTask
    99:103:javax.jmdns.impl.DNSOutgoing buildOutgoingForDNS(javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForDNS
    112:116:javax.jmdns.impl.DNSOutgoing buildOutgoingForInfo(javax.jmdns.impl.ServiceInfoImpl,javax.jmdns.impl.DNSOutgoing) -> buildOutgoingForInfo
    61:63:boolean cancel() -> cancel
    81:81:boolean checkRunCondition() -> checkRunCondition
    90:90:javax.jmdns.impl.DNSOutgoing createOugoing() -> createOugoing
    36:36:java.lang.String getName() -> getName
    72:72:java.lang.String getTaskDescription() -> getTaskDescription
    125:126:void recoverTask(java.lang.Throwable) -> recoverTask
    54:57:void start(java.util.Timer) -> start
    45:45:java.lang.String toString() -> toString
javax.jmdns.impl.util.ByteWrangler -> javax.jmdns.impl.util.ByteWrangler:
    19:53:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    160:173:byte[] encodeText(java.lang.String) -> encodeText
    78:114:void readProperties(java.util.Map,byte[]) -> readProperties
    67:67:java.lang.String readUTF(byte[]) -> readUTF
    74:74:java.lang.String readUTF(byte[],int,int) -> readUTF
    117:156:byte[] textFromProperties(java.util.Map) -> textFromProperties
    59:61:void writeUTF(java.io.OutputStream,java.lang.String) -> writeUTF
javax.jmdns.impl.util.NamedThreadFactory -> javax.jmdns.impl.util.NamedThreadFactory:
    24:27:void <init>(java.lang.String) -> <init>
    31:33:java.lang.Thread newThread(java.lang.Runnable) -> newThread
okhttp3.Address -> okhttp3.Address:
    54:85:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    150:150:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    119:119:java.util.List connectionSpecs() -> connectionSpecs
    97:97:okhttp3.Dns dns() -> dns
    154:156:boolean equals(java.lang.Object) -> equals
    175:184:boolean equalsNonHost(okhttp3.Address) -> equalsNonHost
    160:171:int hashCode() -> hashCode
    145:145:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    115:115:java.util.List protocols() -> protocols
    135:135:java.net.Proxy proxy() -> proxy
    107:107:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    127:127:java.net.ProxySelector proxySelector() -> proxySelector
    102:102:javax.net.SocketFactory socketFactory() -> socketFactory
    140:140:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    188:199:java.lang.String toString() -> toString
    92:92:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
    okhttp3.Request $r8$lambda$esJoevooYalsFzydukZpZJT5arU(okhttp3.Route,okhttp3.Response) -> $r8$lambda$esJoevooYalsFzydukZpZJT5arU
      # {"id":"com.android.tools.r8.synthesized"}
    100:100:void <clinit>() -> <clinit>
    100:100:okhttp3.Request lambda$static$0(okhttp3.Route,okhttp3.Response) -> lambda$static$0
okhttp3.Authenticator$$ExternalSyntheticLambda0 -> okhttp3.Authenticator$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void okhttp3.Authenticator$$InternalSyntheticLambda$4$227b9dd5e7a636f8db4d7a6ae9fd62eca19c3625b7ffc60907c53555ebcf63ca$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    okhttp3.Request okhttp3.Authenticator$$InternalSyntheticLambda$4$227b9dd5e7a636f8db4d7a6ae9fd62eca19c3625b7ffc60907c53555ebcf63ca$0.authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.CacheControl -> okhttp3.CacheControl:
    33:43:void <clinit>() -> <clinit>
    63:77:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    79:92:void <init>(okhttp3.CacheControl$Builder) -> <init>
    274:289:java.lang.String headerValue() -> headerValue
    126:126:boolean isPrivate() -> isPrivate
    130:130:boolean isPublic() -> isPublic
    114:114:int maxAgeSeconds() -> maxAgeSeconds
    138:138:int maxStaleSeconds() -> maxStaleSeconds
    142:142:int minFreshSeconds() -> minFreshSeconds
    134:134:boolean mustRevalidate() -> mustRevalidate
    102:102:boolean noCache() -> noCache
    107:107:boolean noStore() -> noStore
    152:152:boolean onlyIfCached() -> onlyIfCached
    168:263:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
    269:270:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
    293:298:void <init>() -> <init>
    385:385:okhttp3.CacheControl build() -> build
    339:344:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    305:306:okhttp3.CacheControl$Builder noCache() -> noCache
    369:370:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
    128:128:void <clinit>() -> <clinit>
    133:136:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    162:204:void check(java.lang.String,java.util.List) -> check
    139:143:boolean equals(java.lang.Object) -> equals
    218:225:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    147:149:int hashCode() -> hashCode
    243:246:java.lang.String pin(java.security.cert.Certificate) -> pin
    250:250:okio.ByteString sha1(java.security.cert.X509Certificate) -> sha1
    254:254:okio.ByteString sha256(java.security.cert.X509Certificate) -> sha256
    231:233:okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner) -> withCertificateChainCleaner
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
    320:321:void <init>() -> <init>
    341:341:okhttp3.CertificatePinner build() -> build
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$Pin:
    300:303:boolean equals(java.lang.Object) -> equals
    307:311:int hashCode() -> hashCode
    289:296:boolean matches(java.lang.String) -> matches
    315:315:java.lang.String toString() -> toString
okhttp3.CipherSuite -> okhttp3.CipherSuite:
    int $r8$lambda$T7Zk1g23kZZYDDk9_CI-ZkK4G3E(java.lang.String,java.lang.String) -> $r8$lambda$T7Zk1g23kZZYDDk9_CI-ZkK4G3E
      # {"id":"com.android.tools.r8.synthesized"}
    49:401:void <clinit>() -> <clinit>
    442:447:void <init>(java.lang.String) -> <init>
    409:421:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    435:439:java.util.List forJavaNames(java.lang.String[]) -> forJavaNames
    455:457:okhttp3.CipherSuite init(java.lang.String,int) -> init
    50:58:int lambda$static$0(java.lang.String,java.lang.String) -> lambda$static$0
    425:430:java.lang.String secondaryName(java.lang.String) -> secondaryName
    471:471:java.lang.String toString() -> toString
okhttp3.CipherSuite$$ExternalSyntheticLambda0 -> okhttp3.CipherSuite$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void okhttp3.CipherSuite$$InternalSyntheticLambda$4$a2353b76fda53a1e73ce8001ede511b075833227d60ec16a618f8891c59fea6b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    int okhttp3.CipherSuite$$InternalSyntheticLambda$4$a2353b76fda53a1e73ce8001ede511b075833227d60ec16a618f8891c59fea6b$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
    36:37:void <init>() -> <init>
    39:41:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
    51:122:void <clinit>() -> <clinit>
    129:134:void <init>(okhttp3.ConnectionSpec$Builder) -> <init>
    162:170:void apply(javax.net.ssl.SSLSocket,boolean) -> apply
    145:145:java.util.List cipherSuites() -> cipherSuites
    230:242:boolean equals(java.lang.Object) -> equals
    246:252:int hashCode() -> hashCode
    212:226:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    137:137:boolean isTls() -> isTls
    177:197:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> supportedSpec
    157:157:boolean supportsTlsExtensions() -> supportsTlsExtensions
    153:153:java.util.List tlsVersions() -> tlsVersions
    256:262:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
    273:275:void <init>(boolean) -> <init>
    277:282:void <init>(okhttp3.ConnectionSpec) -> <init>
    351:351:okhttp3.ConnectionSpec build() -> build
    291:297:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    301:308:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    345:347:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    318:325:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    329:336:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.Cookie -> okhttp3.Cookie:
    47:54:void <clinit>() -> <clinit>
    68:78:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    389:398:int dateCharacterOffset(java.lang.String,int,int,boolean) -> dateCharacterOffset
    186:196:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    586:591:boolean equals(java.lang.Object) -> equals
    600:610:int hashCode() -> hashCode
    98:98:java.lang.String name() -> name
    219:219:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    223:323:okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String) -> parse
    441:453:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    426:436:java.lang.String parseDomain(java.lang.String) -> parseDomain
    329:381:long parseExpires(java.lang.String,int,int) -> parseExpires
    410:417:long parseMaxAge(java.lang.String) -> parseMaxAge
    542:542:java.lang.String toString() -> toString
    551:582:java.lang.String toString(boolean) -> toString
    103:103:java.lang.String value() -> value
okhttp3.CookieJar -> okhttp3.CookieJar:
    36:36:void <clinit>() -> <clinit>
okhttp3.CookieJar$1 -> okhttp3.CookieJar$1:
    36:36:void <init>() -> <init>
    41:41:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
    38:38:void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> saveFromResponse
okhttp3.Dispatcher -> okhttp3.Dispatcher:
    39:39:void <clinit>() -> <clinit>
    40:61:void <init>() -> <init>
    211:213:void executed(okhttp3.RealCall) -> executed
    63:68:java.util.concurrent.ExecutorService executorService() -> executorService
    217:219:void finished(okhttp3.RealCall$AsyncCall) -> finished
    223:224:void finished(okhttp3.RealCall) -> finished
    228:238:void finished(java.util.Deque,java.lang.Object) -> finished
    183:207:boolean promoteAndExecute() -> promoteAndExecute
    264:264:int runningCallsCount() -> runningCallsCount
okhttp3.Dns -> okhttp3.Dns:
    java.util.List $r8$lambda$9evC3uO-H_z08sS9O-4-hLhZ8es(java.lang.String) -> $r8$lambda$9evC3uO-H_z08sS9O-4-hLhZ8es
      # {"id":"com.android.tools.r8.synthesized"}
    36:36:void <clinit>() -> <clinit>
    37:44:java.util.List lambda$static$0(java.lang.String) -> lambda$static$0
okhttp3.Dns$$ExternalSyntheticLambda0 -> okhttp3.Dns$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void okhttp3.Dns$$InternalSyntheticLambda$4$cfe087e79b3434fe2b0fb0da377476d8661df0a49034c87669b25617bedbf979$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.List okhttp3.Dns$$InternalSyntheticLambda$4$cfe087e79b3434fe2b0fb0da377476d8661df0a49034c87669b25617bedbf979$0.lookup(java.lang.String) -> lookup
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.EventListener -> okhttp3.EventListener:
    okhttp3.EventListener $r8$lambda$OXICzLQ3RHlsN3BZyIksLMm-GlQ(okhttp3.EventListener,okhttp3.Call) -> $r8$lambda$OXICzLQ3RHlsN3BZyIksLMm-GlQ
      # {"id":"com.android.tools.r8.synthesized"}
    53:53:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    284:284:void callEnd(okhttp3.Call) -> callEnd
    292:292:void callFailed(okhttp3.Call,java.io.IOException) -> callFailed
    69:69:void callStart(okhttp3.Call) -> callStart
    135:135:void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol) -> connectEnd
    147:147:void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException) -> connectFailed
    101:101:void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy) -> connectStart
    156:156:void connectionAcquired(okhttp3.Call,okhttp3.Connection) -> connectionAcquired
    167:167:void connectionReleased(okhttp3.Call,okhttp3.Connection) -> connectionReleased
    89:89:void dnsEnd(okhttp3.Call,java.lang.String,java.util.List) -> dnsEnd
    81:81:void dnsStart(okhttp3.Call,java.lang.String) -> dnsStart
    57:57:okhttp3.EventListener$Factory factory(okhttp3.EventListener) -> factory
    57:57:okhttp3.EventListener lambda$factory$0(okhttp3.EventListener,okhttp3.Call) -> lambda$factory$0
    211:211:void requestBodyEnd(okhttp3.Call,long) -> requestBodyEnd
    203:203:void requestBodyStart(okhttp3.Call) -> requestBodyStart
    220:220:void requestFailed(okhttp3.Call,java.io.IOException) -> requestFailed
    190:190:void requestHeadersEnd(okhttp3.Call,okhttp3.Request) -> requestHeadersEnd
    179:179:void requestHeadersStart(okhttp3.Call) -> requestHeadersStart
    266:266:void responseBodyEnd(okhttp3.Call,long) -> responseBodyEnd
    255:255:void responseBodyStart(okhttp3.Call) -> responseBodyStart
    275:275:void responseFailed(okhttp3.Call,java.io.IOException) -> responseFailed
    243:243:void responseHeadersEnd(okhttp3.Call,okhttp3.Response) -> responseHeadersEnd
    232:232:void responseHeadersStart(okhttp3.Call) -> responseHeadersStart
    124:124:void secureConnectEnd(okhttp3.Call,okhttp3.Handshake) -> secureConnectEnd
    116:116:void secureConnectStart(okhttp3.Call) -> secureConnectStart
okhttp3.EventListener$$ExternalSyntheticLambda0 -> okhttp3.EventListener$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    okhttp3.EventListener okhttp3.EventListener$$InternalSyntheticLambda$4$f3e79a94db6ccd6dd08fa0bc8d1b964de0cd10259a0f9c312557e393e8c81ade$0.f$0 -> f$0
    void okhttp3.EventListener$$InternalSyntheticLambda$4$f3e79a94db6ccd6dd08fa0bc8d1b964de0cd10259a0f9c312557e393e8c81ade$0.<init>(okhttp3.EventListener) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    okhttp3.EventListener okhttp3.EventListener$$InternalSyntheticLambda$4$f3e79a94db6ccd6dd08fa0bc8d1b964de0cd10259a0f9c312557e393e8c81ade$0.create(okhttp3.Call) -> create
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.EventListener$1 -> okhttp3.EventListener$1:
    53:53:void <init>() -> <init>
okhttp3.Handshake -> okhttp3.Handshake:
    44:49:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> <init>
    100:100:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    128:133:boolean equals(java.lang.Object) -> equals
    52:79:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    137:142:int hashCode() -> hashCode
    159:169:java.util.List names(java.util.List) -> names
    105:105:java.util.List peerCertificates() -> peerCertificates
    146:154:java.lang.String toString() -> toString
okhttp3.Headers -> okhttp3.Headers:
    55:57:void <init>(okhttp3.Headers$Builder) -> <init>
    59:61:void <init>(java.lang.String[]) -> <init>
    268:277:void checkName(java.lang.String) -> checkName
    280:288:void checkValue(java.lang.String,java.lang.String) -> checkValue
    175:176:boolean equals(java.lang.Object) -> equals
    65:65:java.lang.String get(java.lang.String) -> get
    206:211:java.lang.String get(java.lang.String[],java.lang.String) -> get
    180:180:int hashCode() -> hashCode
    94:94:java.lang.String name(int) -> name
    143:145:okhttp3.Headers$Builder newBuilder() -> newBuilder
    219:239:okhttp3.Headers of(java.lang.String[]) -> of
    89:89:int size() -> size
    184:188:java.lang.String toString() -> toString
    99:99:java.lang.String value(int) -> value
    113:122:java.util.List values(java.lang.String) -> values
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
    290:291:void <init>() -> <init>
    323:325:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    298:306:okhttp3.Headers$Builder addLenient(java.lang.String) -> addLenient
    393:395:okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String) -> addLenient
    432:432:okhttp3.Headers build() -> build
    399:406:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    414:418:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.HttpUrl -> okhttp3.HttpUrl:
    290:290:void <clinit>() -> <clinit>
    339:353:void <init>(okhttp3.HttpUrl$Builder) -> <init>
    1683:1701:java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize
    1707:1744:void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize
    1754:1755:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> canonicalize
    511:516:int defaultPort(java.lang.String) -> defaultPort
    829:831:java.lang.String encodedFragment() -> encodedFragment
    446:449:java.lang.String encodedPassword() -> encodedPassword
    547:549:java.lang.String encodedPath() -> encodedPath
    571:580:java.util.List encodedPathSegments() -> encodedPathSegments
    614:617:java.lang.String encodedQuery() -> encodedQuery
    413:416:java.lang.String encodedUsername() -> encodedUsername
    933:933:boolean equals(java.lang.Object) -> equals
    937:937:int hashCode() -> hashCode
    487:487:java.lang.String host() -> host
    398:398:boolean isHttps() -> isHttps
    621:631:void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List) -> namesAndValuesToQueryString
    873:884:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    893:895:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    553:557:void pathSegmentsToString(java.lang.StringBuilder,java.util.List) -> pathSegmentsToString
    1606:1606:java.lang.String percentDecode(java.lang.String,boolean) -> percentDecode
    1610:1616:java.util.List percentDecode(java.util.List,boolean) -> percentDecode
    1620:1632:java.lang.String percentDecode(java.lang.String,int,int,boolean) -> percentDecode
    1637:1653:void percentDecode(okio.Buffer,java.lang.String,int,int,boolean) -> percentDecode
    1656:1659:boolean percentEncoded(java.lang.String,int,int) -> percentEncoded
    503:503:int port() -> port
    674:677:java.lang.String query() -> query
    640:655:java.util.List queryStringToNamesAndValues(java.lang.String) -> queryStringToNamesAndValues
    856:860:java.lang.String redact() -> redact
    868:869:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    394:394:java.lang.String scheme() -> scheme
    941:941:java.lang.String toString() -> toString
    378:387:java.net.URI uri() -> uri
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
    970:980:void <init>() -> <init>
    1044:1046:okhttp3.HttpUrl$Builder addPathSegment(java.lang.String) -> addPathSegment
    1148:1155:okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String) -> addQueryParameter
    1253:1255:okhttp3.HttpUrl build() -> build
    1588:1589:java.lang.String canonicalizeHost(java.lang.String,int,int) -> canonicalizeHost
    1040:1040:int effectivePort() -> effectivePort
    1139:1143:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    1026:1030:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1493:1493:boolean isDot(java.lang.String) -> isDot
    1497:1500:boolean isDotDot(java.lang.String) -> isDotDot
    1313:1440:okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String) -> parse
    1595:1600:int parsePort(java.lang.String,int,int) -> parsePort
    1009:1011:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1514:1522:void pop() -> pop
    1034:1036:okhttp3.HttpUrl$Builder port(int) -> port
    1571:1582:int portColonOffset(java.lang.String,int,int) -> portColonOffset
    1473:1490:void push(java.lang.String,int,int,boolean,boolean) -> push
    1131:1135:okhttp3.HttpUrl$Builder query(java.lang.String) -> query
    1231:1249:okhttp3.HttpUrl$Builder reencodeForUri() -> reencodeForUri
    1445:1468:void resolvePath(java.lang.String,int,int) -> resolvePath
    983:992:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    1529:1551:int schemeDelimiterOffset(java.lang.String,int,int) -> schemeDelimiterOffset
    1556:1566:int slashCount(java.lang.String,int,int) -> slashCount
    1259:1307:java.lang.String toString() -> toString
    996:998:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.MediaType -> okhttp3.MediaType:
    31:32:void <clinit>() -> <clinit>
    40:45:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    140:142:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    155:155:boolean equals(java.lang.Object) -> equals
    53:97:okhttp3.MediaType get(java.lang.String) -> get
    159:159:int hashCode() -> hashCode
    106:108:okhttp3.MediaType parse(java.lang.String) -> parse
    151:151:java.lang.String toString() -> toString
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
    124:170:void <clinit>() -> <clinit>
    202:203:void <init>() -> <init>
    205:259:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    340:340:okhttp3.Authenticator authenticator() -> authenticator
    276:276:int callTimeoutMillis() -> callTimeoutMillis
    336:336:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    281:281:int connectTimeoutMillis() -> connectTimeoutMillis
    348:348:okhttp3.ConnectionPool connectionPool() -> connectionPool
    372:372:java.util.List connectionSpecs() -> connectionSpecs
    308:308:okhttp3.CookieJar cookieJar() -> cookieJar
    364:364:okhttp3.Dispatcher dispatcher() -> dispatcher
    320:320:okhttp3.Dns dns() -> dns
    394:394:okhttp3.EventListener$Factory eventListenerFactory() -> eventListenerFactory
    356:356:boolean followRedirects() -> followRedirects
    352:352:boolean followSslRedirects() -> followSslRedirects
    332:332:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    381:381:java.util.List interceptors() -> interceptors
    316:316:okhttp3.internal.cache.InternalCache internalCache() -> internalCache
    390:390:java.util.List networkInterceptors() -> networkInterceptors
    414:414:okhttp3.OkHttpClient$Builder newBuilder() -> newBuilder
    401:401:okhttp3.Call newCall(okhttp3.Request) -> newCall
    263:267:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    296:296:int pingIntervalMillis() -> pingIntervalMillis
    368:368:java.util.List protocols() -> protocols
    300:300:java.net.Proxy proxy() -> proxy
    344:344:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    304:304:java.net.ProxySelector proxySelector() -> proxySelector
    286:286:int readTimeoutMillis() -> readTimeoutMillis
    360:360:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    324:324:javax.net.SocketFactory socketFactory() -> socketFactory
    328:328:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    291:291:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.OkHttpClient$1 -> okhttp3.OkHttpClient$1:
    131:131:void <init>() -> <init>
    133:134:void addLenient(okhttp3.Headers$Builder,java.lang.String) -> addLenient
    137:138:void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> addLenient
    154:155:void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> apply
    149:149:int code(okhttp3.Response$Builder) -> code
    145:145:boolean equalsNonHost(okhttp3.Address,okhttp3.Address) -> equalsNonHost
    167:167:okhttp3.internal.connection.Exchange exchange(okhttp3.Response) -> exchange
    163:164:void initExchange(okhttp3.Response$Builder,okhttp3.internal.connection.Exchange) -> initExchange
    141:141:okhttp3.internal.connection.RealConnectionPool realConnectionPool(okhttp3.ConnectionPool) -> realConnectionPool
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
    422:472:void <init>() -> <init>
    422:503:void <init>(okhttp3.OkHttpClient) -> <init>
    1015:1015:okhttp3.OkHttpClient build() -> build
    545:546:okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> connectTimeout
    839:841:okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool) -> connectionPool
    793:795:okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier) -> hostnameVerifier
    666:667:okhttp3.OkHttpClient$Builder proxy(java.net.Proxy) -> proxy
    574:575:okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> readTimeout
    779:783:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager) -> sslSocketFactory
okhttp3.Protocol -> okhttp3.Protocol:
    29:81:void <clinit>() -> <clinit>
    85:87:void <init>(java.lang.String,int,java.lang.String) -> <init>
    96:102:okhttp3.Protocol get(java.lang.String) -> get
    113:113:java.lang.String toString() -> toString
    29:29:okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    29:29:okhttp3.Protocol[] values() -> values
okhttp3.RealCall -> okhttp3.RealCall:
    55:59:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    39:39:okhttp3.internal.connection.Transmitter access$000(okhttp3.RealCall) -> access$000
    97:98:void cancel() -> cancel
    39:39:java.lang.Object clone() -> clone
    114:114:okhttp3.RealCall clone() -> clone
    73:83:okhttp3.Response execute() -> execute
    212:240:okhttp3.Response getResponseWithInterceptorChain() -> getResponseWithInterceptorChain
    109:109:boolean isCanceled() -> isCanceled
    63:65:okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> newRealCall
    207:207:java.lang.String redactedUrl() -> redactedUrl
    201:203:java.lang.String toLoggableString() -> toLoggableString
okhttp3.RealCall$AsyncCall -> okhttp3.RealCall$AsyncCall:
    117:117:void <clinit>() -> <clinit>
    127:127:java.util.concurrent.atomic.AtomicInteger callsPerHost() -> callsPerHost
    169:193:void execute() -> execute
    151:166:void executeOn(java.util.concurrent.ExecutorService) -> executeOn
okhttp3.Request -> okhttp3.Request:
    40:46:void <init>(okhttp3.Request$Builder) -> <init>
    69:69:okhttp3.RequestBody body() -> body
    101:102:okhttp3.CacheControl cacheControl() -> cacheControl
    61:61:java.lang.String header(java.lang.String) -> header
    57:57:okhttp3.Headers headers() -> headers
    106:106:boolean isHttps() -> isHttps
    53:53:java.lang.String method() -> method
    93:93:okhttp3.Request$Builder newBuilder() -> newBuilder
    110:110:java.lang.String toString() -> toString
    49:49:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
    126:131:void <init>() -> <init>
    126:141:void <init>(okhttp3.Request) -> <init>
    292:293:okhttp3.Request build() -> build
    224:224:okhttp3.Request$Builder get() -> get
    184:185:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    208:209:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    252:262:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    202:203:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    144:146:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
    30:30:void <init>() -> <init>
    133:133:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    139:141:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
    77:77:boolean isDuplex() -> isDuplex
    93:93:boolean isOneShot() -> isOneShot
okhttp3.RequestBody$2 -> okhttp3.RequestBody$2:
    141:141:void <init>(okhttp3.MediaType,int,byte[],int) -> <init>
    147:147:long contentLength() -> contentLength
    143:143:okhttp3.MediaType contentType() -> contentType
    151:152:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.Response -> okhttp3.Response:
    61:75:void <init>(okhttp3.Response$Builder) -> <init>
    179:179:okhttp3.ResponseBody body() -> body
    257:258:okhttp3.CacheControl cacheControl() -> cacheControl
    287:291:void close() -> close
    101:101:int code() -> code
    122:122:okhttp3.Handshake handshake() -> handshake
    130:130:java.lang.String header(java.lang.String) -> header
    134:135:java.lang.String header(java.lang.String,java.lang.String) -> header
    139:139:okhttp3.Headers headers() -> headers
    109:109:boolean isSuccessful() -> isSuccessful
    114:114:java.lang.String message() -> message
    183:183:okhttp3.Response$Builder newBuilder() -> newBuilder
    226:226:okhttp3.Response priorResponse() -> priorResponse
    276:276:long receivedResponseAtMillis() -> receivedResponseAtMillis
    89:89:okhttp3.Request request() -> request
    267:267:long sentRequestAtMillis() -> sentRequestAtMillis
    294:301:java.lang.String toString() -> toString
okhttp3.Response$Builder -> okhttp3.Response$Builder:
    308:322:void <init>() -> <init>
    308:338:void <init>(okhttp3.Response) -> <init>
    379:380:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    396:397:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    451:455:okhttp3.Response build() -> build
    407:409:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    431:434:void checkPriorResponse(okhttp3.Response) -> checkPriorResponse
    413:422:void checkSupportResponse(java.lang.String,okhttp3.Response) -> checkSupportResponse
    351:352:okhttp3.Response$Builder code(int) -> code
    361:362:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    370:371:okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> header
    391:392:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    447:448:void initExchange(okhttp3.internal.connection.Exchange) -> initExchange
    356:357:okhttp3.Response$Builder message(java.lang.String) -> message
    401:403:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    425:427:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    346:347:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    442:443:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    341:342:okhttp3.Response$Builder request(okhttp3.Request) -> request
    437:438:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
okhttp3.ResponseBody -> okhttp3.ResponseBody:
    137:137:void $closeResource(java.lang.Throwable,java.lang.AutoCloseable) -> $closeResource
    103:103:void <init>() -> <init>
    116:116:java.io.InputStream byteStream() -> byteStream
    187:188:java.nio.charset.Charset charset() -> charset
    192:193:void close() -> close
    214:215:okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> create
    227:228:okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> create
    180:183:java.lang.String string() -> string
okhttp3.ResponseBody$1 -> okhttp3.ResponseBody$1:
    228:228:void <init>(okhttp3.MediaType,long,okio.BufferedSource) -> <init>
    234:234:long contentLength() -> contentLength
    230:230:okhttp3.MediaType contentType() -> contentType
    238:238:okio.BufferedSource source() -> source
okhttp3.Route -> okhttp3.Route:
    42:55:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    58:58:okhttp3.Address address() -> address
    84:87:boolean equals(java.lang.Object) -> equals
    91:95:int hashCode() -> hashCode
    68:68:java.net.Proxy proxy() -> proxy
    80:80:boolean requiresTunnel() -> requiresTunnel
    72:72:java.net.InetSocketAddress socketAddress() -> socketAddress
    99:99:java.lang.String toString() -> toString
okhttp3.TlsVersion -> okhttp3.TlsVersion:
    26:31:void <clinit>() -> <clinit>
    36:38:void <init>(java.lang.String,int,java.lang.String) -> <init>
    41:53:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
    57:61:java.util.List forJavaNames(java.lang.String[]) -> forJavaNames
    26:26:okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    26:26:okhttp3.TlsVersion[] values() -> values
okhttp3.internal.Internal -> okhttp3.internal.Internal:
    35:35:void <init>() -> <init>
okhttp3.internal.NamedRunnable -> okhttp3.internal.NamedRunnable:
    24:26:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    29:36:void run() -> run
okhttp3.internal.Util -> okhttp3.internal.Util:
    java.lang.Thread $r8$lambda$CKtmiXfHFlf_KUU5HpYC_rUBFnY(java.lang.String,boolean,java.lang.Runnable) -> $r8$lambda$CKtmiXfHFlf_KUU5HpYC_rUBFnY
      # {"id":"com.android.tools.r8.synthesized"}
    65:120:void <clinit>() -> <clinit>
    102:108:void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable) -> addSuppressedIfPossible
    467:474:java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset) -> bomAwareCharset
    395:418:java.lang.String canonicalizeHost(java.lang.String) -> canonicalizeHost
    479:484:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> checkDuration
    127:130:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    137:145:void closeQuietly(java.io.Closeable) -> closeQuietly
    152:162:void closeQuietly(java.net.Socket) -> closeQuietly
    310:313:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    423:438:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> containsInvalidHostnameAsciiCodes
    488:491:int decodeHexDigit(char) -> decodeHexDigit
    568:597:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> decodeIpv4Suffix
    496:561:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> decodeIpv6
    368:371:int delimiterOffset(java.lang.String,int,int,java.lang.String) -> delimiterOffset
    379:382:int delimiterOffset(java.lang.String,int,int,char) -> delimiterOffset
    186:188:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    463:463:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    675:679:java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    285:290:java.lang.String hostHeader(okhttp3.HttpUrl,boolean) -> hostHeader
    221:221:java.util.List immutableList(java.util.List) -> immutableList
    234:234:java.util.List immutableList(java.lang.Object[]) -> immutableList
    226:228:java.util.Map immutableMap(java.util.Map) -> immutableMap
    303:306:int indexOf(java.util.Comparator,java.lang.String[],java.lang.String) -> indexOf
    447:453:int indexOfControlOrNonAscii(java.lang.String) -> indexOfControlOrNonAscii
    605:633:java.lang.String inet6AddressToAscii(byte[]) -> inet6AddressToAscii
    251:260:java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[]) -> intersect
    298:299:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    239:241:java.lang.Thread lambda$threadFactory$0(java.lang.String,boolean,java.lang.Runnable) -> lambda$threadFactory$0
    271:281:boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[]) -> nonEmptyIntersection
    638:648:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    684:686:boolean sameConnection(okhttp3.HttpUrl,okhttp3.HttpUrl) -> sameConnection
    197:214:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    321:333:int skipLeadingAsciiWhitespace(java.lang.String,int,int) -> skipLeadingAsciiWhitespace
    341:353:int skipTrailingAsciiWhitespace(java.lang.String,int,int) -> skipTrailingAsciiWhitespace
    238:238:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    661:665:java.util.List toHeaderBlock(okhttp3.Headers) -> toHeaderBlock
    653:657:okhttp3.Headers toHeaders(java.util.List) -> toHeaders
    358:360:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    458:458:boolean verifyAsIpAddress(java.lang.String) -> verifyAsIpAddress
okhttp3.internal.Util$$ExternalSyntheticLambda0 -> okhttp3.internal.Util$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String okhttp3.internal.Util$$InternalSyntheticLambda$4$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.f$0 -> f$0
    boolean okhttp3.internal.Util$$InternalSyntheticLambda$4$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.f$1 -> f$1
    void okhttp3.internal.Util$$InternalSyntheticLambda$4$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.<init>(java.lang.String,boolean) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Thread okhttp3.internal.Util$$InternalSyntheticLambda$4$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.Util$$ExternalSyntheticLambda1 -> okhttp3.internal.Util$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void okhttp3.internal.Util$$InternalSyntheticLambda$4$714f53d8007bf72fa55ef84a8e957e4340f905e93b56bdad777023b0fd44fc2b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    int okhttp3.internal.Util$$InternalSyntheticLambda$4$714f53d8007bf72fa55ef84a8e957e4340f905e93b56bdad777023b0fd44fc2b$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.Version -> okhttp3.internal.Version:
    20:20:java.lang.String userAgent() -> userAgent
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
    49:51:void <init>(okhttp3.internal.cache.InternalCache) -> <init>
    162:215:okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response) -> cacheWritingResponse
    220:242:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> combine
    54:145:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    265:267:boolean isContentSpecificHeader(java.lang.String) -> isContentSpecificHeader
    250:257:boolean isEndToEnd(java.lang.String) -> isEndToEnd
    149:151:okhttp3.Response stripBody(okhttp3.Response) -> stripBody
okhttp3.internal.cache.CacheInterceptor$1 -> okhttp3.internal.cache.CacheInterceptor$1:
    169:169:void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink) -> <init>
    202:208:void close() -> close
    175:194:long read(okio.Buffer,long) -> read
    198:198:okio.Timeout timeout() -> timeout
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
    57:60:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    66:100:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
    138:167:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    298:306:long cacheResponseAge() -> cacheResponseAge
    269:290:long computeFreshnessLifetime() -> computeFreshnessLifetime
    173:180:okhttp3.internal.cache.CacheStrategy get() -> get
    186:261:okhttp3.internal.cache.CacheStrategy getCandidate() -> getCandidate
    323:323:boolean hasConditions(okhttp3.Request) -> hasConditions
    314:314:boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
    30:32:void <init>(okhttp3.OkHttpClient) -> <init>
    35:43:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
    43:46:void <init>(java.util.List) -> <init>
    55:79:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    91:123:boolean connectionFailed(java.io.IOException) -> connectionFailed
    132:137:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> isFallbackPossible
okhttp3.internal.connection.Exchange -> okhttp3.internal.connection.Exchange:
    52:58:void <init>(okhttp3.internal.connection.Transmitter,okhttp3.Call,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec) -> <init>
    187:204:java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException) -> bodyComplete
    168:169:void cancel() -> cancel
    61:61:okhttp3.internal.connection.RealConnection connection() -> connection
    82:86:okio.Sink createRequestBody(okhttp3.Request,boolean) -> createRequestBody
    176:178:void detachWithViolence() -> detachWithViolence
    101:107:void finishRequest() -> finishRequest
    91:97:void flushRequest() -> flushRequest
    66:66:boolean isDuplex() -> isDuplex
    164:165:void noNewExchangesOnConnection() -> noNewExchangesOnConnection
    208:209:void noRequestBody() -> noRequestBody
    133:142:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    115:123:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    128:129:void responseHeadersEnd(okhttp3.Response) -> responseHeadersEnd
    110:111:void responseHeadersStart() -> responseHeadersStart
    181:183:void trackFailure(java.io.IOException) -> trackFailure
    71:79:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.connection.Exchange$RequestBodySink -> okhttp3.internal.connection.Exchange$RequestBodySink:
    219:222:void <init>(okhttp3.internal.connection.Exchange,okio.Sink,long) -> <init>
    247:258:void close() -> close
    261:263:java.io.IOException complete(java.io.IOException) -> complete
    240:244:void flush() -> flush
    225:236:void write(okio.Buffer,long) -> write
okhttp3.internal.connection.Exchange$ResponseBodySource -> okhttp3.internal.connection.Exchange$ResponseBodySource:
    274:281:void <init>(okhttp3.internal.connection.Exchange,okio.Source,long) -> <init>
    310:318:void close() -> close
    321:323:java.io.IOException complete(java.io.IOException) -> complete
    284:305:long read(okio.Buffer,long) -> read
okhttp3.internal.connection.ExchangeFinder -> okhttp3.internal.connection.ExchangeFinder:
    53:53:void <clinit>() -> <clinit>
    69:77:void <init>(okhttp3.internal.connection.Transmitter,okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener) -> <init>
    254:255:okhttp3.internal.connection.RealConnection connectingConnection() -> connectingConnection
    81:96:okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean) -> find
    135:250:okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> findConnection
    108:125:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> findHealthyConnection
    274:285:boolean hasRouteToTry() -> hasRouteToTry
    267:269:boolean hasStreamFailure() -> hasStreamFailure
    294:296:boolean retryCurrentRoute() -> retryCurrentRoute
    259:263:void trackFailure() -> trackFailure
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
    75:75:void <clinit>() -> <clinit>
    119:130:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> <init>
    569:570:void cancel() -> cancel
    151:224:void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> connect
    253:282:void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> connectSocket
    319:384:void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> connectTls
    232:248:void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> connectTunnel
    393:429:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> createTunnel
    442:466:okhttp3.Request createTunnelRequest() -> createTunnelRequest
    286:306:void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener) -> establishProtocol
    621:621:okhttp3.Handshake handshake() -> handshake
    475:507:boolean isEligible(okhttp3.Address,java.util.List) -> isEligible
    578:605:boolean isHealthy(boolean) -> isHealthy
    629:629:boolean isMultiplexed() -> isMultiplexed
    543:549:okhttp3.internal.http.ExchangeCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain) -> newCodec
    134:138:void noNewExchanges() -> noNewExchanges
    615:618:void onSettings(okhttp3.internal.http2.Http2Connection) -> onSettings
    610:611:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    564:564:okhttp3.Route route() -> route
    517:525:boolean routeMatchesAny(java.util.List) -> routeMatchesAny
    573:573:java.net.Socket socket() -> socket
    309:316:void startHttp2(int) -> startHttp2
    529:539:boolean supportsUrl(okhttp3.HttpUrl) -> supportsUrl
    672:679:java.lang.String toString() -> toString
    637:665:void trackFailure(java.io.IOException) -> trackFailure
okhttp3.internal.connection.RealConnectionPool -> okhttp3.internal.connection.RealConnectionPool:
    void $r8$lambda$IlX_zHTDM1o4DMNAF0yuZyL86PI(okhttp3.internal.connection.RealConnectionPool) -> $r8$lambda$IlX_zHTDM1o4DMNAF0yuZyL86PI
      # {"id":"com.android.tools.r8.synthesized"}
    40:48:void <clinit>() -> <clinit>
    53:82:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    166:213:long cleanup(long) -> cleanup
    254:261:void connectFailed(okhttp3.Route,java.io.IOException) -> connectFailed
    130:136:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    55:67:void lambda$new$0() -> lambda$new$0
    223:248:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> pruneAndGetAllocationCount
    117:123:void put(okhttp3.internal.connection.RealConnection) -> put
    106:113:boolean transmitterAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.Transmitter,java.util.List,boolean) -> transmitterAcquirePooledConnection
okhttp3.internal.connection.RealConnectionPool$$ExternalSyntheticLambda0 -> okhttp3.internal.connection.RealConnectionPool$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    okhttp3.internal.connection.RealConnectionPool okhttp3.internal.connection.RealConnectionPool$$InternalSyntheticLambda$4$e0f85bf93e145d0a34cfb4b24b32a9fcf0380957bd179d1ef1d31ae17e8dd94f$0.f$0 -> f$0
    void okhttp3.internal.connection.RealConnectionPool$$InternalSyntheticLambda$4$e0f85bf93e145d0a34cfb4b24b32a9fcf0380957bd179d1ef1d31ae17e8dd94f$0.<init>(okhttp3.internal.connection.RealConnectionPool) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void okhttp3.internal.connection.RealConnectionPool$$InternalSyntheticLambda$4$e0f85bf93e145d0a34cfb4b24b32a9fcf0380957bd179d1ef1d31ae17e8dd94f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
    28:29:void <init>() -> <init>
    37:39:void connected(okhttp3.Route) -> connected
    32:34:void failed(okhttp3.Route) -> failed
    43:43:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
    31:34:void <init>(java.io.IOException) -> <init>
    45:47:void addConnectException(java.io.IOException) -> addConnectException
    37:37:java.io.IOException getFirstConnectException() -> getFirstConnectException
    41:41:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
    47:64:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener) -> <init>
    191:200:java.lang.String getHostString(java.net.InetSocketAddress) -> getHostString
    70:70:boolean hasNext() -> hasNext
    125:125:boolean hasNextProxy() -> hasNextProxy
    74:105:okhttp3.internal.connection.RouteSelector$Selection next() -> next
    130:136:java.net.Proxy nextProxy() -> nextProxy
    142:183:void resetNextInetSocketAddress(java.net.Proxy) -> resetNextInetSocketAddress
    110:121:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> resetNextProxy
okhttp3.internal.connection.RouteSelector$Selection -> okhttp3.internal.connection.RouteSelector$Selection:
    206:210:void <init>(java.util.List) -> <init>
    224:224:java.util.List getAll() -> getAll
    213:213:boolean hasNext() -> hasNext
    217:220:okhttp3.Route next() -> next
okhttp3.internal.connection.Transmitter -> okhttp3.internal.connection.Transmitter:
    54:54:void <clinit>() -> <clinit>
    59:85:void <init>(okhttp3.OkHttpClient,okhttp3.Call) -> <init>
    181:186:void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection) -> acquireConnectionNoEvents
    116:118:void callStart() -> callStart
    313:313:boolean canRetry() -> canRetry
    334:346:void cancel() -> cancel
    143:154:okhttp3.Address createAddress(okhttp3.HttpUrl) -> createAddress
    221:225:void exchangeDoneDueToException() -> exchangeDoneDueToException
    237:260:java.io.IOException exchangeMessageDone(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException) -> exchangeMessageDone
    317:319:boolean hasExchange() -> hasExchange
    349:351:boolean isCanceled() -> isCanceled
    283:309:java.io.IOException maybeReleaseConnection(java.io.IOException,boolean) -> maybeReleaseConnection
    159:177:okhttp3.internal.connection.Exchange newExchange(okhttp3.Interceptor$Chain,boolean) -> newExchange
    264:267:java.io.IOException noMoreExchanges(java.io.IOException) -> noMoreExchanges
    125:140:void prepareToConnect(okhttp3.Request) -> prepareToConnect
    193:217:java.net.Socket releaseConnectionNoEvents() -> releaseConnectionNoEvents
    100:103:void timeoutEarlyExit() -> timeoutEarlyExit
    92:93:void timeoutEnter() -> timeoutEnter
    106:112:java.io.IOException timeoutExit(java.io.IOException) -> timeoutExit
okhttp3.internal.connection.Transmitter$1 -> okhttp3.internal.connection.Transmitter$1:
    59:59:void <init>(okhttp3.internal.connection.Transmitter) -> <init>
    61:62:void timedOut() -> timedOut
okhttp3.internal.connection.Transmitter$TransmitterReference -> okhttp3.internal.connection.Transmitter$TransmitterReference:
    362:364:void <init>(okhttp3.internal.connection.Transmitter,java.lang.Object) -> <init>
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
    43:45:void <init>(okhttp3.CookieJar) -> <init>
    118:126:java.lang.String cookieHeader(java.util.List) -> cookieHeader
    48:113:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
    32:34:void <init>(boolean) -> <init>
    37:141:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.HttpDate -> okhttp3.internal.http.HttpDate:
    37:71:void <clinit>() -> <clinit>
    114:114:java.lang.String format(java.util.Date) -> format
    76:109:java.util.Date parse(java.lang.String) -> parse
okhttp3.internal.http.HttpDate$1 -> okhttp3.internal.http.HttpDate$1:
    38:38:void <init>() -> <init>
    38:38:java.lang.Object initialValue() -> initialValue
    41:44:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
    45:46:void <clinit>() -> <clinit>
    52:52:long contentLength(okhttp3.Response) -> contentLength
    56:56:long contentLength(okhttp3.Headers) -> contentLength
    325:343:boolean hasBody(okhttp3.Response) -> hasBody
    379:388:int parseSeconds(java.lang.String,int) -> parseSeconds
    314:320:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    351:356:int skipUntil(java.lang.String,int,java.lang.String) -> skipUntil
    364:370:int skipWhitespace(java.lang.String,int) -> skipWhitespace
    60:64:long stringToLong(java.lang.String) -> stringToLong
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
    20:24:boolean invalidatesCache(java.lang.String) -> invalidatesCache
    36:36:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    45:45:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    40:40:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    28:32:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
    53:63:void <init>(java.util.List,okhttp3.internal.connection.Transmitter,okhttp3.internal.connection.Exchange,int,okhttp3.Request,okhttp3.Call,int,int,int) -> <init>
    70:70:int connectTimeoutMillis() -> connectTimeoutMillis
    104:105:okhttp3.internal.connection.Exchange exchange() -> exchange
    117:117:okhttp3.Response proceed(okhttp3.Request) -> proceed
    122:160:okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.Transmitter,okhttp3.internal.connection.Exchange) -> proceed
    80:80:int readTimeoutMillis() -> readTimeoutMillis
    113:113:okhttp3.Request request() -> request
    100:100:okhttp3.internal.connection.Transmitter transmitter() -> transmitter
    90:90:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
    33:37:void <init>(java.lang.String,long,okio.BufferedSource) -> <init>
    44:44:long contentLength() -> contentLength
    40:40:okhttp3.MediaType contentType() -> contentType
    48:48:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
    33:44:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    52:52:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> includeAuthorityInRequestLine
    60:62:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
    67:69:void <init>(okhttp3.OkHttpClient) -> <init>
    215:325:okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route) -> followUpRequest
    72:144:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    179:206:boolean isRecoverable(java.io.IOException,boolean) -> isRecoverable
    156:168:boolean recover(java.io.IOException,okhttp3.internal.connection.Transmitter,boolean,okhttp3.Request) -> recover
    172:173:boolean requestIsOneShot(java.io.IOException,okhttp3.Request) -> requestIsOneShot
    330:342:int retryAfter(okhttp3.Response,int) -> retryAfter
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
    34:38:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    51:93:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
    97:103:java.lang.String toString() -> toString
okhttp3.internal.http1.Http1ExchangeCodec -> okhttp3.internal.http1.Http1ExchangeCodec:
    84:99:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink) -> <init>
    66:66:okhttp3.OkHttpClient access$1000(okhttp3.internal.http1.Http1ExchangeCodec) -> access$1000
    66:66:okio.BufferedSink access$200(okhttp3.internal.http1.Http1ExchangeCodec) -> access$200
    66:66:void access$300(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout) -> access$300
    66:66:int access$400(okhttp3.internal.http1.Http1ExchangeCodec) -> access$400
    66:66:int access$402(okhttp3.internal.http1.Http1ExchangeCodec,int) -> access$402
    66:66:okio.BufferedSource access$500(okhttp3.internal.http1.Http1ExchangeCodec) -> access$500
    66:66:okhttp3.internal.connection.RealConnection access$600(okhttp3.internal.http1.Http1ExchangeCodec) -> access$600
    66:66:okhttp3.Headers access$800(okhttp3.internal.http1.Http1ExchangeCodec) -> access$800
    66:66:okhttp3.Headers access$802(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers) -> access$802
    66:66:okhttp3.Headers access$900(okhttp3.internal.http1.Http1ExchangeCodec) -> access$900
    125:126:void cancel() -> cancel
    102:102:okhttp3.internal.connection.RealConnection connection() -> connection
    106:120:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    294:298:void detachTimeout(okio.ForwardingTimeout) -> detachTimeout
    190:191:void finishRequest() -> finishRequest
    186:187:void flushRequest() -> flushRequest
    258:260:okio.Sink newChunkedSink() -> newChunkedSink
    276:278:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    270:272:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    264:266:okio.Sink newKnownLengthSink() -> newKnownLengthSink
    282:285:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    157:170:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    242:244:java.lang.String readHeaderLine() -> readHeaderLine
    249:254:okhttp3.Headers readHeaders() -> readHeaders
    208:236:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    145:153:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    305:310:void skipConnectBody(okhttp3.Response) -> skipConnectBody
    195:205:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    139:142:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource -> okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource:
    379:380:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    379:379:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.internal.http1.Http1ExchangeCodec$1) -> <init>
    389:393:long read(okio.Buffer,long) -> read
    402:408:void responseBodyComplete() -> responseBodyComplete
    384:384:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink:
    345:349:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    370:376:void close() -> close
    365:368:void flush() -> flush
    352:352:okio.Timeout timeout() -> timeout
    356:363:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource:
    458:463:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl) -> <init>
    510:516:void close() -> close
    466:483:long read(okio.Buffer,long) -> read
    488:507:void readChunkSize() -> readChunkSize
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource:
    415:420:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,long) -> <init>
    443:451:void close() -> close
    423:439:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink -> okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink:
    313:314:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    313:313:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.internal.http1.Http1ExchangeCodec$1) -> <init>
    333:337:void close() -> close
    328:330:void flush() -> flush
    318:318:okio.Timeout timeout() -> timeout
    322:325:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource:
    520:520:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    520:520:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.internal.http1.Http1ExchangeCodec$1) -> <init>
    539:544:void close() -> close
    525:535:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
    19:41:void <clinit>() -> <clinit>
    45:47:void <init>(java.lang.String,int,int) -> <init>
    50:53:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
    19:19:okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    19:19:okhttp3.internal.http2.ErrorCode[] values() -> values
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
    24:36:void <clinit>() -> <clinit>
    47:48:void <init>(java.lang.String,java.lang.String) -> <init>
    51:52:void <init>(okio.ByteString,java.lang.String) -> <init>
    54:58:void <init>(okio.ByteString,okio.ByteString) -> <init>
    61:66:boolean equals(java.lang.Object) -> equals
    70:73:int hashCode() -> hashCode
    77:77:java.lang.String toString() -> toString
okhttp3.internal.http2.Hpack -> okhttp3.internal.http2.Hpack:
    47:354:void <clinit>() -> <clinit>
    596:602:okio.ByteString checkLowercase(okio.ByteString) -> checkLowercase
    357:363:java.util.Map nameToFirstIndex() -> nameToFirstIndex
okhttp3.internal.http2.Hpack$Reader -> okhttp3.internal.http2.Hpack$Reader:
    131:132:void <init>(int,okio.Source) -> <init>
    117:138:void <init>(int,int,okio.Source) -> <init>
    145:152:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    155:159:void clearDynamicTable() -> clearDynamicTable
    233:233:int dynamicTableIndex(int) -> dynamicTableIndex
    163:176:int evictToRecoverBytes(int) -> evictToRecoverBytes
    213:215:java.util.List getAndResetHeaderList() -> getAndResetHeaderList
    262:270:okio.ByteString getName(int) -> getName
    280:312:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    275:275:boolean isStaticHeader(int) -> isStaticHeader
    315:315:int readByte() -> readByte
    342:349:okio.ByteString readByteString() -> readByteString
    184:210:void readHeaders() -> readHeaders
    219:229:void readIndexedHeader(int) -> readIndexedHeader
    319:337:int readInt(int,int) -> readInt
    250:253:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    256:259:void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    237:240:void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    243:246:void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
okhttp3.internal.http2.Hpack$Writer -> okhttp3.internal.http2.Hpack$Writer:
    397:398:void <init>(okio.Buffer) -> <init>
    383:405:void <init>(int,boolean,okio.Buffer) -> <init>
    581:588:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    408:412:void clearDynamicTable() -> clearDynamicTable
    416:430:int evictToRecoverBytes(int) -> evictToRecoverBytes
    434:456:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    565:578:void setHeaderTableSizeSetting(int) -> setHeaderTableSizeSetting
    552:562:void writeByteString(okio.ByteString) -> writeByteString
    461:528:void writeHeaders(java.util.List) -> writeHeaders
    533:549:void writeInt(int,int,int) -> writeInt
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
    24:103:void <clinit>() -> <clinit>
    105:106:void <init>() -> <init>
    147:165:java.lang.String formatFlags(byte,byte) -> formatFlags
    135:137:java.lang.String frameLog(boolean,int,int,byte,byte) -> frameLog
    109:109:java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> illegalArgument
    113:113:java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> ioException
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
    62:89:void <clinit>() -> <clinit>
    99:893:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    62:62:void access$000(okhttp3.internal.http2.Http2Connection,java.io.IOException) -> access$000
    62:62:long access$100(okhttp3.internal.http2.Http2Connection) -> access$100
    62:62:long access$108(okhttp3.internal.http2.Http2Connection) -> access$108
    62:62:long access$200(okhttp3.internal.http2.Http2Connection) -> access$200
    62:62:long access$208(okhttp3.internal.http2.Http2Connection) -> access$208
    62:62:boolean access$300(okhttp3.internal.http2.Http2Connection) -> access$300
    62:62:boolean access$302(okhttp3.internal.http2.Http2Connection,boolean) -> access$302
    62:62:java.util.concurrent.ExecutorService access$400() -> access$400
    62:62:java.util.concurrent.ScheduledExecutorService access$500(okhttp3.internal.http2.Http2Connection) -> access$500
    62:62:long access$608(okhttp3.internal.http2.Http2Connection) -> access$608
    62:62:long access$708(okhttp3.internal.http2.Http2Connection) -> access$708
    468:469:void close() -> close
    472:510:void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close
    513:514:void failConnection(java.io.IOException) -> failConnection
    439:440:void flush() -> flush
    198:198:okhttp3.internal.http2.Http2Stream getStream(int) -> getStream
    553:559:boolean isHealthy(long) -> isHealthy
    208:208:int maxConcurrentStreams() -> maxConcurrentStreams
    238:238:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    243:278:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> newStream
    953:971:void pushDataLater(int,okio.BufferedSource,int,boolean) -> pushDataLater
    984:988:void pushExecutorExecute(okhttp3.internal.NamedRunnable) -> pushExecutorExecute
    927:945:void pushHeadersLater(int,java.util.List,boolean) -> pushHeadersLater
    896:922:void pushRequestLater(int,java.util.List) -> pushRequestLater
    974:982:void pushResetLater(int,okhttp3.internal.http2.ErrorCode) -> pushResetLater
    889:889:boolean pushedStream(int) -> pushedStream
    201:204:okhttp3.internal.http2.Http2Stream removeStream(int) -> removeStream
    578:592:void sendDegradedPingLater() -> sendDegradedPingLater
    448:461:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    521:522:void start() -> start
    529:538:void start(boolean) -> start
    211:217:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
    300:330:void writeData(int,boolean,okio.Buffer,long) -> writeData
    283:284:void writeHeaders(int,boolean,java.util.List) -> writeHeaders
    411:415:void writePing(boolean,int,int) -> writePing
    349:350:void writeSynReset(int,okhttp3.internal.http2.ErrorCode) -> writeSynReset
    334:346:void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode) -> writeSynResetLater
    354:367:void writeWindowUpdateLater(int,long) -> writeWindowUpdateLater
okhttp3.internal.http2.Http2Connection$1 -> okhttp3.internal.http2.Http2Connection$1:
    334:334:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    337:341:void execute() -> execute
okhttp3.internal.http2.Http2Connection$2 -> okhttp3.internal.http2.Http2Connection$2:
    355:355:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long) -> <init>
    358:362:void execute() -> execute
okhttp3.internal.http2.Http2Connection$3 -> okhttp3.internal.http2.Http2Connection$3:
    584:584:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[]) -> <init>
    586:587:void execute() -> execute
okhttp3.internal.http2.Http2Connection$4 -> okhttp3.internal.http2.Http2Connection$4:
    905:905:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List) -> <init>
    907:917:void execute() -> execute
okhttp3.internal.http2.Http2Connection$5 -> okhttp3.internal.http2.Http2Connection$5:
    928:928:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean) -> <init>
    930:940:void execute() -> execute
okhttp3.internal.http2.Http2Connection$6 -> okhttp3.internal.http2.Http2Connection$6:
    957:957:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean) -> <init>
    960:969:void execute() -> execute
okhttp3.internal.http2.Http2Connection$7 -> okhttp3.internal.http2.Http2Connection$7:
    974:974:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    976:980:void execute() -> execute
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
    599:610:void <init>(boolean) -> <init>
    646:646:okhttp3.internal.http2.Http2Connection build() -> build
    631:632:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    641:642:okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> pingIntervalMillis
    623:627:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable -> okhttp3.internal.http2.Http2Connection$IntervalPingRunnable:
    387:389:void <init>(okhttp3.internal.http2.Http2Connection) -> <init>
    393:406:void execute() -> execute
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
    992:992:void <clinit>() -> <clinit>
    991:991:void <init>() -> <init>
    1014:1014:void onSettings(okhttp3.internal.http2.Http2Connection) -> onSettings
okhttp3.internal.http2.Http2Connection$Listener$1 -> okhttp3.internal.http2.Http2Connection$Listener$1:
    992:992:void <init>() -> <init>
    994:995:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$PingRunnable -> okhttp3.internal.http2.Http2Connection$PingRunnable:
    374:379:void <init>(okhttp3.internal.http2.Http2Connection,boolean,int,int) -> <init>
    382:383:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$ReaderRunnable:
    657:660:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> <init>
    811:811:void ackSettings() -> ackSettings
    774:807:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    684:699:void data(boolean,int,okio.BufferedSource,int) -> data
    663:680:void execute() -> execute
    836:853:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    703:748:void headers(boolean,int,int,java.util.List) -> headers
    814:833:void ping(boolean,int,int) -> ping
    874:874:void priority(int,int,int,boolean) -> priority
    878:879:void pushPromise(int,int,java.util.List) -> pushPromise
    751:759:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    763:771:void settings(boolean,okhttp3.internal.http2.Settings) -> settings
    856:869:void windowUpdate(int,long) -> windowUpdate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$1:
    728:728:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream) -> <init>
    731:740:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$2:
    763:763:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],boolean,okhttp3.internal.http2.Settings) -> <init>
    765:766:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$3:
    802:802:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[]) -> <init>
    804:805:void execute() -> execute
okhttp3.internal.http2.Http2ExchangeCodec -> okhttp3.internal.http2.Http2ExchangeCodec:
    63:76:void <clinit>() -> <clinit>
    94:101:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.Interceptor$Chain,okhttp3.internal.http2.Http2Connection) -> <init>
    202:204:void cancel() -> cancel
    104:104:okhttp3.internal.connection.RealConnection connection() -> connection
    108:108:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    132:133:void finishRequest() -> finishRequest
    128:129:void flushRequest() -> flushRequest
    145:163:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    194:194:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    169:186:okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol) -> readHttp2HeadersList
    136:141:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    190:190:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    112:125:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2Reader -> okhttp3.internal.http2.Http2Reader:
    61:61:void <clinit>() -> <clinit>
    71:76:void <init>(okio.BufferedSource,boolean) -> <init>
    343:344:void close() -> close
    407:411:int lengthWithoutPadding(int,byte,short) -> lengthWithoutPadding
    96:165:boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> nextFrame
    79:92:void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> readConnectionPreface
    203:217:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readData
    318:332:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readGoAway
    190:198:java.util.List readHeaderBlock(int,short,byte,int) -> readHeaderBlock
    170:186:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readHeaders
    400:402:int readMedium(okio.BufferedSource) -> readMedium
    308:314:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPing
    221:224:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPriority
    227:232:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> readPriority
    295:304:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPushPromise
    236:244:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readRstStream
    248:291:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readSettings
    336:340:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readWindowUpdate
okhttp3.internal.http2.Http2Reader$ContinuationSource -> okhttp3.internal.http2.Http2Reader$ContinuationSource:
    360:362:void <init>(okio.BufferedSource) -> <init>
    384:384:void close() -> close
    365:376:long read(okio.Buffer,long) -> read
    387:396:void readContinuationHeader() -> readContinuationHeader
    380:380:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
    36:36:void <clinit>() -> <clinit>
    45:103:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    640:642:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    513:529:void cancelStreamIfNecessary() -> cancelStreamIfNecessary
    645:652:void checkOutNotClosed() -> checkOutNotClosed
    262:266:void close(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close
    281:294:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> closeInternal
    273:277:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    106:106:int getId() -> getId
    248:253:okio.Sink getSink() -> getSink
    238:238:okio.Source getSource() -> getSource
    134:135:boolean isLocallyInitiated() -> isLocallyInitiated
    120:129:boolean isOpen() -> isOpen
    229:229:okio.Timeout readTimeout() -> readTimeout
    298:300:void receiveData(okio.BufferedSource,int) -> receiveData
    307:325:void receiveHeaders(okhttp3.Headers,boolean) -> receiveHeaders
    327:332:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    147:159:okhttp3.Headers takeHeaders() -> takeHeaders
    660:665:void waitForIo() -> waitForIo
    233:233:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$FramingSink -> okhttp3.internal.http2.Http2Stream$FramingSink:
    532:532:void <clinit>() -> <clinit>
    532:539:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    605:633:void close() -> close
    565:587:void emitFrame(boolean) -> emitFrame
    590:598:void flush() -> flush
    601:601:okio.Timeout timeout() -> timeout
    552:557:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramingSource -> okhttp3.internal.http2.Http2Stream$FramingSource:
    339:339:void <clinit>() -> <clinit>
    341:366:void <init>(okhttp3.internal.http2.Http2Stream,long) -> <init>
    339:339:okhttp3.Headers access$202(okhttp3.internal.http2.Http2Stream$FramingSource,okhttp3.Headers) -> access$202
    499:509:void close() -> close
    369:429:long read(okio.Buffer,long) -> read
    443:491:void receive(okio.BufferedSource,long) -> receive
    494:494:okio.Timeout timeout() -> timeout
    434:436:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$StreamTimeout:
    671:671:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    686:687:void exitAndThrowIfTimedOut() -> exitAndThrowIfTimedOut
    678:682:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    673:675:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> okhttp3.internal.http2.Http2Writer:
    47:47:void <clinit>() -> <clinit>
    57:63:void <init>(okio.BufferedSink,boolean) -> <init>
    76:88:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    259:262:void close() -> close
    65:73:void connectionPreface() -> connectionPreface
    151:156:void data(boolean,int,okio.Buffer,int) -> data
    159:164:void dataFrame(int,byte,okio.Buffer,int) -> dataFrame
    119:122:void flush() -> flush
    248:257:void frameHeader(int,int,byte,byte) -> frameHeader
    213:227:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> goAway
    280:293:void headers(boolean,int,java.util.List) -> headers
    139:139:int maxDataLength() -> maxDataLength
    192:202:void ping(boolean,int,int) -> ping
    104:117:void pushPromise(int,int,java.util.List) -> pushPromise
    125:135:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    167:186:void settings(okhttp3.internal.http2.Settings) -> settings
    233:245:void windowUpdate(int,long) -> windowUpdate
    271:277:void writeContinuationFrames(int,long) -> writeContinuationFrames
    265:268:void writeMedium(okio.BufferedSink,int) -> writeMedium
okhttp3.internal.http2.Huffman -> okhttp3.internal.http2.Huffman:
    37:79:void <clinit>() -> <clinit>
    85:89:void <init>() -> <init>
    173:194:void addCode(int,int,byte) -> addCode
    167:170:void buildTree() -> buildTree
    129:163:byte[] decode(byte[]) -> decode
    92:115:void encode(okio.ByteString,okio.BufferedSink) -> encode
    118:125:int encodedLength(okio.ByteString) -> encodedLength
    82:82:okhttp3.internal.http2.Huffman get() -> get
okhttp3.internal.http2.Huffman$Node -> okhttp3.internal.http2.Huffman$Node:
    208:212:void <init>() -> <init>
    220:225:void <init>(int,int) -> <init>
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
    76:76:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$1 -> okhttp3.internal.http2.PushObserver$1:
    76:76:void <init>() -> <init>
    88:89:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
    83:83:boolean onHeaders(int,java.util.List,boolean) -> onHeaders
    79:79:boolean onRequest(int,java.util.List) -> onRequest
    93:93:void onReset(int,okhttp3.internal.http2.ErrorCode) -> onReset
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
    24:51:void <init>() -> <init>
    54:56:void clear() -> clear
    77:77:int get(int) -> get
    87:88:int getHeaderTableSize() -> getHeaderTableSize
    113:114:int getInitialWindowSize() -> getInitialWindowSize
    98:99:int getMaxConcurrentStreams(int) -> getMaxConcurrentStreams
    103:104:int getMaxFrameSize(int) -> getMaxFrameSize
    71:72:boolean isSet(int) -> isSet
    122:126:void merge(okhttp3.internal.http2.Settings) -> merge
    59:66:okhttp3.internal.http2.Settings set(int,int) -> set
    82:82:int size() -> size
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
    25:27:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.platform.Android10Platform -> okhttp3.internal.platform.Android10Platform:
    32:33:void <init>(java.lang.Class) -> <init>
    73:87:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    40:53:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    56:59:void enableSessionTickets(javax.net.ssl.SSLSocket) -> enableSessionTickets
    63:69:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline0 -> okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void okhttp3.internal.platform.Android10Platform$$InternalSyntheticApiModelOutline$7$4e3be583c1cdf7fc9e20ab3a53edc3624dc9680eee7691b5559f99ebd26120d9$0.m(javax.net.ssl.SSLParameters,java.lang.String[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline1 -> okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String okhttp3.internal.platform.Android10Platform$$InternalSyntheticApiModelOutline$7$85d37ff761242f37ce8471e175072592d60c2cc9df03b4d538b4fca24215f338$0.m(javax.net.ssl.SSLSocket) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.AndroidPlatform -> okhttp3.internal.platform.AndroidPlatform:
    56:66:void <init>(java.lang.Class,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    195:199:boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> api23IsCleartextTrafficPermitted
    184:188:boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> api24IsCleartextTrafficPermitted
    205:212:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    217:243:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    251:256:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    110:126:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    71:84:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    408:426:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    432:435:int getSdkInt() -> getSdkInt
    129:136:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    157:157:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    170:177:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    141:154:void log(int,java.lang.String,java.lang.Throwable) -> log
    161:166:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner -> okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner:
    269:272:void <init>(java.lang.Object,java.lang.reflect.Method) -> <init>
    278:286:java.util.List clean(java.util.List,java.lang.String) -> clean
    291:291:boolean equals(java.lang.Object) -> equals
    295:295:int hashCode() -> hashCode
okhttp3.internal.platform.AndroidPlatform$CloseGuard -> okhttp3.internal.platform.AndroidPlatform$CloseGuard:
    309:313:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    316:324:java.lang.Object createAndOpen(java.lang.String) -> createAndOpen
    345:354:okhttp3.internal.platform.AndroidPlatform$CloseGuard get() -> get
    328:336:boolean warnIfOpen(java.lang.Object) -> warnIfOpen
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex -> okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex:
    369:372:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    389:397:boolean equals(java.lang.Object) -> equals
    376:384:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    401:401:int hashCode() -> hashCode
okhttp3.internal.platform.ConscryptPlatform -> okhttp3.internal.platform.ConscryptPlatform:
    36:37:void <init>() -> <init>
    107:115:okhttp3.internal.platform.ConscryptPlatform buildIfSupported() -> buildIfSupported
    121:124:void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory) -> configureSslSocketFactory
    68:81:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    42:42:java.security.Provider getProvider() -> getProvider
    93:99:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    84:87:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk8WithJettyBootPlatform -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform:
    37:43:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    60:64:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    84:97:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    47:56:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    68:77:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider:
    112:114:void <init>(java.util.List) -> <init>
    117:145:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.Jdk9Platform -> okhttp3.internal.platform.Jdk9Platform:
    33:36:void <init>(java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    92:101:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    42:53:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    58:76:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
    79:82:void <clinit>() -> <clinit>
    78:78:void <init>() -> <init>
    121:121:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    163:169:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    173:173:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    303:303:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    261:268:byte[] concatLengthPrefixed(java.util.List) -> concatLengthPrefixed
    307:307:void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory) -> configureSslSocketFactory
    114:114:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    130:131:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    241:253:okhttp3.internal.platform.Platform findAndroidPlatform() -> findAndroidPlatform
    216:237:okhttp3.internal.platform.Platform findJvmPlatform() -> findJvmPlatform
    202:205:okhttp3.internal.platform.Platform findPlatform() -> findPlatform
    85:85:okhttp3.internal.platform.Platform get() -> get
    296:298:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    125:125:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    148:151:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    212:212:boolean isAndroid() -> isAndroid
    139:139:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    191:197:boolean isConscryptPreferred() -> isConscryptPreferred
    134:136:void log(int,java.lang.String,java.lang.Throwable) -> log
    155:160:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    310:310:java.lang.String toString() -> toString
okhttp3.internal.proxy.NullProxySelector -> okhttp3.internal.proxy.NullProxySelector:
    29:29:void <init>() -> <init>
    38:38:void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException) -> connectFailed
    31:34:java.util.List select(java.net.URI) -> select
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> okhttp3.internal.publicsuffix.PublicSuffixDatabase:
    38:44:void <clinit>() -> <clinit>
    35:50:void <init>() -> <init>
    197:278:java.lang.String binarySearchBytes(byte[],byte[][],int) -> binarySearchBytes
    110:193:java.lang.String[] findMatchingRule(java.lang.String[]) -> findMatchingRule
    60:60:okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> get
    79:106:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> getEffectiveTldPlusOne
    312:331:void readTheList() -> readTheList
    287:303:void readTheListUninterruptibly() -> readTheListUninterruptibly
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
    43:45:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    56:101:java.util.List clean(java.util.List,java.lang.String) -> clean
    120:122:boolean equals(java.lang.Object) -> equals
    116:116:int hashCode() -> hashCode
    106:111:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> verifySignature
okhttp3.internal.tls.BasicTrustRootIndex -> okhttp3.internal.tls.BasicTrustRootIndex:
    30:41:void <init>(java.security.cert.X509Certificate[]) -> <init>
    61:63:boolean equals(java.lang.Object) -> equals
    44:57:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    68:68:int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
    36:36:void <init>() -> <init>
    41:41:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
    37:37:void <clinit>() -> <clinit>
    42:43:void <init>() -> <init>
    85:90:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    94:118:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> getSubjectAltNames
    48:51:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    56:58:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    74:81:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> verifyHostname
    132:214:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
    63:69:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> verifyIpAddress
okio.AsyncTimeout -> okio.AsyncTimeout:
    50:51:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    343:369:okio.AsyncTimeout awaitTimeout() -> awaitTimeout
    127:137:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    73:81:void enter() -> enter
    120:122:boolean exit() -> exit
    275:277:void exit(boolean) -> exit
    285:286:java.io.IOException exit(java.io.IOException) -> exit
    295:299:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    145:145:long remainingNanos(long) -> remainingNanos
    85:116:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
    160:160:okio.Sink sink(okio.Sink) -> sink
    232:232:okio.Source source(okio.Source) -> source
    153:153:void timedOut() -> timedOut
okio.AsyncTimeout$1 -> okio.AsyncTimeout$1:
    160:160:void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    205:215:void close() -> close
    192:202:void flush() -> flush
    218:218:okio.Timeout timeout() -> timeout
    222:222:java.lang.String toString() -> toString
    162:189:void write(okio.Buffer,long) -> write
okio.AsyncTimeout$2 -> okio.AsyncTimeout$2:
    232:232:void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    248:258:void close() -> close
    234:243:long read(okio.Buffer,long) -> read
    261:261:okio.Timeout timeout() -> timeout
    265:265:java.lang.String toString() -> toString
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
    304:306:void <init>() -> <init>
    312:329:void run() -> run
okio.Base64 -> okio.Base64:
    110:117:void <clinit>() -> <clinit>
    125:125:java.lang.String encode(byte[]) -> encode
    133:159:java.lang.String encode(byte[],byte[]) -> encode
okio.Buffer -> okio.Buffer:
    55:55:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    71:71:okio.Buffer buffer() -> buffer
    935:939:void clear() -> clear
    54:54:java.lang.Object clone() -> clone
    1819:1828:okio.Buffer clone() -> clone
    1678:1678:void close() -> close
    280:289:long completeSegmentByteCount() -> completeSegmentByteCount
    182:208:okio.Buffer copyTo(okio.Buffer,long,long) -> copyTo
    54:54:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    101:101:okio.Buffer emitCompleteSegments() -> emitCompleteSegments
    1764:1793:boolean equals(java.lang.Object) -> equals
    109:109:boolean exhausted() -> exhausted
    1671:1671:void flush() -> flush
    75:75:okio.Buffer getBuffer() -> getBuffer
    315:326:byte getByte(long) -> getByte
    1797:1806:int hashCode() -> hashCode
    1418:1418:long indexOf(byte) -> indexOf
    1430:1482:long indexOf(byte,long,long) -> indexOf
    125:125:java.io.InputStream inputStream() -> inputStream
    1674:1674:boolean isOpen() -> isOpen
    893:908:int read(byte[],int,int) -> read
    912:926:int read(java.nio.ByteBuffer) -> read
    1409:1414:long read(okio.Buffer,long) -> read
    293:310:byte readByte() -> readByte
    862:864:byte[] readByteArray() -> readByteArray
    869:876:byte[] readByteArray(long) -> readByteArray
    553:553:okio.ByteString readByteString() -> readByteString
    557:557:okio.ByteString readByteString(long) -> readByteString
    884:890:void readFully(byte[]) -> readFully
    497:549:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    361:389:int readInt() -> readInt
    431:431:int readIntLe() -> readIntLe
    332:357:short readShort() -> readShort
    427:427:short readShortLe() -> readShortLe
    709:711:java.lang.String readString(java.nio.charset.Charset) -> readString
    716:738:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    697:699:java.lang.String readUtf8() -> readUtf8
    704:704:java.lang.String readUtf8(long) -> readUtf8
    771:781:java.lang.String readUtf8Line(long) -> readUtf8Line
    752:752:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    756:767:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    113:114:void require(long) -> require
    561:571:int select(okio.Options) -> select
    587:676:int selectPrefix(okio.Options,boolean) -> selectPrefix
    67:67:long size() -> size
    943:957:void skip(long) -> skip
    1833:1836:okio.ByteString snapshot() -> snapshot
    1843:1844:okio.ByteString snapshot(int) -> snapshot
    1681:1681:okio.Timeout timeout() -> timeout
    1814:1814:java.lang.String toString() -> toString
    1303:1314:okio.Segment writableSegment(int) -> writableSegment
    54:54:okio.BufferedSink write(byte[]) -> write
    54:54:okio.BufferedSink write(byte[],int,int) -> write
    960:962:okio.Buffer write(okio.ByteString) -> write
    1103:1104:okio.Buffer write(byte[]) -> write
    1108:1123:okio.Buffer write(byte[],int,int) -> write
    1127:1142:int write(java.nio.ByteBuffer) -> write
    1368:1406:void write(okio.Buffer,long) -> write
    1146:1151:long writeAll(okio.Source) -> writeAll
    54:54:okio.BufferedSink writeByte(int) -> writeByte
    1164:1167:okio.Buffer writeByte(int) -> writeByte
    54:54:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    1280:1295:okio.Buffer writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    54:54:okio.BufferedSink writeInt(int) -> writeInt
    1186:1195:okio.Buffer writeInt(int) -> writeInt
    54:54:okio.BufferedSink writeShort(int) -> writeShort
    1171:1178:okio.Buffer writeShort(int) -> writeShort
    1087:1099:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    54:54:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    966:966:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    970:1042:okio.Buffer writeUtf8(java.lang.String,int,int) -> writeUtf8
    1046:1078:okio.Buffer writeUtf8CodePoint(int) -> writeUtf8CodePoint
okio.Buffer$2 -> okio.Buffer$2:
    125:125:void <init>(okio.Buffer) -> <init>
    136:136:int available() -> available
    140:140:void close() -> close
    127:128:int read() -> read
    132:132:int read(byte[],int,int) -> read
    143:143:java.lang.String toString() -> toString
okio.ByteString -> okio.ByteString:
    53:58:void <clinit>() -> <clinit>
    64:66:void <init>(byte[]) -> <init>
    131:131:java.lang.String base64() -> base64
    513:524:int codePointIndexToCharIndex(java.lang.String,int) -> codePointIndexToCharIndex
    52:52:int compareTo(java.lang.Object) -> compareTo
    473:482:int compareTo(okio.ByteString) -> compareTo
    220:229:okio.ByteString decodeHex(java.lang.String) -> decodeHex
    233:236:int decodeHexDigit(char) -> decodeHexDigit
    156:158:okio.ByteString digest(java.lang.String) -> digest
    99:102:okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    461:464:boolean equals(java.lang.Object) -> equals
    340:340:byte getByte(int) -> getByte
    468:469:int hashCode() -> hashCode
    209:215:java.lang.String hex() -> hex
    72:73:okio.ByteString of(byte[]) -> of
    386:386:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    395:397:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    141:141:okio.ByteString sha1() -> sha1
    146:146:okio.ByteString sha256() -> sha256
    347:347:int size() -> size
    401:401:boolean startsWith(okio.ByteString) -> startsWith
    321:335:okio.ByteString substring(int,int) -> substring
    264:279:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    354:354:byte[] toByteArray() -> toByteArray
    490:509:java.lang.String toString() -> toString
    114:116:java.lang.String utf8() -> utf8
    377:378:void write(okio.Buffer) -> write
okio.ForwardingSink -> okio.ForwardingSink:
    24:27:void <init>(okio.Sink) -> <init>
    47:48:void close() -> close
    39:40:void flush() -> flush
    43:43:okio.Timeout timeout() -> timeout
    51:51:java.lang.String toString() -> toString
    35:36:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
    24:27:void <init>(okio.Source) -> <init>
    43:44:void close() -> close
    31:31:okio.Source delegate() -> delegate
    39:39:okio.Timeout timeout() -> timeout
    47:47:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
    25:28:void <init>(okio.Timeout) -> <init>
    66:66:okio.Timeout clearDeadline() -> clearDeadline
    62:62:okio.Timeout clearTimeout() -> clearTimeout
    54:54:long deadlineNanoTime() -> deadlineNanoTime
    58:58:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    32:32:okio.Timeout delegate() -> delegate
    50:50:boolean hasDeadline() -> hasDeadline
    36:38:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    70:71:void throwIfReached() -> throwIfReached
    42:42:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
okio.GzipSource -> okio.GzipSource:
    39:65:void <init>(okio.Source) -> <init>
    204:208:void checkEqual(java.lang.String,int,int) -> checkEqual
    182:183:void close() -> close
    114:166:void consumeHeader() -> consumeHeader
    173:175:void consumeTrailer() -> consumeTrailer
    68:104:long read(okio.Buffer,long) -> read
    178:178:okio.Timeout timeout() -> timeout
    188:201:void updateCrc(okio.Buffer,long,long) -> updateCrc
okio.InflaterSource -> okio.InflaterSource:
    48:53:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    124:128:void close() -> close
    57:87:long read(okio.Buffer,long) -> read
    96:108:boolean refill() -> refill
    113:117:void releaseInflatedBytes() -> releaseInflatedBytes
    120:120:okio.Timeout timeout() -> timeout
okio.Okio -> okio.Okio:
    40:40:void <clinit>() -> <clinit>
    42:43:void <init>() -> <init>
    51:51:okio.BufferedSource buffer(okio.Source) -> buffer
    60:60:okio.BufferedSink buffer(okio.Sink) -> buffer
    269:270:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    69:72:okio.Sink sink(java.io.OutputStream,okio.Timeout) -> sink
    116:120:okio.Sink sink(java.net.Socket) -> sink
    125:125:okio.Source source(java.io.InputStream) -> source
    129:132:okio.Source source(java.io.InputStream,okio.Timeout) -> source
    229:233:okio.Source source(java.net.Socket) -> source
    237:237:okio.AsyncTimeout timeout(java.net.Socket) -> timeout
okio.Okio$1 -> okio.Okio$1:
    72:72:void <init>(okio.Timeout,java.io.OutputStream) -> <init>
    97:98:void close() -> close
    93:94:void flush() -> flush
    101:101:okio.Timeout timeout() -> timeout
    105:105:java.lang.String toString() -> toString
    74:90:void write(okio.Buffer,long) -> write
okio.Okio$2 -> okio.Okio$2:
    132:132:void <init>(okio.Timeout,java.io.InputStream) -> <init>
    159:160:void close() -> close
    134:154:long read(okio.Buffer,long) -> read
    163:163:okio.Timeout timeout() -> timeout
    167:167:java.lang.String toString() -> toString
okio.Okio$4 -> okio.Okio$4:
    237:237:void <init>(java.net.Socket) -> <init>
    239:243:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    248:260:void timedOut() -> timedOut
okio.Options -> okio.Options:
    30:33:void <init>(okio.ByteString[],int[]) -> <init>
    123:238:void buildTrieRecursive(long,okio.Buffer,int,java.util.List,int,int,java.util.List) -> buildTrieRecursive
    26:26:java.lang.Object get(int) -> get
    241:241:okio.ByteString get(int) -> get
    249:249:int intCount(okio.Buffer) -> intCount
    36:88:okio.Options of(okio.ByteString[]) -> of
    245:245:int size() -> size
okio.RealBufferedSink -> okio.RealBufferedSink:
    25:32:void <init>(okio.Sink) -> <init>
    35:35:okio.Buffer buffer() -> buffer
    234:255:void close() -> close
    177:180:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    222:227:void flush() -> flush
    230:230:boolean isOpen() -> isOpen
    258:258:okio.Timeout timeout() -> timeout
    262:262:java.lang.String toString() -> toString
    40:43:void write(okio.Buffer,long) -> write
    84:86:okio.BufferedSink write(byte[]) -> write
    90:92:okio.BufferedSink write(byte[],int,int) -> write
    96:99:int write(java.nio.ByteBuffer) -> write
    123:125:okio.BufferedSink writeByte(int) -> writeByte
    171:173:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    141:143:okio.BufferedSink writeInt(int) -> writeInt
    129:131:okio.BufferedSink writeShort(int) -> writeShort
    52:54:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
okio.RealBufferedSource -> okio.RealBufferedSource:
    28:35:void <init>(okio.Source) -> <init>
    38:38:okio.Buffer buffer() -> buffer
    474:478:void close() -> close
    60:61:boolean exhausted() -> exhausted
    42:42:okio.Buffer getBuffer() -> getBuffer
    337:337:long indexOf(byte) -> indexOf
    345:363:long indexOf(byte,long,long) -> indexOf
    432:432:java.io.InputStream inputStream() -> inputStream
    470:470:boolean isOpen() -> isOpen
    46:56:long read(okio.Buffer,long) -> read
    153:158:int read(java.nio.ByteBuffer) -> read
    78:79:byte readByte() -> readByte
    116:117:byte[] readByteArray(long) -> readByteArray
    88:89:okio.ByteString readByteString(long) -> readByteString
    126:138:void readFully(byte[]) -> readFully
    307:321:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    269:270:int readInt() -> readInt
    274:275:int readIntLe() -> readIntLe
    259:260:short readShort() -> readShort
    264:265:short readShortLe() -> readShortLe
    201:204:java.lang.String readString(java.nio.charset.Charset) -> readString
    224:224:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    228:240:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    69:74:boolean request(long) -> request
    65:66:void require(long) -> require
    93:107:int select(okio.Options) -> select
    325:334:void skip(long) -> skip
    481:481:okio.Timeout timeout() -> timeout
    485:485:java.lang.String toString() -> toString
okio.RealBufferedSource$1 -> okio.RealBufferedSource$1:
    432:432:void <init>(okio.RealBufferedSource) -> <init>
    455:456:int available() -> available
    460:461:void close() -> close
    434:439:int read() -> read
    443:451:int read(byte[],int,int) -> read
    464:464:java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
    62:66:void <init>() -> <init>
    68:74:void <init>(byte[],int,int,boolean,boolean) -> <init>
    151:159:void compact() -> compact
    96:101:okio.Segment pop() -> pop
    109:113:okio.Segment push(okio.Segment) -> push
    82:83:okio.Segment sharedCopy() -> sharedCopy
    125:143:okio.Segment split(int) -> split
    163:176:void writeTo(okio.Segment,int) -> writeTo
okio.SegmentPool -> okio.SegmentPool:
    35:36:void <init>() -> <init>
    52:61:void recycle(okio.Segment) -> recycle
    39:48:okio.Segment take() -> take
okio.SegmentedByteString -> okio.SegmentedByteString:
    57:87:void <init>(okio.Buffer,int) -> <init>
    98:98:java.lang.String base64() -> base64
    265:268:boolean equals(java.lang.Object) -> equals
    146:150:byte getByte(int) -> getByte
    272:288:int hashCode() -> hashCode
    102:102:java.lang.String hex() -> hex
    211:224:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    228:244:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    156:157:int segment(int) -> segment
    118:118:okio.ByteString sha1() -> sha1
    122:122:okio.ByteString sha256() -> sha256
    161:161:int size() -> size
    142:142:okio.ByteString substring(int,int) -> substring
    106:106:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    165:174:byte[] toByteArray() -> toByteArray
    257:257:okio.ByteString toByteString() -> toByteString
    292:292:java.lang.String toString() -> toString
    90:90:java.lang.String utf8() -> utf8
    193:207:void write(okio.Buffer) -> write
okio.Timeout -> okio.Timeout:
    48:48:void <clinit>() -> <clinit>
    69:70:void <init>() -> <init>
    134:135:okio.Timeout clearDeadline() -> clearDeadline
    128:129:okio.Timeout clearTimeout() -> clearTimeout
    104:105:long deadlineNanoTime() -> deadlineNanoTime
    114:116:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    94:94:boolean hasDeadline() -> hasDeadline
    144:152:void throwIfReached() -> throwIfReached
    81:84:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    89:89:long timeoutNanos() -> timeoutNanos
okio.Timeout$1 -> okio.Timeout$1:
    48:48:void <init>() -> <init>
    54:54:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    58:58:void throwIfReached() -> throwIfReached
    50:50:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
okio.Util -> okio.Util:
    22:22:void <clinit>() -> <clinit>
    75:78:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> arrayRangeEquals
    28:32:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    42:42:int reverseBytesInt(int) -> reverseBytesInt
    35:38:short reverseBytesShort(short) -> reverseBytesShort
    65:66:void sneakyRethrow(java.lang.Throwable) -> sneakyRethrow
    70:70:void sneakyThrow2(java.lang.Throwable) -> sneakyThrow2
org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi -> org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:
    java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) -> generatePrivate
      # {"id":"com.android.tools.r8.synthesized"}
    java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo) -> generatePublic
      # {"id":"com.android.tools.r8.synthesized"}
org.cgutman.shieldcontrollerextensions.IExposedControllerBinderWrapper -> org.cgutman.shieldcontrollerextensions.IExposedControllerBinderWrapper:
    10:12:void <init>(android.os.IBinder) -> <init>
    49:62:int getInputDeviceId(java.lang.String) -> getInputDeviceId
    15:28:int registerListener(org.cgutman.shieldcontrollerextensions.IExposedControllerManagerListener$Stub) -> registerListener
    67:82:boolean rumble(java.lang.String,int,int) -> rumble
    32:45:boolean unregisterListener(int) -> unregisterListener
org.cgutman.shieldcontrollerextensions.IExposedControllerManagerListener$Stub -> org.cgutman.shieldcontrollerextensions.IExposedControllerManagerListener$Stub:
    15:17:void <init>() -> <init>
    21:21:android.os.IBinder asBinder() -> asBinder
    25:48:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.cgutman.shieldcontrollerextensions.SceManager -> org.cgutman.shieldcontrollerextensions.SceManager:
    21:161:void <init>(android.content.Context) -> <init>
    17:17:org.cgutman.shieldcontrollerextensions.IExposedControllerBinderWrapper access$000(org.cgutman.shieldcontrollerextensions.SceManager) -> access$000
    17:17:org.cgutman.shieldcontrollerextensions.IExposedControllerBinderWrapper access$002(org.cgutman.shieldcontrollerextensions.SceManager,org.cgutman.shieldcontrollerextensions.IExposedControllerBinderWrapper) -> access$002
    17:17:int access$102(org.cgutman.shieldcontrollerextensions.SceManager,int) -> access$102
    17:17:org.cgutman.shieldcontrollerextensions.IExposedControllerManagerListener$Stub access$200(org.cgutman.shieldcontrollerextensions.SceManager) -> access$200
    17:17:void access$300(org.cgutman.shieldcontrollerextensions.SceManager) -> access$300
    17:17:java.util.concurrent.ConcurrentHashMap access$400(org.cgutman.shieldcontrollerextensions.SceManager) -> access$400
    17:17:java.util.concurrent.ConcurrentHashMap access$500(org.cgutman.shieldcontrollerextensions.SceManager) -> access$500
    17:17:org.cgutman.shieldcontrollerextensions.SceManager$SceDeviceListener access$600(org.cgutman.shieldcontrollerextensions.SceManager) -> access$600
    17:17:java.util.concurrent.ConcurrentHashMap access$700(org.cgutman.shieldcontrollerextensions.SceManager) -> access$700
    385:402:void clearDeviceState() -> clearDeviceState
    426:426:java.lang.String getControllerToken(android.view.InputDevice) -> getControllerToken
    188:234:boolean rumble(android.view.InputDevice,int,int) -> rumble
    367:380:boolean start() -> start
    408:423:void stop() -> stop
org.cgutman.shieldcontrollerextensions.SceManager$1 -> org.cgutman.shieldcontrollerextensions.SceManager$1:
    21:21:void <init>(org.cgutman.shieldcontrollerextensions.SceManager) -> <init>
    24:31:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    35:39:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.cgutman.shieldcontrollerextensions.SceManager$2 -> org.cgutman.shieldcontrollerextensions.SceManager$2:
    52:52:void <init>(org.cgutman.shieldcontrollerextensions.SceManager) -> <init>
    56:72:void onDeviceAdded(java.lang.String) -> onDeviceAdded
    77:133:void onDeviceChanged(java.lang.String,int) -> onDeviceChanged
    137:150:void onDeviceRemoved(java.lang.String) -> onDeviceRemoved
org.cgutman.shieldcontrollerextensions.SceManager$3 -> org.cgutman.shieldcontrollerextensions.SceManager$3:
    202:202:void <init>(org.cgutman.shieldcontrollerextensions.SceManager,java.lang.String,int,int) -> <init>
    206:224:void run() -> run
org.jcodec.codecs.h264.H264Const -> org.jcodec.codecs.h264.H264Const:
    23:635:void <clinit>() -> <clinit>
    596:605:int[][] buildPixSplitMap2x2() -> buildPixSplitMap2x2
    582:592:int[][] buildPixSplitMap4x4() -> buildPixSplitMap4x4
    613:613:int coeffToken(int,int) -> coeffToken
    501:505:int[] inverse(int[]) -> inverse
    573:579:void putBlk(int[],int,int,int,int,int,int[]) -> putBlk
org.jcodec.codecs.h264.H264Const$PartPred -> org.jcodec.codecs.h264.H264Const$PartPred:
    440:441:void <clinit>() -> <clinit>
    440:440:void <init>(java.lang.String,int) -> <init>
    440:440:org.jcodec.codecs.h264.H264Const$PartPred valueOf(java.lang.String) -> valueOf
    440:440:org.jcodec.codecs.h264.H264Const$PartPred[] values() -> values
org.jcodec.codecs.h264.H264Utils -> org.jcodec.codecs.h264.H264Utils:
    44:45:void <clinit>() -> <clinit>
    174:188:void escapeNALinplace(java.nio.ByteBuffer) -> escapeNALinplace
    698:701:org.jcodec.codecs.h264.io.model.SeqParameterSet readSPS(java.nio.ByteBuffer) -> readSPS
    191:204:int[] searchEscapeLocations(java.nio.ByteBuffer) -> searchEscapeLocations
    155:171:void unescapeNAL(java.nio.ByteBuffer) -> unescapeNAL
    690:694:java.nio.ByteBuffer writeSPS(org.jcodec.codecs.h264.io.model.SeqParameterSet,int) -> writeSPS
org.jcodec.codecs.h264.H264Utils2 -> org.jcodec.codecs.h264.H264Utils2:
    6:8:int golomb2Signed(int) -> golomb2Signed
org.jcodec.codecs.h264.decode.CAVLCReader -> org.jcodec.codecs.h264.decode.CAVLCReader:
    65:69:boolean readBool(org.jcodec.common.io.BitReader,java.lang.String) -> readBool
    23:27:int readNBit(org.jcodec.common.io.BitReader,int,java.lang.String) -> readNBit
    54:60:int readSE(org.jcodec.common.io.BitReader,java.lang.String) -> readSE
    31:42:int readUE(org.jcodec.common.io.BitReader) -> readUE
    46:50:int readUEtrace(org.jcodec.common.io.BitReader,java.lang.String) -> readUEtrace
org.jcodec.codecs.h264.decode.SliceHeaderReader -> org.jcodec.codecs.h264.decode.SliceHeaderReader:
    34:34:void <init>() -> <init>
org.jcodec.codecs.h264.io.model.AspectRatio -> org.jcodec.codecs.h264.io.model.AspectRatio:
    16:16:void <clinit>() -> <clinit>
    20:22:void <init>(int) -> <init>
    25:28:org.jcodec.codecs.h264.io.model.AspectRatio fromValue(int) -> fromValue
    32:32:int getValue() -> getValue
org.jcodec.codecs.h264.io.model.HRDParameters -> org.jcodec.codecs.h264.io.model.HRDParameters:
    10:10:void <init>() -> <init>
org.jcodec.codecs.h264.io.model.MBType -> org.jcodec.codecs.h264.io.model.MBType:
    12:42:void <clinit>() -> <clinit>
    47:50:void <init>(boolean,int) -> <init>
org.jcodec.codecs.h264.io.model.SeqParameterSet -> org.jcodec.codecs.h264.io.model.SeqParameterSet:
    35:35:void <init>() -> <init>
    166:175:int fromColor(org.jcodec.common.model.ColorSpace) -> fromColor
    152:162:org.jcodec.common.model.ColorSpace getColor(int) -> getColor
    179:242:org.jcodec.codecs.h264.io.model.SeqParameterSet read(java.nio.ByteBuffer) -> read
    380:398:org.jcodec.codecs.h264.io.model.HRDParameters readHRDParameters(org.jcodec.common.io.BitReader) -> readHRDParameters
    290:303:int[] readScalingList(org.jcodec.common.io.BitReader,int) -> readScalingList
    307:315:void readScalingListMatrix(org.jcodec.common.io.BitReader,org.jcodec.codecs.h264.io.model.SeqParameterSet) -> readScalingListMatrix
    318:376:org.jcodec.codecs.h264.io.model.VUIParameters readVUIParameters(org.jcodec.common.io.BitReader) -> readVUIParameters
    402:465:void write(java.nio.ByteBuffer) -> write
    531:545:void writeHRDParameters(org.jcodec.codecs.h264.io.model.HRDParameters,org.jcodec.common.io.BitWriter) -> writeHRDParameters
    247:286:void writeScalingList(org.jcodec.common.io.BitWriter,int[][],int) -> writeScalingList
    468:528:void writeVUIParameters(org.jcodec.codecs.h264.io.model.VUIParameters,org.jcodec.common.io.BitWriter) -> writeVUIParameters
org.jcodec.codecs.h264.io.model.VUIParameters -> org.jcodec.codecs.h264.io.model.VUIParameters:
    9:9:void <init>() -> <init>
org.jcodec.codecs.h264.io.model.VUIParameters$BitstreamRestriction -> org.jcodec.codecs.h264.io.model.VUIParameters$BitstreamRestriction:
    11:11:void <init>() -> <init>
org.jcodec.codecs.h264.io.write.CAVLCWriter -> org.jcodec.codecs.h264.io.write.CAVLCWriter:
    64:66:void writeBool(org.jcodec.common.io.BitWriter,boolean,java.lang.String) -> writeBool
    73:77:void writeNBit(org.jcodec.common.io.BitWriter,long,int,java.lang.String) -> writeNBit
    52:54:void writeSEtrace(org.jcodec.common.io.BitWriter,int,java.lang.String) -> writeSEtrace
    80:82:void writeTrailingBits(org.jcodec.common.io.BitWriter) -> writeTrailingBits
    28:40:void writeUE(org.jcodec.common.io.BitWriter,int) -> writeUE
    47:49:void writeUEtrace(org.jcodec.common.io.BitWriter,int,java.lang.String) -> writeUEtrace
org.jcodec.codecs.h264.io.write.SliceHeaderWriter -> org.jcodec.codecs.h264.io.write.SliceHeaderWriter:
    29:29:void <init>() -> <init>
org.jcodec.common.ArrayUtil -> org.jcodec.common.ArrayUtil:
    26:30:void shiftLeft1(java.lang.Object[]) -> shiftLeft1
org.jcodec.common.IntArrayList -> org.jcodec.common.IntArrayList:
    25:28:void <init>(int) -> <init>
    37:43:void add(int) -> add
    22:22:org.jcodec.common.IntArrayList createIntArrayList() -> createIntArrayList
    64:71:void fill(int,int,int) -> fill
    60:60:int get(int) -> get
    56:57:void set(int,int) -> set
    74:74:int size() -> size
    31:33:int[] toArray() -> toArray
org.jcodec.common.IntIntMap -> org.jcodec.common.IntIntMap:
    21:24:void <init>() -> <init>
    84:84:int[] createArray(int) -> createArray
    27:39:void put(int,int) -> put
org.jcodec.common.io.BitReader -> org.jcodec.common.io.BitReader:
    20:28:void <init>(java.nio.ByteBuffer) -> <init>
    14:17:org.jcodec.common.io.BitReader createBitReader(java.nio.ByteBuffer) -> createBitReader
    65:73:int read1Bit() -> read1Bit
    39:43:int readInt() -> readInt
    47:60:int readIntSafe() -> readIntSafe
    82:106:int readNBit(int) -> readNBit
org.jcodec.common.io.BitWriter -> org.jcodec.common.io.BitWriter:
    21:24:void <init>(java.nio.ByteBuffer) -> <init>
    35:40:void flush() -> flush
    43:47:void putInt(int) -> putInt
    73:80:void write1Bit(int) -> write1Bit
    50:70:void writeNBit(int,int) -> writeNBit
org.jcodec.common.io.NIOUtils -> org.jcodec.common.io.NIOUtils:
    377:380:java.nio.ByteBuffer duplicate(java.nio.ByteBuffer) -> duplicate
org.jcodec.common.io.VLC -> org.jcodec.common.io.VLC:
    41:46:void <init>(int[],int[]) -> <init>
    49:54:void _invert() -> _invert
    58:83:int invert(int,int,int,org.jcodec.common.IntArrayList,org.jcodec.common.IntArrayList) -> invert
org.jcodec.common.io.VLCBuilder -> org.jcodec.common.io.VLCBuilder:
    31:36:void <init>() -> <init>
    54:55:org.jcodec.common.io.VLC getVLC() -> getVLC
    39:41:org.jcodec.common.io.VLCBuilder set(int,java.lang.String) -> set
    45:50:org.jcodec.common.io.VLCBuilder setInt(int,int,int) -> setInt
org.jcodec.common.io.VLCBuilder$1 -> org.jcodec.common.io.VLCBuilder$1:
    55:55:void <init>(org.jcodec.common.io.VLCBuilder,int[],int[],org.jcodec.common.io.VLCBuilder) -> <init>
org.jcodec.common.model.ColorSpace -> org.jcodec.common.model.ColorSpace:
    14:48:void <clinit>() -> <clinit>
    66:74:void <init>(java.lang.String,int,int[],int[],int[],boolean) -> <init>
    82:86:void calcBitsPerPixel() -> calcBitsPerPixel
    78:78:java.lang.String toString() -> toString
org.jcodec.common.model.Picture -> org.jcodec.common.model.Picture:
    41:68:void <init>(int,int,byte[][],byte[][],org.jcodec.common.model.ColorSpace,int,org.jcodec.common.model.Rect) -> <init>
    33:33:org.jcodec.common.model.Picture createPicture(int,int,byte[][],org.jcodec.common.model.ColorSpace) -> createPicture
    317:328:boolean equals(java.lang.Object) -> equals
    135:135:org.jcodec.common.model.ColorSpace getColor() -> getColor
    148:148:org.jcodec.common.model.Rect getCrop() -> getCrop
    239:239:int getCroppedHeight() -> getCroppedHeight
    235:235:int getCroppedWidth() -> getCroppedWidth
    139:139:byte[][] getData() -> getData
    131:131:byte[] getPlaneData(int) -> getPlaneData
    123:123:int getWidth() -> getWidth
    332:345:boolean planeEquals(org.jcodec.common.model.Picture,int) -> planeEquals
org.jcodec.common.model.Rect -> org.jcodec.common.model.Rect:
    16:21:void <init>(int,int,int,int) -> <init>
    52:67:boolean equals(java.lang.Object) -> equals
    36:36:int getHeight() -> getHeight
    32:32:int getWidth() -> getWidth
    24:24:int getX() -> getX
    28:28:int getY() -> getY
    41:47:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
org.jcodec.common.tools.Debug -> org.jcodec.common.tools.Debug:
    65:65:void <clinit>() -> <clinit>
    58:63:void trace(java.lang.Object[]) -> trace
org.jcodec.common.tools.MathUtil -> org.jcodec.common.tools.MathUtil:
    14:23:void <clinit>() -> <clinit>
    125:126:int abs(int) -> abs
    130:132:int golomb(int) -> golomb
org.slf4j.LoggerFactory -> org.slf4j.LoggerFactory:
    85:290:void <clinit>() -> <clinit>
    105:106:void <init>() -> <init>
    142:181:void bind() -> bind
    219:226:void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int) -> emitReplayOrSubstituionWarning
    256:259:void emitReplayWarning(int) -> emitReplayWarning
    248:253:void emitSubstitutionWarning() -> emitSubstitutionWarning
    195:197:void failedBinding(java.lang.Throwable) -> failedBinding
    296:312:java.util.Set findPossibleStaticLoggerBinderPathSet() -> findPossibleStaticLoggerBinderPathSet
    184:192:void fixSubstituteLoggers() -> fixSubstituteLoggers
    408:428:org.slf4j.ILoggerFactory getILoggerFactory() -> getILoggerFactory
    357:358:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    316:316:boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> isAmbiguousStaticLoggerBinderPathSet
    335:338:boolean isAndroid() -> isAndroid
    131:137:boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> messageContainsOrgSlf4jImplStaticLoggerBinder
    124:128:void performInitialization() -> performInitialization
    200:216:void replayEvents() -> replayEvents
    229:245:void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent) -> replaySingleEvent
    343:346:void reportActualBinding(java.util.Set) -> reportActualBinding
    325:332:void reportMultipleBindingAmbiguity(java.util.Set) -> reportMultipleBindingAmbiguity
    263:285:void versionSanityCheck() -> versionSanityCheck
org.slf4j.event.EventRecodingLogger -> org.slf4j.event.EventRecodingLogger:
    15:19:void <init>(org.slf4j.helpers.SubstituteLogger,java.util.Queue) -> <init>
    99:100:void debug(java.lang.String) -> debug
    103:105:void debug(java.lang.String,java.lang.Object) -> debug
    108:110:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    113:114:void debug(java.lang.String,java.lang.Object[]) -> debug
    117:118:void debug(java.lang.String,java.lang.Throwable) -> debug
    165:166:void info(java.lang.String,java.lang.Throwable) -> info
    95:95:boolean isDebugEnabled() -> isDebugEnabled
    45:45:boolean isTraceEnabled() -> isTraceEnabled
    26:27:void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    31:42:void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable) -> recordEvent
    53:54:void trace(java.lang.String,java.lang.Object) -> trace
    57:58:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    61:62:void trace(java.lang.String,java.lang.Object[]) -> trace
    198:199:void warn(java.lang.String) -> warn
    202:204:void warn(java.lang.String,java.lang.Object) -> warn
    207:208:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    211:212:void warn(java.lang.String,java.lang.Object[]) -> warn
    215:216:void warn(java.lang.String,java.lang.Throwable) -> warn
org.slf4j.event.Level -> org.slf4j.event.Level:
    14:16:void <clinit>() -> <clinit>
    21:24:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    34:34:java.lang.String toString() -> toString
    14:14:org.slf4j.event.Level valueOf(java.lang.String) -> valueOf
    14:14:org.slf4j.event.Level[] values() -> values
org.slf4j.event.SubstituteLoggingEvent -> org.slf4j.event.SubstituteLoggingEvent:
    6:6:void <init>() -> <init>
    43:43:org.slf4j.helpers.SubstituteLogger getLogger() -> getLogger
    63:64:void setArgumentArray(java.lang.Object[]) -> setArgumentArray
    23:24:void setLevel(org.slf4j.event.Level) -> setLevel
    47:48:void setLogger(org.slf4j.helpers.SubstituteLogger) -> setLogger
    39:40:void setLoggerName(java.lang.String) -> setLoggerName
    31:32:void setMarker(org.slf4j.Marker) -> setMarker
    55:56:void setMessage(java.lang.String) -> setMessage
    79:80:void setThreadName(java.lang.String) -> setThreadName
    87:88:void setThrowable(java.lang.Throwable) -> setThrowable
    71:72:void setTimeStamp(long) -> setTimeStamp
org.slf4j.helpers.MarkerIgnoringBase -> org.slf4j.helpers.MarkerIgnoringBase:
    38:38:void <init>() -> <init>
    163:163:java.lang.String toString() -> toString
org.slf4j.helpers.NOPLogger -> org.slf4j.helpers.NOPLogger:
    42:42:void <clinit>() -> <clinit>
    48:49:void <init>() -> <init>
    102:102:void debug(java.lang.String) -> debug
    107:107:void debug(java.lang.String,java.lang.Object) -> debug
    112:112:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    117:117:void debug(java.lang.String,java.lang.Object[]) -> debug
    122:122:void debug(java.lang.String,java.lang.Throwable) -> debug
    55:55:java.lang.String getName() -> getName
    156:156:void info(java.lang.String,java.lang.Throwable) -> info
    96:96:boolean isDebugEnabled() -> isDebugEnabled
    63:63:boolean isTraceEnabled() -> isTraceEnabled
    74:74:void trace(java.lang.String,java.lang.Object) -> trace
    79:79:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    84:84:void trace(java.lang.String,java.lang.Object[]) -> trace
    169:169:void warn(java.lang.String) -> warn
    174:174:void warn(java.lang.String,java.lang.Object) -> warn
    179:179:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    184:184:void warn(java.lang.String,java.lang.Object[]) -> warn
    189:189:void warn(java.lang.String,java.lang.Throwable) -> warn
org.slf4j.helpers.NOPLoggerFactory -> org.slf4j.helpers.NOPLoggerFactory:
    40:42:void <init>() -> <init>
    45:45:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.helpers.NamedLoggerBase -> org.slf4j.helpers.NamedLoggerBase:
    41:41:void <init>() -> <init>
org.slf4j.helpers.SubstituteLogger -> org.slf4j.helpers.SubstituteLogger:
    58:62:void <init>(java.lang.String,java.util.Queue,boolean) -> <init>
    121:122:void debug(java.lang.String) -> debug
    125:126:void debug(java.lang.String,java.lang.Object) -> debug
    129:130:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    133:134:void debug(java.lang.String,java.lang.Object[]) -> debug
    137:138:void debug(java.lang.String,java.lang.Throwable) -> debug
    333:339:org.slf4j.Logger delegate() -> delegate
    310:320:boolean equals(java.lang.Object) -> equals
    344:347:org.slf4j.Logger getEventRecordingLogger() -> getEventRecordingLogger
    65:65:java.lang.String getName() -> getName
    325:325:int hashCode() -> hashCode
    185:186:void info(java.lang.String,java.lang.Throwable) -> info
    117:117:boolean isDebugEnabled() -> isDebugEnabled
    359:368:boolean isDelegateEventAware() -> isDelegateEventAware
    388:388:boolean isDelegateNOP() -> isDelegateNOP
    384:384:boolean isDelegateNull() -> isDelegateNull
    69:69:boolean isTraceEnabled() -> isTraceEnabled
    372:380:void log(org.slf4j.event.LoggingEvent) -> log
    355:356:void setDelegate(org.slf4j.Logger) -> setDelegate
    77:78:void trace(java.lang.String,java.lang.Object) -> trace
    81:82:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    85:86:void trace(java.lang.String,java.lang.Object[]) -> trace
    217:218:void warn(java.lang.String) -> warn
    221:222:void warn(java.lang.String,java.lang.Object) -> warn
    225:226:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    229:230:void warn(java.lang.String,java.lang.Object[]) -> warn
    233:234:void warn(java.lang.String,java.lang.Throwable) -> warn
org.slf4j.helpers.SubstituteLoggerFactory -> org.slf4j.helpers.SubstituteLoggerFactory:
    43:49:void <init>() -> <init>
    77:79:void clear() -> clear
    69:69:java.util.concurrent.LinkedBlockingQueue getEventQueue() -> getEventQueue
    51:57:org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    65:65:java.util.List getLoggers() -> getLoggers
    73:74:void postInitialization() -> postInitialization
org.slf4j.helpers.Util -> org.slf4j.helpers.Util:
    72:72:void <clinit>() -> <clinit>
    122:125:void report(java.lang.String,java.lang.Throwable) -> report
    128:129:void report(java.lang.String) -> report
    53:57:boolean safeGetBooleanSystemProperty(java.lang.String) -> safeGetBooleanSystemProperty
    40:49:java.lang.String safeGetSystemProperty(java.lang.String) -> safeGetSystemProperty
